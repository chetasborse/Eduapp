[{"/home/chetas/projects/se_project/eduapp/src/index.js":"1","/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js":"2","/home/chetas/projects/se_project/eduapp/src/App.js":"3","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js":"4","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js":"5","/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js":"6","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js":"7","/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js":"8","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js":"9","/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js":"10","/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js":"11","/home/chetas/projects/se_project/eduapp/src/redux/store.js":"12","/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js":"13","/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js":"14","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js":"15","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js":"16","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js":"17","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js":"18","/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js":"19","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js":"20","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js":"21","/home/chetas/projects/se_project/eduapp/src/components/Tp.js":"22","/home/chetas/projects/se_project/eduapp/src/components/Sessions/MeetingLinkShare.js":"23","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminReducer.js":"24","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminTypes.js":"25","/home/chetas/projects/se_project/eduapp/src/components/Admin/AdminHome.js":"26","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminActions.js":"27","/home/chetas/projects/se_project/eduapp/src/components/Admin/ForgotPassword.js":"28"},{"size":673,"mtime":1612365787657,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1612017628334,"results":"31","hashOfConfig":"30"},{"size":1464,"mtime":1614872838262,"results":"32","hashOfConfig":"30"},{"size":5322,"mtime":1618059405124,"results":"33","hashOfConfig":"30"},{"size":12695,"mtime":1617901847196,"results":"34","hashOfConfig":"30"},{"size":2941,"mtime":1618059223527,"results":"35","hashOfConfig":"30"},{"size":888,"mtime":1612369906889,"results":"36","hashOfConfig":"30"},{"size":18292,"mtime":1618573371127,"results":"37","hashOfConfig":"30"},{"size":10313,"mtime":1618574159889,"results":"38","hashOfConfig":"30"},{"size":7960,"mtime":1617631377467,"results":"39","hashOfConfig":"30"},{"size":592,"mtime":1617631371367,"results":"40","hashOfConfig":"30"},{"size":534,"mtime":1617633796746,"results":"41","hashOfConfig":"30"},{"size":3451,"mtime":1617786162790,"results":"42","hashOfConfig":"30"},{"size":7261,"mtime":1618575061061,"results":"43","hashOfConfig":"30"},{"size":6035,"mtime":1613276407760,"results":"44","hashOfConfig":"30"},{"size":1056,"mtime":1614932908162,"results":"45","hashOfConfig":"30"},{"size":278,"mtime":1614931759498,"results":"46","hashOfConfig":"30"},{"size":3170,"mtime":1617630544297,"results":"47","hashOfConfig":"30"},{"size":4455,"mtime":1614884885481,"results":"48","hashOfConfig":"30"},{"size":3749,"mtime":1617792620065,"results":"49","hashOfConfig":"30"},{"size":6819,"mtime":1613298555926,"results":"50","hashOfConfig":"30"},{"size":1461,"mtime":1614870245242,"results":"51","hashOfConfig":"30"},{"size":3641,"mtime":1614933172358,"results":"52","hashOfConfig":"30"},{"size":912,"mtime":1617900890240,"results":"53","hashOfConfig":"30"},{"size":128,"mtime":1617900890240,"results":"54","hashOfConfig":"30"},{"size":6983,"mtime":1618574548042,"results":"55","hashOfConfig":"30"},{"size":988,"mtime":1617900890236,"results":"56","hashOfConfig":"30"},{"size":7648,"mtime":1618074058300,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"vzf3x9",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"60"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},"/home/chetas/projects/se_project/eduapp/src/index.js",[],["127","128"],"/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js",[],"/home/chetas/projects/se_project/eduapp/src/App.js",["129","130","131","132","133","134","135","136","137","138","139"],"import React from 'react'\n//import {Provider} from 'react-redux'\nimport './App.css';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport {connect} from 'react-redux'\nimport { checkUser, getInterest, set_all_lang_and_subs } from './redux/Users/userActions';\nimport Tp from './components/Tp';\n//import store from './redux/store';\n\nfunction App(props) {\n\n  axios.defaults.withCredentials = true;\n\n  const [LoggedIn, setLogin] = useState(false);\n  const [Username, setUser] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [all_langs, set_langs] = useState([]);\n  const [all_subs, set_subs] = useState([]);\n\n\n  useEffect(() => {\n    props.checkUser()\n    setLogin(props.loggedIn)\n    setUser(props.username)\n    setPassword(props.password)\n    \n  }, [props.loggedIn])\n\n  return (\n      <div className=\"App\">\n        <Navigation/>\n        {/* <Tp/> */}\n      </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.users.loggedIn,\n    username: state.users.username,\n    password: state.users.password,\n    user_id: state.users.user_id,\n    is_teacher: state.users.is_teacher,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkUser: () => dispatch(checkUser()),\n    // set_all_langs_and_subs: (value) => dispatch(set_all_lang_and_subs(value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js",["140"],"import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom'\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand, \n    NavbarToggler,\n    Nav,\n    NavItem,\n    Container\n} from 'reactstrap';\nimport './Styles.css'\nimport Home from '../HomePage/Home';\nimport Login from '../Users/Login';\nimport Register from '../Users/Register';\nimport Logout from '../Users/Logout';\nimport Profile from '../Users/Profile';\nimport {connect} from 'react-redux';\nimport Request_view from '../Sessions/Request_view';\nimport ForgotPassword from '../Admin/ForgotPassword';\n// import Request_session from '../Sessions/Request_session';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render(){\n        return(\n            <Router>\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\" fixed=\"top\">\n                    <Container>\n                        <NavbarBrand>OpenSchool</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar> \n                                <NavItem>\n                                    <Link className=\"linkclass\" to=\"/\">Home</Link>\n                                </NavItem>\n                                {!this.props.LoggedIn &&\n                                <React.Fragment>\n                                    <NavItem>\n                                        <Link className=\"linkclass\" to=\"/Login\">Login</Link>\n                                    </NavItem> \n                                    <NavItem>\n                                        <Link className=\"linkclass\" to=\"/Register\">Register</Link>\n                                    </NavItem>\n                                </React.Fragment>\n                                }\n                                {\n                                    this.props.LoggedIn &&\n                                    <React.Fragment>\n                                        {   !this.props.is_admin &&\n                                            <NavItem>\n                                                <Link className=\"linkclass\" to=\"/Profile\">Profile</Link>\n                                            </NavItem>\n                                        }\n                                        {/* {\n                                            !this.props.is_teacher &&\n                                            <NavItem>\n                                                <Link className=\"linkclass\" to=\"/Request_Session\">Req_Sess</Link>\n                                            </NavItem>\n                                        } */}\n                                        {\n                                            this.props.is_teacher &&\n                                            <NavItem>\n                                                <Link className=\"linkclass\" to=\"/View_Requests\">Requests</Link>\n                                            </NavItem>\n                                        }\n                                        <NavItem>\n                                            <Link className=\"linkclass\" to=\"/Logout\">Logout</Link>\n                                        </NavItem>\n                                    </React.Fragment>\n                                }       \n                            </Nav> \n                        </Collapse>\n                    </Container>\n                </Navbar>\n                <Switch>  \n                    <Route path=\"/Login\" render={(props) => (!this.props.LoggedIn ? (<Login/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Register\" render={(props) => (!this.props.LoggedIn ? (<Register/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Logout\" render={(props) => (this.props.LoggedIn ? (<Logout/>) : (<Redirect to=\"/Login\"></Redirect>))}/>\n                    <Route path=\"/ForgotPassword\" render={(props) => (!this.props.LoggedIn ? (<ForgotPassword/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Profile\" render={(props) => (this.props.LoggedIn && !this.props.is_admin ? (<Profile/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/View_Requests\" render={(props) => (this.props.LoggedIn ? (this.props.is_teacher ? (<Request_view/>): (<Redirect to=\"/\"></Redirect>)): (<Redirect to=\"/Login\"></Redirect>))}/>\n                    {/* <Route path=\"/Request_Session\" render={(props) => (this.props.LoggedIn ? (!this.props.is_teacher ? (<Request_session/>): (<Redirect to=\"/View_Requests\"></Redirect>)): (<Redirect to=\"/Login\"></Redirect>))}/> */}\n                    <Route path=\"/\" exact component={Home}/>                           \n                </Switch> \n            </Router>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        LoggedIn: state.users.loggedIn,\n        is_teacher: state.users.is_teacher,\n        is_admin: state.users.is_admin\n    }\n}\n\nexport default connect(mapStateToProps)(Navigation)\n\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js",["141","142","143","144","145","146","147","148"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Col, Container, FormGroup, Input, Label, Row } from 'reactstrap';\nimport { fetch_home } from '../../redux/Session/sessionAction';\nimport AdminHome from '../Admin/AdminHome';\nimport MeetingLinkShare from '../Sessions/MeetingLinkShare';\nimport ReqSession from '../Sessions/ReqSession';\nimport SessionCompleted from '../Sessions/SessionCompleted';\nimport Recommendations from './Recommendations';\nimport './Styles.css'\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            show_upcom: true,\n            show_pend: false,\n            show_past: false,\n        }\n    }\n\n    showupcoming = () => {\n        this.setState({\n            show_upcom: true,\n            show_pend: false,\n            show_past: false\n        })\n    }\n\n    showpending = () => {\n        this.setState({\n            show_upcom: false,\n            show_pend: true,\n            show_past: false\n        })\n    }\n\n    showpast = () => {\n        this.setState({\n            show_upcom: false,\n            show_pend: false,\n            show_past: true\n        })\n    }\n\n    refresh = () => {\n        this.props.fetchHome(this.props.user_id, this.props.is_teacher)\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.user_id != this.props.user_id && !this.props.is_admin) {\n            if(this.props.LoggedIn) {\n                this.props.fetchHome(this.props.user_id , this.props.is_teacher)\n            }\n        }\n    }\n\n    render() {\n        \n        const upcoming = this.props.upcoming_sessions.map((up) => (\n            <React.Fragment key={up.session_id}>\n                <Container style={{border: \"1px solid black\"}}>\n                    <Row>\n                        <Col>\n                            <img src={up.image_link} className=\"profilepic2\"></img>\n                        </Col>\n                    </Row>\n                    {   this.props.is_teacher &&\n                        <Row>\n                        <Col>\n                            Student: {up.first_name} {up.last_name}\n                        </Col>\n                        <Col>\n                            Grade: {up.grade}\n                        </Col>\n                        <Col>\n                            Board: {up.board}\n                        </Col>\n                    </Row>}\n                    {   !this.props.is_teacher &&\n                        <Row>\n                        <Col>\n                            Teacher: {up.first_name} {up.last_name}\n                        </Col>\n                        <Col>\n                            Qualification: {up.grade}\n                        </Col>\n                    </Row>}\n                    <Row>\n                        <Col>\n                            Subject: {this.props.all_subjects[up.subject_id - 1].subject_name}\n                            {/* Subject: {this.props.all_subjects.find(sub => sub.id = up.subject_id).subject_name} */}\n                        </Col>\n                        <Col sm = {3}>\n                            Language: {this.props.all_languages[up.language_id - 1].language_name}\n                            {/* Language: {this.props.all_languages.find(lang => lang.id = up.language_id).language_name} */}\n                        </Col>\n                        <Col>\n                            Topic: {up.topic}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            Time Slot: {up.time_slot}\n                        </Col>\n                        <Col>\n                            Date: {up.req_date}\n                        </Col>\n                    </Row>\n                    {\n                        !this.props.is_teacher && \n                        <Row>\n                            <Col>\n                                Meeting Url: {up.meeting_url? <a href={up.meeting_url} target=\"_blank\">{up.meeting_url}</a>: `The mentor hasn't sent meeting url yet. Try refreshing`}\n                            </Col>\n                        </Row>\n                    }\n                    {\n                        this.props.is_teacher &&\n                        (!up.meeting_url ?\n                        <MeetingLinkShare session_id={up.session_id} student_mail={up.email_id} student_first={up.first_name} student_last={up.last_name} topic={up.topic} date={up.req_date} time={up.time_slot}/>: \n                        <Row>\n                            <Col>\n                                Meeting Url: <a href={up.meeting_url} target=\"_blank\">{up.meeting_url}</a>\n                            </Col>\n                        </Row>)\n                    }\n                    {\n                        !this.props.is_teacher &&\n                        <SessionCompleted session_id={up.session_id} teacher_id={up.teacher_id} refresh= {this.refresh} topic= {up.topic} first_name={up.first_name} last_name={up.last_name} email = {up.email_id}/>\n                    }\n                </Container>\n            </React.Fragment>\n        ))\n\n        const pending = this.props.pending_requests.map((req) => (\n            <React.Fragment key={req.request_id}>\n                <Container style={{border: \"1px solid black\"}}>\n                    <Row>\n                        <Col>\n                            {/* Subject: {req.subject_id} */}\n                            Subject: {this.props.all_subjects[req.subject_id - 1].subject_name}\n                        </Col>\n                        <Col>\n                            Topic: {req.topic}\n                        </Col>\n                        <Col>\n                            Language: {this.props.all_languages[req.language_id - 1].language_name}\n                            {/* Language: {req.subject_id} */}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            TimeSlot: {req.time_slot}\n                        </Col>\n                        <Col>\n                        Date: {req.req_date}\n                        </Col>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        ))\n\n        const past = this.props.past_sessions.map((up) => (\n            <React.Fragment key={up.session_id}>\n                <Container style={{border: \"1px solid black\"}}>\n                    <Row>\n                        <Col>\n                            <img src={up.image_link} className=\"profilepic2\"></img>\n                        </Col>\n                    </Row>\n                    {   this.props.is_teacher &&\n                        <Row>\n                        <Col>\n                            Student: {up.first_name} {up.last_name}\n                        </Col>\n                        <Col>\n                            Grade: {up.grade}\n                        </Col>\n                        <Col>\n                            Board: {up.board}\n                        </Col>\n                    </Row>}\n                    {   !this.props.is_teacher &&\n                        <Row>\n                        <Col>\n                            Teacher: {up.first_name} {up.last_name}\n                        </Col>\n                        <Col>\n                            Qualification: {up.grade}\n                        </Col>\n                    </Row>}\n                    <Row>\n                        <Col>\n                            Subject: {this.props.all_subjects[up.subject_id - 1].subject_name}\n                            {/* Subject: {this.props.all_subjects.find(sub => sub.id = up.subject_id).subject_name} */}\n                        </Col>\n                        <Col sm = {3}>\n                            Language: {this.props.all_languages[up.language_id - 1].language_name}\n                            {/* Language: {this.props.all_languages.find(lang => lang.id = up.language_id).language_name} */}\n                        </Col>\n                        <Col>\n                            Topic: {up.topic}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            Time Slot: {up.time_slot}\n                        </Col>\n                        <Col>\n                            Date: {up.req_date}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <h3>Ratings for this session: {up.review}/5</h3>\n                    </Row>\n                </Container>\n            </React.Fragment>\n        ))\n\n        return(\n            <div className=\"toplookout\">\n                {\n                    this.props.is_admin &&\n                    <React.Fragment>\n                        <AdminHome/>\n                    </React.Fragment>\n                }\n                {\n                    !this.props.is_admin &&\n                    <React.Fragment>\n                    <Container>\n                        <Col style={{textAlign: \"left\"}}>\n                            <h2 className=\"dashboard\">Dashboard</h2>\n                            {this.props.LoggedIn && !this.props.is_teacher &&\n                                <ReqSession/>\n                            }\n                        </Col>\n                        {\n                            this.props.LoggedIn &&\n                        <Col style={{textAlign: \"right\"}}>\n                            <Button color=\"danger\" onClick={this.refresh}>Refresh Tab</Button>\n                        </Col>\n                        }\n                    </Container>\n                    <br></br>\n                    {\n                        this.props.LoggedIn &&\n                        <Container style={{border: \"1px solid #cecece\", height: \"500px\", overflow: \"auto\"}}>\n                            <Row>\n                                <Col>\n                                    <Button color=\"warning\" onClick={this.showupcoming}>Upcoming Sessions</Button>\n                                </Col>\n                                {\n                                    !this.props.is_teacher &&\n                                    <Col>\n                                        <Button color=\"warning\" onClick={this.showpending}>Pending Requests</Button>\n                                    </Col>\n                                }\n                                <Col>\n                                    <Button color=\"warning\" onClick={this.showpast}>Past Sessions</Button>\n                                </Col>\n                            </Row>\n                            <Row>\n                                {   this.state.show_upcom &&\n                                    (this.props.upcoming_sessions.length === 0 ?\n                                    <Container style={{textAlign: \"center\"}}>No upcoming Sessions</Container> : <Container>{upcoming}</Container>)\n                                }\n                                {   this.state.show_pend &&\n                                    (this.props.pending_requests.length === 0 ?\n                                    <Container style={{textAlign: \"center\"}}>No Pending Requests</Container> : <Container>{pending}</Container>)\n                                }\n                                {   this.state.show_past &&\n                                    (this.props.past_sessions.length === 0 ?\n                                    <Container style={{textAlign: \"center\"}}>No Past Sessions</Container> : <Container>{past}</Container>)\n                                }\n                            </Row>\n                        </Container>\n                    }\n                    </React.Fragment>\n                }\n                {\n                    this.props.LoggedIn && !this.props.is_teacher && !this.props.is_admin &&\n                    <Recommendations/>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        LoggedIn: state.users.loggedIn,\n        is_teacher: state.users.is_teacher,\n        upcoming_sessions: state.session.upcoming_sessions,\n        pending_requests: state.session.pending_requests,\n        past_sessions: state.session.past_sessions,\n        user_id: state.users.user_id,\n        all_subjects: state.users.all_subjects,\n        all_languages: state.users.all_languages,\n        is_admin: state.users.is_admin \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchHome : (id, is_teacher) => dispatch(fetch_home(id, is_teacher))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js",["149"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input, Col, Container } from 'reactstrap';\nimport './Styles.css'\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport { login } from '../../redux/Users/userActions';\n\n\naxios.defaults.withCredentials = true;\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: '',\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        var body = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n        axios.post(\"http://localhost:5000/users/login\", body)\n        .then(response => {\n            \n            if(typeof response.data.message !== 'undefined') {\n                alert(response.data.message)\n            }\n            else {\n                alert(\"Welcome user\")\n                this.props.login(response.data[0])\n                console.log(response.data[0])\n            }\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    forgotPass = ()  => {\n        var otp = Math.floor(Math.random() * 1000000)\n        var prom = prompt(\"A mail has been sent with the otp. Enter the otp here to continue\");\n        if(prom == otp) {\n            console.log(\"otp matches\")\n        }\n    }\n\n    render() {\n        return(\n\n        <div className=\"toplookout\">\n            <p>Login Form</p>\n            <Container>\n            <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                    <Label for=\"username\" sm={2}>Username</Label>\n                    <Col sm={10}>\n                        <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter Username\" value={this.state.username} onChange={(e) => this.setState({username: e.target.value})}></Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Label for=\"password\" sm={2}>Password</Label>\n                    <Col sm={10}>\n                        <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Passsword\" value={this.state.password} onChange={(e) => this.setState({password: e.target.value})}></Input>\n                    </Col>\n                </FormGroup>\n                <FormGroup>\n                        Don't have an account? <Link to=\"/Register\">Sign up</Link>\n                </FormGroup>\n                <FormGroup>\n                        <Link className=\"link\" to=\"/ForgotPassword\">Forgot Password?</Link>\n                </FormGroup>\n                <Button>Login</Button>\n            </Form>\n            </Container>\n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (data) => dispatch(login(data))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js",["150","151","152","153"],"/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js",["154","155"],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js",["156","157"],"import { ADD_LANGUAGE, ADD_SUBJECT, DELETE_LANGUAGE, DELETE_SUBJECT, ERROR, GET_LANGUAGE, GET_STUDENT, GET_SUBJECT, GET_TEACHER, SET_ALL_LANG, SET_ALL_SUB ,LOGIN, LOGOUT, SET_LOGIN, GET_ADMIN } from \"./userTypes\"\nimport axios from 'axios'\n\nexport const checkUser = (dispatch) => {\n    return (dispatch) => {\n        axios.get(\"http://localhost:5000/users/login\")\n        .then((response) => {\n            if(response.data.loggedIn === true) {\n                dispatch(login(response.data.user[0]))\n                //console.log(response.data.user[0].user_type)\n                \n                if(response.data.user[0].user_type == 0) {\n                    axios.get(\"http://localhost:5000/users/student\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getstudent(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/student_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                        //console.log(resp.data)\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                else if(response.data.user[0].user_type == 2) {\n                    dispatch(getadmin());\n                }\n                else {\n                    axios.get(\"http://localhost:5000/users/teacher\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getteacher(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/teacher_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/languages\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getlanguage(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n            }\n            else {\n                dispatch(logout)\n            }\n        })\n        .catch(error => {\n            dispatch(err(error))\n        })\n        axios.get(\"http://localhost:5000/users/all_subjects\")\n        .then((response) => {\n            // set_subs(response.data)\n            dispatch(set_all_subs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n        axios.get(\"http://localhost:5000/users/all_languages\")\n        .then((response) => {\n            dispatch(set_all_langs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n    }\n}\n\nexport const getSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub.id\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/add_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/add_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const getLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang.id\n        }\n        axios.post(\"http://localhost:5000/users/add_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(addLanguage({language_id: lang.id, language_name: lang.lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\n\nexport const removeSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/del_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/del_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const removeLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang\n        }\n        axios.post(\"http://localhost:5000/users/del_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(deleteLanguage({language_id: lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\nexport const set_all_langs = (value) => {\n    return {\n        type: SET_ALL_LANG,\n        payload:value\n    }\n}\n\nexport const set_all_subs = (value) => {\n    return {\n        type: SET_ALL_SUB,\n        payload:value\n    }\n}\n\n\nexport const login = (value) => {\n    return {\n        type: LOGIN,\n        payload: value\n    }\n}\n\nexport const getstudent = (value) => {\n    return {\n        type: GET_STUDENT,\n        payload: value\n    }\n}\n\nexport const getteacher = (value) => {\n    return {\n        type: GET_TEACHER,\n        payload: value\n    }\n}\n\nexport const getadmin = () => {\n    return {\n        type: GET_ADMIN\n    }\n}\n\nexport const getsubject = (value) => {\n    return {\n        type: GET_SUBJECT,\n        payload: value\n    }\n}\n\nexport const getlanguage = (value) => {\n    return {\n        type: GET_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: LOGOUT,\n    }\n}\n\nexport const err = (error) => {\n    return {\n        type: ERROR,\n        payload: error.message\n    }\n}\n\nexport const setLogin = () => {\n    return {\n        type: SET_LOGIN\n    }\n}\n\nexport const addSubject = (value) => {\n    return {\n        type: ADD_SUBJECT,\n        payload: value\n    }\n}\n\nexport const addLanguage = (value) => {\n    return {\n        type: ADD_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const deleteSubject = (value) => {\n    return {\n        type: DELETE_SUBJECT,\n        payload: value\n    }\n}\n\nexport const deleteLanguage = (value) => {\n    return {\n        type: DELETE_LANGUAGE,\n        payload: value\n    }\n}","/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/store.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js",["158","159"],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js",["160","161","162","163"],"import axios from 'axios';\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { send_request } from '../../redux/Session/sessionAction';\n\nclass ReqSession extends Component {\n    constructor() {\n        super() \n        this.state = {\n            modal: false,\n            subject_id: '',\n            topic: '',\n            time_slot: '',\n            date_slot: '',\n            lang: '',\n            subjects: [],\n            languages: []\n        }\n    }\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    handle = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handle1 = e => {\n        this.setState({\n            [e.target.name]: e.target[e.target.selectedIndex].value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state)\n\n        var body = {\n            sender_id: this.props.user_id,\n            subject_id: this.state.subject_id,\n            topic: this.state.topic,\n            time_slot: this.state.time_slot,\n            req_date: this.state.date_slot,\n            language_id: this.state.language_id,\n            approved: 0,\n            mentor_specific: -1\n        }\n        this.props.send_request(body)\n\n        this.setState({\n            modal: false,\n            subject_id: '',\n            topic: '',\n            time_slot: '',\n            req_date: '',\n            language_id: '',\n            subjects: [],\n            languages: []\n        })\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if(prevState.modal != this.state.modal && this.state.modal) {\n            this.setState({\n                languages: this.props.all_languages,\n                subjects: this.props.all_subjects\n            })\n        }\n    }\n\n    render() {\n\n        var all_subjects = this.state.subjects.map((subject) => (\n            <option key={subject.subject_id} value={subject.subject_id} id={subject.subject_id}>{subject.subject_name}</option>\n        ))\n\n        var all_languages = this.state.languages.map((language) => (\n            <option key={language.language_id} value={language.language_id} id={language.language_id}>{language.language_name}</option>\n        ))\n\n        return(\n            <React.Fragment>\n\n                <div>\n                    <Button color=\"danger\" onClick={this.toggle}>Request a Session</Button>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader>Session Request</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup row>\n                                <Label for=\"subject_id\" sm={2}>Subject</Label>\n                                <Col sm={10}>\n                                    <Input type=\"select\" name=\"subject_id\" id=\"subject\" onChange={this.handle1}>\n                                        <option value=\"\" disabled selected>Select the subject</option>\n                                        {\n                                            all_subjects\n                                        }\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"topic\" sm={2}>Topic</Label>\n                                <Col sm={10}>\n                                    <Input type=\"text\" name=\"topic\" id=\"topic\" placeholder=\"Enter the topic\" value={this.state.topic} onChange={this.handle}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"time_slot\" sm={2}>Time Slot</Label>\n                                <Col sm={10}>\n                                    <Input type=\"text\" name=\"time_slot\" id=\"time_slot\" value={this.state.time_slot} onChange={this.handle} placeholder=\"Format: hh:mm to hh:mm\"></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"date_slot\" sm={2}>Date</Label>\n                                <Col sm={10}>\n                                    <Input type=\"date\" name=\"date_slot\" id=\"date_slot\" value={this.state.date_slot} onChange={this.handle}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"lang\" sm={2}>Language</Label>\n                                <Col sm={10}>\n                                    <Input type=\"select\" name=\"language_id\" id=\"lang\" onChange={this.handle1}>\n                                        <option value=\"\" disabled selected>Select the language</option>\n                                        {\n                                            all_languages\n                                        }\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.handleSubmit}>Request</Button>\n                            <Button color=\"danger\" onClick={this.toggle}>Back</Button>\n                        </Form>\n                    </ModalBody>\n\n\n\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.users.user_id,\n        all_subjects: state.users.all_subjects,\n        all_languages: state.users.all_languages, \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        send_request: (body) => dispatch(send_request(body))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReqSession);","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js",["164"],"import { ADD_PENDING_SESSION, SET_MEETING_URL, SET_PAST_SESSIONS, SET_PENDING_REQUESTS, SET_UPCOMING_SESSIONS } from \"./sessionTypes\"\n\nconst sessions_initial_State = {\n    upcoming_sessions: [],\n    pending_requests: [],\n    past_sessions: [],\n}\n\nconst sessionReducer = (state = sessions_initial_State, action) => {\n    switch(action.type) {\n        case SET_UPCOMING_SESSIONS: return {\n            ...state,\n            upcoming_sessions: action.payload\n        }\n        case SET_PENDING_REQUESTS: return {\n            ...state,\n            pending_requests: action.payload\n        }\n        case SET_PAST_SESSIONS: return {\n            ...state,\n            past_sessions: action.payload\n        }\n        case ADD_PENDING_SESSION: return {\n            ...state,\n            pending_requests: [...state.pending_requests, action.payload]\n        }\n        // case SET_MEETING_URL: return {\n        //     ...state,\n        //     upcoming_sessions: state.upcoming_sessions\n        // }\n        default: return state\n    }\n}\n\nexport default sessionReducer","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js",[],"/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js",["165","166","167"],"import axios from 'axios'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Col, Container, Row } from 'reactstrap'\nimport ReqIndiSession from '../Sessions/ReqIndiSession'\n\nclass Recommendations extends Component {\n    constructor() {\n        super()\n        this.state = {\n            recomms : []\n        }\n    }\n\n    componentDidMount() {\n        // if(this.props.loggedIn)\n        if(!this.props.is_admin && this.props.loggedIn) {\n            axios.get(\"http://localhost:5000/users/recommendations\", {\n                params : {\n                    student_id: this.props.user_id\n                }\n            })\n            .then(response => {\n                this.setState({\n                    recomms: response.data\n                })\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.user_id != this.props.user_id && !this.props.is_admin) {\n            axios.get(\"http://localhost:5000/users/recommendations\", {\n            params : {\n                student_id: this.props.user_id\n            }\n            })\n            .then(response => {\n                this.setState({\n                    recomms: response.data\n                })\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n            }\n    }\n\n    render() {\n\n        const recommens = this.state.recomms.map(rec => (\n            <React.Fragment key={rec.user_id}>\n                <Container style={{border: \"1px solid #cece\"}}>\n                    <Row>\n                        <Col>\n                            <img src={rec.image_link} className=\"profilepic2\"></img>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            Teacher: {rec.first_name} {rec.last_name}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            Qualification: {rec.qualification}\n                        </Col>\n                        <Col>\n                            Rating_points: {rec.rating_points}\n                        </Col>\n                        <Col>\n                            Sessions Count: {rec.sessions_taken}\n                        </Col>\n                    </Row>\n                    {/* <Button color=\"success\" onClick={}>Request session from {rec.first_name}</Button> */}\n                    <ReqIndiSession {...rec}/>\n                </Container>\n            </React.Fragment>\n        ))\n\n        return(\n            <Container>\n                {\n                    <React.Fragment>\n                        <Row>\n                            <Col style={{textAlign: \"left\", marginTop: \"30px\"}}>\n                                <h2 className=\"dashboard\">Recommendations</h2>\n                            </Col>\n                        </Row>\n                        {\n                            this.state.recomms.length === 0 ? <h3>Add favorite subjects in profile to see recommendations</h3>\n                            :\n                            <Row>\n                                {\n                                    recommens\n                                }\n                            </Row>\n                        }\n                    </React.Fragment>\n                }\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.users.user_id,\n        loggedin: state.users.loggedIn,\n        is_admin: state.admin.is_admin      \n    }\n}\n\nexport default connect(mapStateToProps)(Recommendations) ","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js",["168","169","170"],"import axios from 'axios';\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { send_request } from '../../redux/Session/sessionAction';\n\nclass ReqIndiSession extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n            modal: false,\n            subject_id: '',\n            topic: '',\n            time_slot: '',\n            date_slot: '',\n            lang: '',\n            subjects: [],\n            languages: []\n        }\n    }\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    handle = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handle1 = e => {\n        this.setState({\n            [e.target.name]: e.target[e.target.selectedIndex].value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state)\n\n        var body = {\n            sender_id: this.props.user_id,\n            subject_id: this.state.subject_id,\n            topic: this.state.topic,\n            time_slot: this.state.time_slot,\n            req_date: this.state.date_slot,\n            language_id: this.state.language_id,\n            approved: 0,\n            mentor_specific: this.props.t_id\n        }\n        this.props.send_request(body)\n\n        this.setState({\n            modal: false,\n            subject_id: '',\n            topic: '',\n            time_slot: '',\n            req_date: '',\n            language_id: '',\n            subjects: [],\n            languages: []\n        })\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if(prevState.modal != this.state.modal && this.state.modal) {\n            axios.get(\"http://localhost:5000/users/languages\", {\n                params: {\n                    id: this.props.t_id\n                }\n            })\n            .then(response => {\n                this.setState({\n                    languages: response.data\n                })\n                axios.get(\"http://localhost:5000/users/teacher_subjects\", {\n                    params: {\n                        id: this.props.t_id\n                    }\n                })\n                .then(response => {\n                    this.setState({\n                        subjects: response.data\n                    })\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n\n            })\n            .catch(err => {\n                console.log(err)\n            })\n            \n        }\n    }\n\n    render() {\n        \n\n        var all_subjects = this.state.subjects.map((subject) => (\n            <option key={subject.subject_id} value={subject.subject_id} id={subject.subject_id}>{subject.subject_name}</option>\n        ))\n\n        var all_languages = this.state.languages.map((language) => (\n            <option key={language.language_id} value={language.language_id} id={language.language_id}>{language.language_name}</option>\n        ))\n\n        return(\n            <React.Fragment>\n\n                <div>\n                    <Button color=\"success\" onClick={this.toggle}>Request session from {this.props.first_name} {this.props.last_name}</Button>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader>Session Request</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup row>\n                                <Label for=\"subject_id\" sm={2}>Subject</Label>\n                                <Col sm={10}>\n                                    <Input type=\"select\" name=\"subject_id\" id=\"subject\" onChange={this.handle1}>\n                                        <option value=\"\" disabled selected>Select the subject</option>\n                                        {\n                                            all_subjects\n                                        }\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"topic\" sm={2}>Topic</Label>\n                                <Col sm={10}>\n                                    <Input type=\"text\" name=\"topic\" id=\"topic\" placeholder=\"Enter the topic\" value={this.state.topic} onChange={this.handle}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"time_slot\" sm={2}>Time Slot</Label>\n                                <Col sm={10}>\n                                    <Input type=\"text\" name=\"time_slot\" id=\"time_slot\" value={this.state.time_slot} onChange={this.handle} placeholder=\"Format: hh:mm to hh:mm\"></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"date_slot\" sm={2}>Date</Label>\n                                <Col sm={10}>\n                                    <Input type=\"date\" name=\"date_slot\" id=\"date_slot\" value={this.state.date_slot} onChange={this.handle}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"lang\" sm={2}>Language</Label>\n                                <Col sm={10}>\n                                    <Input type=\"select\" name=\"language_id\" id=\"lang\" onChange={this.handle1}>\n                                        <option value=\"\" disabled selected>Select the language</option>\n                                        {\n                                            all_languages\n                                        }\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.handleSubmit}>Request</Button>\n                            <Button color=\"danger\" onClick={this.toggle}>Back</Button>\n                        </Form>\n                    </ModalBody>\n\n\n\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.users.user_id,\n        all_subjects: state.users.all_subjects,\n        all_languages: state.users.all_languages, \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        send_request: (body) => dispatch(send_request(body))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReqIndiSession);\n","/home/chetas/projects/se_project/eduapp/src/components/Tp.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/MeetingLinkShare.js",["171"],"import axios from 'axios'\nimport React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Col, FormGroup, Input, Label, Row } from 'reactstrap'\nimport { fetch_home } from '../../redux/Session/sessionAction'\n\nclass MeetingLinkShare extends Component {\n    constructor() {\n        super()\n        this.state = {\n            meetingUrL: \"\",\n            urlsent: false\n        }\n    }\n\n    changeurl = (e) => {\n        this.setState({\n            meetingUrL: e.target.value\n        })\n    }\n\n    share = () => {\n        console.log(this.state)\n        var body = {\n            meeting_url: this.state.meetingUrL,\n            session_id: this.props.session_id\n        }\n        axios.post(\"http://localhost:5000/session/send_meeting_url\", body)\n        .then(res => {\n            // this.setState({\n            //     urlsent: true\n            // })\n            var bod = {\n                type: \"student_send_url\",\n                receiver: this.props.student_mail,\n                first_name: this.props.student_first,\n                last_name: this.props.student_last,\n                topic: this.props.topic,\n                date: this.props.date,\n                time: this.props.time,\n                meeting_url: this.state.meetingUrL \n            }\n            axios.post(\"http://localhost:5000/users/sendmail\", bod)\n            .then(re => {\n                console.log(\"Email sent\")\n            })\n            .catch(er => {\n                console.log(\"mail not sent\")\n            })\n            bod.type = \"teacher_send_url\"\n            bod.first_name = this.props.first_name\n            bod.last_name = this.props.last_name\n            bod.receiver = this.props.email\n            axios.post(\"http://localhost:5000/users/sendmail\", bod)\n            .then(re => {\n                console.log(\"Email sent\")\n            })\n            .catch(er => {\n                console.log(\"mail not sent\")\n            })\n            this.props.fetchHome(this.props.user_id, this.props.is_teacher)\n        })\n        .catch(err=> {\n            console.log(err.message)\n        })\n    }\n\n\n    render() {\n        return(\n            <React.Fragment>\n                {\n                    !this.state.urlsent &&\n                    <FormGroup row>\n                        <Label for=\"meeting\" sm={2}>Meeting URL</Label>\n                        <Col sm={8}>\n                            <Input type=\"text\" name=\"meeting\" id=\"meeting\" placeholder=\"Share meeting url here\" onChange={this.changeurl} value={this.state.meetingUrL}></Input>\n                        </Col>\n                        <Col sm={2}>\n                            <Button color=\"success\" onClick={this.share}>Share</Button>\n                        </Col>\n                    </FormGroup>\n                }\n                {/* {\n                    this.state.urlsent &&\n                    <Row>\n                        <Col>\n                            Meeting Url: <a href={this.state.meetingUrL} target=\"_blank\">{this.state.meetingUrL}</a>\n                        </Col>\n                    </Row>\n                } */}\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        first_name: state.users.first_name,\n        last_name: state.users.last_name,\n        email: state.users.email_id,\n        user_id: state.users.user_id,\n        is_teacher: state.users.is_teacher\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchHome : (id, is_teacher) => dispatch(fetch_home(id, is_teacher))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingLinkShare);","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminReducer.js",["172"],"import sessionReducer from \"../Session/sessionReducer\"\nimport { SET_TEACHERS, SET_STUDENTS, SET_VERIFIED } from \"./adminTypes\"\n\nconst admin_initialState = {\n    teachers: [],\n    students:[]\n}\n\nconst adminReducer = (state = admin_initialState, action) => {\n    switch(action.type) {\n        case SET_TEACHERS: return {\n            ...state,\n            teachers: action.payload\n        }\n        case SET_STUDENTS: return {\n            ...state,\n            students: action.payload\n        } \n        case SET_VERIFIED:  {\n            const index = state.teachers.findIndex(teacher => teacher.user_id === action.payload.user_id)\n            const newArray = [...state.teachers]\n            newArray[index].verfied = action.payload.verify\n            return {\n                ...state,\n                teachers: newArray\n            }\n        }\n        default: return state\n    }\n}\n\nexport default adminReducer;","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Admin/AdminHome.js",["173","174","175"],"/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminActions.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Admin/ForgotPassword.js",["176","177","178"],"import axios from 'axios'\nimport React, {Component} from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Button, Col, Collapse, Container, FormGroup, Input, Label, Row } from 'reactstrap'\n\nclass ForgotPassword extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            sendotp: false,\n            username: '',\n            otp: '',\n            email: '',\n            generatedOTP: '',\n            enable_password: false,\n            new_password: '',\n            user_type: '',\n            pass_changed: false\n        }\n    }\n\n    sendOTP = () => {\n        this.setState({\n            generatedOTP: Math.floor(Math.random() * 1000000)\n        })\n        axios.get(\"http://localhost:5000/users/user\", {\n            params: {\n                username: this.state.username\n            }\n        })\n        .then(response => {\n            if(typeof response.data.message !== 'undefined') {\n                alert(response.data.message)\n            }\n\n            else {\n                if(response.data[0].user_type == 0) {\n                    axios.get(\"http://localhost:5000/users/student\", {\n                        params: {\n                            id: response.data[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        this.setState({\n                            email: resp.data[0].email_id,\n                            user_type: 0\n                        })\n                        var body = {\n                            type: \"otp\",\n                            receiver: resp.data[0].email_id,\n                            first_name: resp.data[0].first_name,\n                            last_name: resp.data[0].last_name,\n                            otp: this.state.generatedOTP\n                        }\n                        console.log(body)\n                        axios.post(\"http://localhost:5000/users/sendmail\", body)\n                        .then(re => {\n                            console.log(\"Email sent successfully\")\n                        })\n                        .catch(err => {\n                            console.log(\"Error in sending mail\")\n                        })\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                else {\n                    axios.get(\"http://localhost:5000/users/teacher\", {\n                        params: {\n                            id: response.data[0].user_id,\n                            user_type: 1\n                        }\n                    })\n                    .then((resp) => {\n                        this.setState({\n                            email: resp.data[0].email_id\n                        })\n                        var body = {\n                            type: \"otp\",\n                            receiver: resp.data[0].email_id,\n                            first_name: resp.data[0].first_name,\n                            last_name: resp.data[0].last_name,\n                            otp: this.state.generatedOTP\n                        }\n                        axios.post(\"http://localhost:5000/users/sendmail\", body)\n                        .then(re => {\n                            console.log(\"Email sent successfully\")\n                        })\n                        .catch(err => {\n                            console.log(\"Error in sending mail\")\n                        })\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                this.setState({\n                    sendotp: true,\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n    }\n\n    checkOTP = () => {\n        if(this.state.generatedOTP == this.state.otp) {\n            this.setState({\n                enable_password: true\n            })\n        }\n        else {\n            alert(\"No match\")\n        }\n    }\n\n    changePassword = () => {\n        var body = {\n            username: this.state.username,\n            password: this.state.new_password,\n            user_type: this.state.user_type\n        }\n        axios.post(\"http://localhost:5000/users/resetPassword\", body)\n        .then(response => {\n            alert(\"Password has been changed\")\n            this.setState({\n                sendotp: false,\n                username: '',\n                otp: '',\n                email: '',\n                generatedOTP: '',\n                enable_password: false,\n                new_password: '',\n                user_type: '',\n                pass_changed: true\n            })\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n    }\n\n    render() {\n        return(\n\n            <Container className=\"toplookout\">\n                <h2>Forgot Password?</h2>\n                {   !this.state.sendotp &&\n                    <React.Fragment>\n                        <FormGroup row>\n                            <Label for=\"username\" sm={2}>Username:</Label>\n                            <Col sm={10}>\n                                <Input placeholder=\"Enter your username\" id=\"username\" value={this.state.username} onChange={(e) => this.setState({username: e.target.value})}></Input>      \n                            </Col>\n                        </FormGroup>    \n                        <Button onClick={this.sendOTP} style={{marginBottom: \"20px\"}}>Send OTP</Button>\n                    </React.Fragment>\n                }\n                    \n                <Collapse isOpen={this.state.sendotp}>\n                    {   !this.state.enable_password &&\n                        <React.Fragment>\n                            <p>An OTP has been mailed to <b>{this.state.email}</b></p><p> Please check your email</p>\n                            <FormGroup row>\n                                <Label for=\"otp\" sm={2}>OTP:</Label>\n                                <Col sm={10}>\n                                    <Input placeholder=\"Enter OTP here\" id=\"otp\" value={this.state.otp} onChange={(e) => this.setState({otp: e.target.value})}></Input>      \n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.checkOTP}>Submit</Button>\n                        </React.Fragment>\n                    }\n                    {\n                        this.state.enable_password &&\n                        <React.Fragment>\n                            <p>Enter your new Password</p>\n                            <FormGroup row>\n                                <Label for=\"password\" sm={2}>New Password:</Label>\n                                <Col sm={10}>\n                                    <Input type=\"password\" placeholder=\"Enter new Password\" id=\"password\" value={this.state.new_password} onChange={(e) => this.setState({new_password: e.target.value})}></Input>      \n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.changePassword}>Change Password</Button>\n                        </React.Fragment>\n                    }\n                </Collapse>\n                {\n                    this.state.pass_changed &&\n                    <Switch>  \n                        <Route path=\"/ForgotPassword\" render={(props) => (<Redirect to=\"/Login\"></Redirect>)}/>\n                    </Switch>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default ForgotPassword",{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":8,"column":21,"nodeType":"185","messageId":"186","endLine":8,"endColumn":32},{"ruleId":"183","severity":1,"message":"187","line":8,"column":34,"nodeType":"185","messageId":"186","endLine":8,"endColumn":55},{"ruleId":"183","severity":1,"message":"188","line":9,"column":8,"nodeType":"185","messageId":"186","endLine":9,"endColumn":10},{"ruleId":"183","severity":1,"message":"189","line":16,"column":10,"nodeType":"185","messageId":"186","endLine":16,"endColumn":18},{"ruleId":"183","severity":1,"message":"190","line":17,"column":10,"nodeType":"185","messageId":"186","endLine":17,"endColumn":18},{"ruleId":"183","severity":1,"message":"191","line":18,"column":10,"nodeType":"185","messageId":"186","endLine":18,"endColumn":18},{"ruleId":"183","severity":1,"message":"192","line":19,"column":10,"nodeType":"185","messageId":"186","endLine":19,"endColumn":19},{"ruleId":"183","severity":1,"message":"193","line":19,"column":21,"nodeType":"185","messageId":"186","endLine":19,"endColumn":30},{"ruleId":"183","severity":1,"message":"194","line":20,"column":10,"nodeType":"185","messageId":"186","endLine":20,"endColumn":18},{"ruleId":"183","severity":1,"message":"195","line":20,"column":20,"nodeType":"185","messageId":"186","endLine":20,"endColumn":28},{"ruleId":"196","severity":1,"message":"197","line":29,"column":6,"nodeType":"198","endLine":29,"endColumn":22,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":94,"column":118,"nodeType":"202","endLine":94,"endColumn":133},{"ruleId":"183","severity":1,"message":"203","line":3,"column":34,"nodeType":"185","messageId":"186","endLine":3,"endColumn":43},{"ruleId":"183","severity":1,"message":"204","line":3,"column":45,"nodeType":"185","messageId":"186","endLine":3,"endColumn":50},{"ruleId":"183","severity":1,"message":"205","line":3,"column":52,"nodeType":"185","messageId":"186","endLine":3,"endColumn":57},{"ruleId":"206","severity":1,"message":"207","line":52,"column":30,"nodeType":"208","messageId":"209","endLine":52,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":66,"column":29,"nodeType":"202","endLine":66,"endColumn":78},{"ruleId":"212","severity":1,"message":"213","line":115,"column":63,"nodeType":"202","endLine":115,"endColumn":104},{"ruleId":"212","severity":1,"message":"213","line":125,"column":46,"nodeType":"202","endLine":125,"endColumn":87},{"ruleId":"210","severity":1,"message":"211","line":170,"column":29,"nodeType":"202","endLine":170,"endColumn":78},{"ruleId":"206","severity":1,"message":"214","line":48,"column":17,"nodeType":"208","messageId":"209","endLine":48,"endColumn":19},{"ruleId":"183","severity":1,"message":"215","line":5,"column":34,"nodeType":"185","messageId":"186","endLine":5,"endColumn":45},{"ruleId":"206","severity":1,"message":"207","line":113,"column":48,"nodeType":"208","messageId":"209","endLine":113,"endColumn":50},{"ruleId":"183","severity":1,"message":"216","line":154,"column":73,"nodeType":"185","messageId":"186","endLine":154,"endColumn":83},{"ruleId":"210","severity":1,"message":"211","line":211,"column":29,"nodeType":"202","endLine":211,"endColumn":85},{"ruleId":"183","severity":1,"message":"217","line":5,"column":27,"nodeType":"185","messageId":"186","endLine":5,"endColumn":33},{"ruleId":"206","severity":1,"message":"207","line":116,"column":31,"nodeType":"208","messageId":"209","endLine":116,"endColumn":33},{"ruleId":"206","severity":1,"message":"214","line":12,"column":52,"nodeType":"208","messageId":"209","endLine":12,"endColumn":54},{"ruleId":"206","severity":1,"message":"214","line":37,"column":57,"nodeType":"208","messageId":"209","endLine":37,"endColumn":59},{"ruleId":"206","severity":1,"message":"214","line":152,"column":40,"nodeType":"208","messageId":"209","endLine":152,"endColumn":42},{"ruleId":"206","severity":1,"message":"214","line":162,"column":44,"nodeType":"208","messageId":"209","endLine":162,"endColumn":46},{"ruleId":"183","severity":1,"message":"218","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":13},{"ruleId":"183","severity":1,"message":"219","line":4,"column":49,"nodeType":"185","messageId":"186","endLine":4,"endColumn":60},{"ruleId":"183","severity":1,"message":"220","line":4,"column":93,"nodeType":"185","messageId":"186","endLine":4,"endColumn":96},{"ruleId":"206","severity":1,"message":"207","line":68,"column":28,"nodeType":"208","messageId":"209","endLine":68,"endColumn":30},{"ruleId":"183","severity":1,"message":"221","line":1,"column":31,"nodeType":"185","messageId":"186","endLine":1,"endColumn":46},{"ruleId":"183","severity":1,"message":"222","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":35,"column":30,"nodeType":"208","messageId":"209","endLine":35,"endColumn":32},{"ruleId":"210","severity":1,"message":"211","line":59,"column":29,"nodeType":"202","endLine":59,"endColumn":79},{"ruleId":"183","severity":1,"message":"219","line":4,"column":49,"nodeType":"185","messageId":"186","endLine":4,"endColumn":60},{"ruleId":"183","severity":1,"message":"220","line":4,"column":93,"nodeType":"185","messageId":"186","endLine":4,"endColumn":96},{"ruleId":"206","severity":1,"message":"207","line":68,"column":28,"nodeType":"208","messageId":"209","endLine":68,"endColumn":30},{"ruleId":"183","severity":1,"message":"220","line":4,"column":48,"nodeType":"185","messageId":"186","endLine":4,"endColumn":51},{"ruleId":"183","severity":1,"message":"223","line":1,"column":8,"nodeType":"185","messageId":"186","endLine":1,"endColumn":22},{"ruleId":"212","severity":1,"message":"213","line":107,"column":21,"nodeType":"202","endLine":107,"endColumn":64},{"ruleId":"206","severity":1,"message":"214","line":112,"column":37,"nodeType":"208","messageId":"209","endLine":112,"endColumn":39},{"ruleId":"206","severity":1,"message":"214","line":116,"column":58,"nodeType":"208","messageId":"209","endLine":116,"endColumn":60},{"ruleId":"183","severity":1,"message":"220","line":4,"column":69,"nodeType":"185","messageId":"186","endLine":4,"endColumn":72},{"ruleId":"206","severity":1,"message":"214","line":38,"column":47,"nodeType":"208","messageId":"209","endLine":38,"endColumn":49},{"ruleId":"206","severity":1,"message":"214","line":110,"column":36,"nodeType":"208","messageId":"209","endLine":110,"endColumn":38},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'getInterest' is defined but never used.","Identifier","unusedVar","'set_all_lang_and_subs' is defined but never used.","'Tp' is defined but never used.","'LoggedIn' is assigned a value but never used.","'Username' is assigned a value but never used.","'Password' is assigned a value but never used.","'all_langs' is assigned a value but never used.","'set_langs' is assigned a value but never used.","'all_subs' is assigned a value but never used.","'set_subs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["226"],"react/jsx-pascal-case","Imported JSX component Request_view must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","Expected '===' and instead saw '=='.","'getlanguage' is defined but never used.","'image_link' is assigned a value but never used.","'Router' is defined but never used.","'axios' is defined but never used.","'ModalFooter' is defined but never used.","'Row' is defined but never used.","'SET_MEETING_URL' is defined but never used.","'Button' is defined but never used.","'sessionReducer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},"Update the dependencies array to be: [props, props.loggedIn]",{"range":"229","text":"230"},[856,872],"[props, props.loggedIn]"]