[{"/home/chetas/projects/se_project/eduapp/src/index.js":"1","/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js":"2","/home/chetas/projects/se_project/eduapp/src/redux/store.js":"3","/home/chetas/projects/se_project/eduapp/src/App.js":"4","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminReducer.js":"5","/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js":"6","/home/chetas/projects/se_project/eduapp/src/components/Tp.js":"7","/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js":"8","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js":"9","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js":"10","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminTypes.js":"11","/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js":"12","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js":"13","/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js":"14","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js":"15","/home/chetas/projects/se_project/eduapp/src/components/Admin/ForgotPassword.js":"16","/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js":"17","/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js":"18","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js":"19","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js":"20","/home/chetas/projects/se_project/eduapp/src/components/HomePage/LandingPage.js":"21","/home/chetas/projects/se_project/eduapp/src/components/Sessions/MeetingLinkShare.js":"22","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js":"23","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js":"24","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js":"25","/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js":"26","/home/chetas/projects/se_project/eduapp/src/components/Admin/AdminHome.js":"27","/home/chetas/projects/se_project/eduapp/src/components/HomePage/PendingReqMentor.js":"28","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminActions.js":"29","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js":"30","/home/chetas/projects/se_project/eduapp/src/components/Prompt.js":"31"},{"size":670,"mtime":1618717814602,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1612017628334,"results":"34","hashOfConfig":"33"},{"size":534,"mtime":1617633796746,"results":"35","hashOfConfig":"33"},{"size":1464,"mtime":1614872838262,"results":"36","hashOfConfig":"33"},{"size":912,"mtime":1617900890240,"results":"37","hashOfConfig":"33"},{"size":3451,"mtime":1617786162790,"results":"38","hashOfConfig":"33"},{"size":1461,"mtime":1614870245242,"results":"39","hashOfConfig":"33"},{"size":7960,"mtime":1617631377467,"results":"40","hashOfConfig":"33"},{"size":5566,"mtime":1618789741398,"results":"41","hashOfConfig":"33"},{"size":1357,"mtime":1618797070395,"results":"42","hashOfConfig":"33"},{"size":128,"mtime":1617900890240,"results":"43","hashOfConfig":"33"},{"size":592,"mtime":1617631371367,"results":"44","hashOfConfig":"33"},{"size":335,"mtime":1618751819322,"results":"45","hashOfConfig":"33"},{"size":3323,"mtime":1618717814558,"results":"46","hashOfConfig":"33"},{"size":1241,"mtime":1618797314233,"results":"47","hashOfConfig":"33"},{"size":7648,"mtime":1618802416586,"results":"48","hashOfConfig":"33"},{"size":8800,"mtime":1618801846878,"results":"49","hashOfConfig":"33"},{"size":19791,"mtime":1618753129734,"results":"50","hashOfConfig":"33"},{"size":11906,"mtime":1618789741454,"results":"51","hashOfConfig":"33"},{"size":17819,"mtime":1618802801323,"results":"52","hashOfConfig":"33"},{"size":1408,"mtime":1618666354163,"results":"53","hashOfConfig":"33"},{"size":3643,"mtime":1618801967696,"results":"54","hashOfConfig":"33"},{"size":3529,"mtime":1618802299752,"results":"55","hashOfConfig":"33"},{"size":3888,"mtime":1618797102135,"results":"56","hashOfConfig":"33"},{"size":7523,"mtime":1618789741414,"results":"57","hashOfConfig":"33"},{"size":5187,"mtime":1618795534108,"results":"58","hashOfConfig":"33"},{"size":6782,"mtime":1618789741394,"results":"59","hashOfConfig":"33"},{"size":6451,"mtime":1618789741394,"results":"60","hashOfConfig":"33"},{"size":988,"mtime":1617900890236,"results":"61","hashOfConfig":"33"},{"size":8355,"mtime":1618794372963,"results":"62","hashOfConfig":"33"},{"size":1263,"mtime":1618801745258,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"vzf3x9",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/chetas/projects/se_project/eduapp/src/index.js",[],["137","138"],"/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/store.js",[],"/home/chetas/projects/se_project/eduapp/src/App.js",["139","140","141","142","143","144","145","146","147","148","149"],"import React from 'react'\n//import {Provider} from 'react-redux'\nimport './App.css';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport {connect} from 'react-redux'\nimport { checkUser, getInterest, set_all_lang_and_subs } from './redux/Users/userActions';\nimport Tp from './components/Tp';\n//import store from './redux/store';\n\nfunction App(props) {\n\n  axios.defaults.withCredentials = true;\n\n  const [LoggedIn, setLogin] = useState(false);\n  const [Username, setUser] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [all_langs, set_langs] = useState([]);\n  const [all_subs, set_subs] = useState([]);\n\n\n  useEffect(() => {\n    props.checkUser()\n    setLogin(props.loggedIn)\n    setUser(props.username)\n    setPassword(props.password)\n    \n  }, [props.loggedIn])\n\n  return (\n      <div className=\"App\">\n        <Navigation/>\n        {/* <Tp/> */}\n      </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.users.loggedIn,\n    username: state.users.username,\n    password: state.users.password,\n    user_id: state.users.user_id,\n    is_teacher: state.users.is_teacher,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkUser: () => dispatch(checkUser()),\n    // set_all_langs_and_subs: (value) => dispatch(set_all_lang_and_subs(value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminReducer.js",["150"],"import sessionReducer from \"../Session/sessionReducer\"\nimport { SET_TEACHERS, SET_STUDENTS, SET_VERIFIED } from \"./adminTypes\"\n\nconst admin_initialState = {\n    teachers: [],\n    students:[]\n}\n\nconst adminReducer = (state = admin_initialState, action) => {\n    switch(action.type) {\n        case SET_TEACHERS: return {\n            ...state,\n            teachers: action.payload\n        }\n        case SET_STUDENTS: return {\n            ...state,\n            students: action.payload\n        } \n        case SET_VERIFIED:  {\n            const index = state.teachers.findIndex(teacher => teacher.user_id === action.payload.user_id)\n            const newArray = [...state.teachers]\n            newArray[index].verfied = action.payload.verify\n            return {\n                ...state,\n                teachers: newArray\n            }\n        }\n        default: return state\n    }\n}\n\nexport default adminReducer;","/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Tp.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js",["151","152"],"import { ADD_LANGUAGE, ADD_SUBJECT, DELETE_LANGUAGE, DELETE_SUBJECT, ERROR, GET_LANGUAGE, GET_STUDENT, GET_SUBJECT, GET_TEACHER, SET_ALL_LANG, SET_ALL_SUB ,LOGIN, LOGOUT, SET_LOGIN, GET_ADMIN } from \"./userTypes\"\nimport axios from 'axios'\n\nexport const checkUser = (dispatch) => {\n    return (dispatch) => {\n        axios.get(\"http://localhost:5000/users/login\")\n        .then((response) => {\n            if(response.data.loggedIn === true) {\n                dispatch(login(response.data.user[0]))\n                //console.log(response.data.user[0].user_type)\n                \n                if(response.data.user[0].user_type == 0) {\n                    axios.get(\"http://localhost:5000/users/student\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getstudent(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/student_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                        //console.log(resp.data)\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                else if(response.data.user[0].user_type == 2) {\n                    dispatch(getadmin());\n                }\n                else {\n                    axios.get(\"http://localhost:5000/users/teacher\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getteacher(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/teacher_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/languages\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getlanguage(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n            }\n            else {\n                dispatch(logout)\n            }\n        })\n        .catch(error => {\n            dispatch(err(error))\n        })\n        axios.get(\"http://localhost:5000/users/all_subjects\")\n        .then((response) => {\n            // set_subs(response.data)\n            dispatch(set_all_subs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n        axios.get(\"http://localhost:5000/users/all_languages\")\n        .then((response) => {\n            dispatch(set_all_langs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n    }\n}\n\nexport const getSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub.id\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/add_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/add_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const getLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang.id\n        }\n        axios.post(\"http://localhost:5000/users/add_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(addLanguage({language_id: lang.id, language_name: lang.lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\n\nexport const removeSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/del_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/del_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const removeLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang\n        }\n        axios.post(\"http://localhost:5000/users/del_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(deleteLanguage({language_id: lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\nexport const set_all_langs = (value) => {\n    return {\n        type: SET_ALL_LANG,\n        payload:value\n    }\n}\n\nexport const set_all_subs = (value) => {\n    return {\n        type: SET_ALL_SUB,\n        payload:value\n    }\n}\n\n\nexport const login = (value) => {\n    return {\n        type: LOGIN,\n        payload: value\n    }\n}\n\nexport const getstudent = (value) => {\n    return {\n        type: GET_STUDENT,\n        payload: value\n    }\n}\n\nexport const getteacher = (value) => {\n    return {\n        type: GET_TEACHER,\n        payload: value\n    }\n}\n\nexport const getadmin = () => {\n    return {\n        type: GET_ADMIN\n    }\n}\n\nexport const getsubject = (value) => {\n    return {\n        type: GET_SUBJECT,\n        payload: value\n    }\n}\n\nexport const getlanguage = (value) => {\n    return {\n        type: GET_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: LOGOUT,\n    }\n}\n\nexport const err = (error) => {\n    return {\n        type: ERROR,\n        payload: error.message\n    }\n}\n\nexport const setLogin = () => {\n    return {\n        type: SET_LOGIN\n    }\n}\n\nexport const addSubject = (value) => {\n    return {\n        type: ADD_SUBJECT,\n        payload: value\n    }\n}\n\nexport const addLanguage = (value) => {\n    return {\n        type: ADD_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const deleteSubject = (value) => {\n    return {\n        type: DELETE_SUBJECT,\n        payload: value\n    }\n}\n\nexport const deleteLanguage = (value) => {\n    return {\n        type: DELETE_LANGUAGE,\n        payload: value\n    }\n}","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js",["153","154"],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js",["155"],"/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js",["156","157","158"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input, Col, Container } from 'reactstrap';\nimport './Styles.css'\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport { login } from '../../redux/Users/userActions';\nimport cover from \"../../login_cover.jpg\";\n\naxios.defaults.withCredentials = true;\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: '',\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        var body = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n        axios.post(\"http://localhost:5000/users/login\", body)\n        .then(response => {\n\n            if(typeof response.data.message !== 'undefined') {\n                alert(response.data.message)\n            }\n            else {\n                this.props.login(response.data[0])\n                console.log(response.data[0])\n            }\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n    }\n\n    forgotPass = ()  => {\n        var otp = Math.floor(Math.random() * 1000000)\n        var prom = prompt(\"A mail has been sent with an OTP. Enter the OTP here to continue\");\n        if(prom == otp) {\n            console.log(\"OTP matches\")\n        }\n    }\n\n    render() {\n        return(\n\n          <div className=\"toplookout\">\n            <main role=\"main\" class=\"container\">\n              <div className=\"row\" id=\"login-content\">\n\n                <div className=\"col-12 col-md-8\">\n                  <img src={cover} id=\"cover\" alt=\"graphic\" width=\"100%\"/>\n                </div>\n\n                <div className=\"content-section col-12 col-md-4\">\n                  <br/><h3 className=\"text-center\">Login</h3>\n                  <Form id=\"login-form\" onSubmit={this.handleSubmit}>\n                      <FormGroup row>\n                          <Label for=\"username\" sm={2}>Username</Label>\n                          <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter Username\" value={this.state.username} onChange={(e) => this.setState({username: e.target.value})}></Input>\n                      </FormGroup>\n                      <FormGroup row>\n                          <Label for=\"password\" sm={2}>Password</Label>\n                          <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Passsword\" value={this.state.password} onChange={(e) => this.setState({password: e.target.value})}></Input>\n                      </FormGroup>\n                      <Button className=\"btn btn-info\" id=\"login-btn\">Login</Button>\n                      <FormGroup>\n                          <Link className=\"link\" to=\"/ForgotPassword\">Forgot Password?</Link>\n                      </FormGroup>\n                      <FormGroup>\n                          Don't have an account? <Link to=\"/Register\">Sign up</Link>\n                      </FormGroup>\n\n                  </Form>\n                </div>\n              </div>\n            </main>\n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (data) => dispatch(login(data))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Admin/ForgotPassword.js",["159","160","161"],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js",["162","163","164","165"],"/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js",["166","167","168","169"],"import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  checkUser,\n  getLanguage,\n  getlanguage,\n  getSubject,\n  removeLanguage,\n  removeSubject,\n} from \"../../redux/Users/userActions\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit_profile: false,\n      first_name: props.first_name,\n      last_name: props.last_name,\n      email_id: props.email_id,\n      grade: props.grade,\n      board: props.board,\n      qualification: props.qualification,\n      add_language: false,\n      add_subject: false,\n      languages: [],\n      subjects: [],\n      selected_subject: \"\",\n      selected_subject_id: \"\",\n      selected_language: \"\",\n      selected_language_id: \"\",\n      profile_photo: null,\n    };\n  }\n\n  toggle_profile = () => {\n    this.setState({\n      edit_profile: !this.state.edit_profile,\n    });\n  };\n\n  toggle_language = () => {\n    this.setState({\n      add_language: !this.state.add_language,\n    });\n  };\n\n  toggle_subject = () => {\n    this.setState({\n      add_subject: !this.state.add_subject,\n    });\n  };\n\n  complete_edit = () => {\n    this.toggle_profile();\n    const data = new FormData();\n    data.append(\"file\", this.state.profile_photo);\n    data.append(\"user_id\", this.props.user_id);\n    data.append(\"first_name\", this.state.first_name);\n    data.append(\"last_name\", this.state.last_name);\n    data.append(\"email_id\", this.state.email_id);\n    data.append(\"grade\", this.state.grade);\n    data.append(\"board\", this.state.board);\n    data.append(\"qualification\", this.state.qualification);\n    data.append(\"oldurl\", this.props.image_link);\n    if (this.props.is_teacher) {\n      axios\n        .post(\"http://localhost:5000/users/editteacher\", data)\n        .then((response) => {\n          this.props.checkUser();\n          alert(\"Profile updated\");\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    } else {\n      axios\n        .post(\"http://localhost:5000/users/editstudent\", data)\n        .then((response) => {\n          this.props.checkUser();\n          alert(\"Profile updated\");\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      languages: this.props.all_languages,\n      subjects: this.props.all_subjects,\n    });\n  }\n\n  handle = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleboard = (e) => {\n    this.setState({\n      type_selected: true,\n      board: e.target[e.target.selectedIndex].value,\n    });\n  };\n\n  handle_file = (e) => {\n    this.setState({\n      profile_photo: e.target.files[0],\n    });\n  };\n\n  addSubject = (e) => {\n    if (\n      this.props.subjects.some(\n        (sub) => sub.subject_name === this.state.selected_subject\n      )\n    ) {\n      alert(`${this.state.selected_subject} already exists in your favorites`);\n    } else if (this.state.selected_subject_id != \"\") {\n      this.props.getSubject(this.props.user_id, this.props.is_teacher, {\n        id: parseInt(this.state.selected_subject_id),\n        sub: this.state.selected_subject,\n      });\n      this.setState({\n        selected_subject_id: \"\",\n        selected_subject: \"\",\n      });\n      this.toggle_subject();\n    } else {\n      alert(\"Please select a subject\");\n    }\n  };\n\n  addLanguage = (e) => {\n    if (\n      this.props.languages.some(\n        (lang) => lang.language_name === this.state.selected_language\n      )\n    ) {\n      alert(`${this.state.selected_language} already exists in your favorites`);\n    } else if (this.state.selected_language_id) {\n      this.props.getLanguage(this.props.user_id, {\n        id: parseInt(this.state.selected_language_id),\n        lang: this.state.selected_language,\n      });\n      this.setState({\n        selected_language_id: \"\",\n        selected_language: \"\",\n      });\n      this.toggle_language();\n    } else {\n      alert(\"Please select a language\");\n    }\n  };\n\n  deleteSubject = (id, sub) => {\n    this.props.removeSubject(this.props.user_id, this.props.is_teacher, id);\n  };\n\n  deleteLanguage = (id, lang) => {\n    this.props.removeLanguage(this.props.user_id, id);\n  };\n\n  render() {\n    const {\n      username,\n      first_name,\n      last_name,\n      email_id,\n      session_taken,\n      image_link,\n      grade,\n      board,\n      qualification,\n      rating_points,\n      is_teacher,\n    } = this.props;\n\n    var subjects = this.props.subjects ? (\n      this.props.subjects.map((subject, index) => (\n        <React.Fragment key={subject.subject_id}>\n          <Row>\n            <Col sm={1}></Col>\n            <Col sm={8}>\n              <div id=\"pref-list-item\">{subject.subject_name}</div>\n            </Col>\n            <Col sm={2}>\n              <i\n                className=\"bi bi-x-square-fill\"\n                onClick={() =>\n                  this.deleteSubject(subject.subject_id, subject.subject_name)\n                }\n              ></i>\n            </Col>\n            <Col sm={1}></Col>\n          </Row>\n        </React.Fragment>\n      ))\n    ) : (\n      <React.Fragment></React.Fragment>\n    );\n\n    var languages =\n      this.props.languages !== undefined ? (\n        this.props.languages.map((language, index) => (\n          // <div key={language.language_id}>{index + 1} {language.language_name}</div>\n          <React.Fragment key={language.language_id}>\n            <Row>\n              <Col sm={1}></Col>\n              <Col sm={8}>\n                <div id=\"pref-list-item\">{language.language_name}</div>\n              </Col>\n              <Col sm={2}>\n                <i\n                  className=\"bi bi-x-square-fill\"\n                  onClick={() =>\n                    this.deleteLanguage(\n                      language.language_id,\n                      language.language_name\n                    )\n                  }\n                ></i>\n              </Col>\n              <Col sm={1}></Col>\n            </Row>\n          </React.Fragment>\n        ))\n      ) : (\n        <React.Fragment></React.Fragment>\n      );\n\n    var all_subjects = this.state.subjects.map((subject) => (\n      <option\n        key={subject.subject_id}\n        value={subject.subject_name}\n        id={subject.subject_id}\n      >\n        {subject.subject_name}\n      </option>\n    ));\n\n    var all_languages = this.state.languages.map((language) => (\n      <option\n        key={language.language_id}\n        value={language.language_name}\n        id={language.language_id}\n      >\n        {language.language_name}\n      </option>\n    ));\n\n    return (\n      <Container className=\"toplookout\">\n        <div className=\"profile-wrapper\">\n          <Row className=\"justify-content-center\">\n            <Col sm={9}>\n              <div className=\"profile-section\">\n                <Row>\n                  <Col>\n                    {/* <p>Image Link: {image_link}</p> */}\n                    <img\n                      src={this.props.image_link}\n                      className=\"profilepic\"\n                    ></img>\n                  </Col>\n                  <Col>\n                    {!this.state.edit_profile && (\n                      <React.Fragment>\n                        <p>\n                          Username: <b>{username}</b>\n                        </p>\n                        <p>\n                          Name:{\" \"}\n                          <b>\n                            {first_name} {last_name}\n                          </b>\n                        </p>\n                        <p>\n                          Email: <b>{email_id}</b>\n                        </p>\n                        {is_teacher && (\n                          <React.Fragment>\n                            <p>\n                              Qualification: <b>{qualification}</b>\n                            </p>\n                            <p>\n                              Average Rating Points:{\" \"}\n                              <b>\n                                {(rating_points / session_taken).toFixed(2)}\n                              </b>\n                            </p>\n                          </React.Fragment>\n                        )}\n                        {!is_teacher && (\n                          <React.Fragment>\n                            <p>\n                              Grade: <b>{grade}</b>\n                            </p>\n                            <p>\n                              Board: <b>{board}</b>\n                            </p>\n                          </React.Fragment>\n                        )}\n                        <p>\n                          Sessions done: <b>{session_taken}</b>\n                        </p>\n                        <Button\n                          className=\"btn btn-info\"\n                          onClick={this.toggle_profile}\n                        >\n                          <i className=\"bi bi-pencil-fill\"></i> Edit Profile\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {this.state.edit_profile && (\n                      <React.Fragment>\n                        <Form>\n                          <FormGroup row>\n                            <Label for=\"first_name\">First Name:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"text\"\n                                name=\"first_name\"\n                                id=\"first_name\"\n                                placeholder=\"Enter your name\"\n                                value={this.state.first_name}\n                                onChange={this.handle}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          <FormGroup row>\n                            <Label for=\"last_name\">Last Name:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"text\"\n                                name=\"last_name\"\n                                id=\"last_name\"\n                                placeholder=\"Enter your last name\"\n                                value={this.state.last_name}\n                                onChange={this.handle}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          <FormGroup row>\n                            <Label for=\"email\">Email Id:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"text\"\n                                name=\"email_id\"\n                                id=\"email_id\"\n                                placeholder=\"Enter your email id\"\n                                value={this.state.email_id}\n                                onChange={this.handle}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          <FormGroup row>\n                            <Label for=\"file\">Profile Photo:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"file\"\n                                name=\"file\"\n                                id=\"file\"\n                                placeholder=\"Upload a profile photo\"\n                                onChange={this.handle_file}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          {this.props.is_teacher && (\n                            <FormGroup row>\n                              <Label for=\"qualification\">Qualification:</Label>\n                              <Col sm={12}>\n                                <Input\n                                  type=\"text\"\n                                  name=\"qualification\"\n                                  id=\"qualification\"\n                                  placeholder=\"Enter your Qualification\"\n                                  value={this.state.qualification}\n                                  onChange={this.handle}\n                                ></Input>\n                              </Col>\n                            </FormGroup>\n                          )}\n                          {!this.props.is_teacher && (\n                            <React.Fragment>\n                              <FormGroup row>\n                                <Label for=\"grade\">Grade:</Label>\n                                <Col sm={12}>\n                                  <Input\n                                    type=\"number\"\n                                    name=\"grade\"\n                                    id=\"grade\"\n                                    placeholder=\"Enter your Grade\"\n                                    value={this.state.grade}\n                                    onChange={this.handle}\n                                  ></Input>\n                                </Col>\n                              </FormGroup>\n                              <FormGroup row>\n                                <Label for=\"board\">Board:</Label>\n                                <Col sm={12}>\n                                  <Input\n                                    type=\"select\"\n                                    name=\"board\"\n                                    id=\"board\"\n                                    placeholder=\"Enter your board\"\n                                    value={this.state.board}\n                                    onChange={this.handleboard}\n                                  >\n                                    <option value=\"\" disabled selected>\n                                      Select type\n                                    </option>\n                                    <option value=\"SSC\">SSC</option>\n                                    <option value=\"CBSE\">CBSE</option>\n                                    <option value=\"ICSE\">ICSE</option>\n                                    <option value=\"other\">other..</option>\n                                  </Input>\n                                </Col>\n                              </FormGroup>\n                            </React.Fragment>\n                          )}\n                        </Form>\n                        <Button\n                          className=\"row-btns\"\n                          color=\"success\"\n                          onClick={this.complete_edit}\n                        >\n                          Save\n                        </Button>\n                        <Button\n                          className=\"row-btns\"\n                          onClick={this.toggle_profile}\n                        >\n                          Cancel\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n          <br />\n          <br />\n          <Row className=\"justify-content-center\">\n            <Col sm={6}>\n              <div className=\"profile-section\">\n                <h5>What subjects are you interested in?</h5>\n                <br />\n                {subjects}\n                {this.state.add_subject && (\n                  <React.Fragment>\n                    <Row>\n                      <Col sm={10}>\n                        <Input\n                          type=\"select\"\n                          onChange={(e) =>\n                            this.setState({\n                              selected_subject_id:\n                                e.target[e.target.selectedIndex].id,\n                              selected_subject:\n                                e.target[e.target.selectedIndex].value,\n                            })\n                          }\n                        >\n                          <option value=\"\" disabled selected>\n                            Select subject\n                          </option>\n                          {all_subjects}\n                        </Input>\n                      </Col>\n                      <Col sm={2}>\n                        <i\n                          class=\"bi bi-check-square-fill\"\n                          onClick={this.addSubject}\n                        ></i>\n                      </Col>\n                    </Row>\n                  </React.Fragment>\n                )}\n                <br />\n                <button className=\"btn btn-info\" onClick={this.toggle_subject}>\n                  Add Subject\n                </button>\n              </div>\n            </Col>\n            {this.props.is_teacher && (\n              <Col sm={6}>\n                <div className=\"profile-section\">\n                  <h5>What languages are you comfortable with?</h5>\n                  <br />\n                  {languages}\n                  {this.state.add_language && (\n                    <React.Fragment>\n                      <Row>\n                        <Col sm={10}>\n                          <Input\n                            type=\"select\"\n                            onChange={(e) =>\n                              this.setState({\n                                selected_language_id:\n                                  e.target[e.target.selectedIndex].id,\n                                selected_language:\n                                  e.target[e.target.selectedIndex].value,\n                              })\n                            }\n                          >\n                            <option value=\"\" disabled selected>\n                              Select language\n                            </option>\n                            {all_languages}\n                          </Input>\n                        </Col>\n                        <Col sm={2}>\n                          <i\n                            class=\"bi bi-check-square-fill\"\n                            onClick={this.addLanguage}\n                          ></i>\n                        </Col>\n                      </Row>\n                    </React.Fragment>\n                  )}\n                  <br />\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={this.toggle_language}\n                  >\n                    Add Language\n                  </button>\n                </div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user_id: state.users.user_id,\n    username: state.users.username,\n    first_name: state.users.first_name,\n    last_name: state.users.last_name,\n    email_id: state.users.email_id,\n    session_taken: state.users.session_taken,\n    image_link: state.users.image_link,\n    grade: state.users.grade,\n    board: state.users.board,\n    qualification: state.users.qualification,\n    rating_points: state.users.rating_points,\n    is_teacher: state.users.is_teacher,\n    languages: state.users.languages,\n    subjects: state.users.subjects,\n    all_subjects: state.users.all_subjects,\n    all_languages: state.users.all_languages,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkUser: () => dispatch(checkUser()),\n    getSubject: (id, type, sub) => dispatch(getSubject(id, type, sub)),\n    getLanguage: (id, lang) => dispatch(getLanguage(id, lang)),\n    removeSubject: (id, type, sub) => dispatch(removeSubject(id, type, sub)),\n    removeLanguage: (id, lang) => dispatch(removeLanguage(id, lang)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js",["170","171","172"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Col,\n  Container,\n  Row,\n} from \"reactstrap\";\nimport \"./Styles.css\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport cover from \"../../reg_cover.png\";\n\naxios.defaults.withCredentials = true;\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: -1,\n      username: \"\",\n      password: \"\",\n      first_name: \"\",\n      last_name: \"\",\n      email_id: \"\",\n      image_link: \"http://localhost:5000/profile_pics/default.png\",\n      qualification: \"\",\n      grade: 1,\n      board: \"\",\n      qualification_proof: \"\",\n      is_teacher: false,\n      type_selected: false,\n      register: false,\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    var body = this.state;\n    axios\n      .post(\"http://localhost:5000/users/register\", body)\n      .then((response) => {\n        if (response.data.affectedRows === 1) {\n          this.setState({\n            register: true,\n            id: response.data.insertId,\n          });\n          const data = new FormData();\n          data.append(\"file\", this.state.qualification_proof);\n          data.append(\"id\", response.data.insertId);\n          data.append(\"first_name\", this.state.first_name);\n          data.append(\"last_name\", this.state.last_name);\n          data.append(\"email_id\", this.state.email_id);\n          data.append(\"image_link\", this.state.image_link);\n          data.append(\"qualification\", this.state.qualification);\n          if (this.state.is_teacher) {\n            axios\n              .post(\"http://localhost:5000/users/teacher\", data)\n              .then((res) => {\n                console.log(\"success\");\n              })\n              .catch((err) => {\n                console.log(err);\n              });\n          } else {\n            axios\n              .post(\"http://localhost:5000/users/student\", this.state)\n              .then((res) => {\n                console.log(\"success\");\n              })\n              .catch((err) => {\n                console.log(\"fail\");\n              });\n          }\n          alert(`${this.state.username} has been registered`);\n          console.log(response.data);\n        } else {\n          alert(\"User already exists.\\nTry signing in.\");\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n        console.log(body);\n      });\n    if (this.state.register) {\n      console.log(this.state);\n    }\n  };\n\n  handle = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handletype = (e) => {\n    this.setState({\n      type_selected: true,\n      is_teacher:\n        e.target[e.target.selectedIndex].value === \"teacher\" ? true : false,\n    });\n  };\n\n  handleboard = (e) => {\n    this.setState({\n      type_selected: true,\n      board: e.target[e.target.selectedIndex].value,\n    });\n  };\n\n  handle_file = (e) => {\n    this.setState({\n      qualification_proof: e.target.files[0],\n    });\n  };\n\n  handle_image = (e) => {};\n\n  componentDidUpdate(PrevProps, PrevState) {\n    if (PrevState.register != this.state.register) {\n      console.log(this.state.register);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.register && (\n          <div className=\"toplookout\">\n            <main role=\"main\" class=\"container\">\n              <div className=\"row\" id=\"login-content\">\n                <div className=\"col-12 col-md-5\">\n                  <br />\n                  <h2 id=\"pre-title\">\n                    <b>Welcome to</b>\n                  </h2>\n                  <h1 id=\"title\">\n                    <b>OpenSchool</b>\n                  </h1>\n                  <br />\n                  <br />\n                  <img src={cover} id=\"cover\" alt=\"graphic\" width=\"100%\" />\n                </div>\n\n                <div className=\"content-section col-12 col-md-7\">\n                  <br />\n                  <h3>Create Account</h3>\n                  <Form onSubmit={this.handleSubmit}>\n                    <FormGroup row>\n                      <Label for=\"username\" sm={3}>\n                        Username:\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"username\"\n                        id=\"username\"\n                        placeholder=\"Enter Username\"\n                        value={this.state.username}\n                        onChange={this.handle}\n                        required\n                      ></Input>\n                    </FormGroup>\n                    <FormGroup row>\n                      <Label for=\"first_name\" sm={3}>\n                        First Name:\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"first_name\"\n                        id=\"first_name\"\n                        placeholder=\"Enter your name\"\n                        value={this.state.first_name}\n                        onChange={this.handle}\n                        required\n                      ></Input>\n                    </FormGroup>\n\n                    <FormGroup row>\n                      <Label for=\"last_name\" sm={3}>\n                        Last Name:\n                      </Label>\n                      <Input\n                        type=\"text\"\n                        name=\"last_name\"\n                        id=\"last_name\"\n                        placeholder=\"Enter your last name\"\n                        value={this.state.last_name}\n                        onChange={this.handle}\n                        required\n                      ></Input>\n                    </FormGroup>\n                    <FormGroup row>\n                      <Label for=\"email\" sm={3}>\n                        Email Id:\n                      </Label>\n                      <Input\n                        type=\"email\"\n                        name=\"email_id\"\n                        id=\"email_id\"\n                        placeholder=\"Enter your email id\"\n                        value={this.state.email_id}\n                        onChange={this.handle}\n                        required\n                      ></Input>\n                    </FormGroup>\n                    <FormGroup row>\n                      <Label for=\"is_teacher\" sm={12}>\n                        Are you a student or a mentor?\n                      </Label>\n                      <Input\n                        type=\"select\"\n                        name=\"is_teacher\"\n                        id=\"is_teacher\"\n                        onChange={this.handletype}\n                        required\n                      >\n                        <option value=\"\" disabled selected>\n                          Select type\n                        </option>\n                        <option value=\"teacher\">Mentor</option>\n                        <option value=\"student\">Student</option>\n                      </Input>\n                    </FormGroup>\n                    {this.state.type_selected && this.state.is_teacher && (\n                      <React.Fragment>\n                        <FormGroup row>\n                          <Label for=\"qualification\" sm={3}>\n                            Qualification:\n                          </Label>\n                          <Input\n                            type=\"text\"\n                            name=\"qualification\"\n                            id=\"qualification\"\n                            placeholder=\"Enter highest degree completed / current academic post\"\n                            value={this.state.qualification}\n                            onChange={this.handle}\n                            required\n                          ></Input>\n                        </FormGroup>\n                        <FormGroup row>\n                          <Label for=\"file\" sm={12}>\n                            Proof of qualification:\n                          </Label>\n                          <Input\n                            type=\"file\"\n                            name=\"file\"\n                            id=\"file\"\n                            placeholder=\"Upload a proof\"\n                            onChange={this.handle_file}\n                            required\n                          ></Input>\n                        </FormGroup>\n                      </React.Fragment>\n                    )}\n                    {this.state.type_selected && !this.state.is_teacher && (\n                      <Row>\n                        <FormGroup row>\n                          <Label for=\"grade\" sm={3}>\n                            Grade:\n                          </Label>\n                          <Input\n                            type=\"number\"\n                            name=\"grade\"\n                            id=\"grade\"\n                            placeholder=\"Enter your Grade\"\n                            value={this.state.grade}\n                            onChange={this.handle}\n                            required\n                          ></Input>\n                        </FormGroup>\n                        <FormGroup row>\n                          <Label for=\"board\" sm={3}>\n                            Board:\n                          </Label>\n                          <Input\n                            type=\"select\"\n                            name=\"board\"\n                            id=\"board\"\n                            placeholder=\"Enter your board\"\n                            value={this.state.board}\n                            onChange={this.handleboard}\n                            required\n                          >\n                            <option value=\"\" disabled selected>\n                              Select type\n                            </option>\n                            <option value=\"SSC\">SSC</option>\n                            <option value=\"CBSE\">CBSE</option>\n                            <option value=\"ICSE\">ICSE</option>\n                            <option value=\"other\">other..</option>\n                          </Input>\n                        </FormGroup>\n                      </Row>\n                    )}\n                    <FormGroup row>\n                      <Label for=\"password\" sm={3}>\n                        Password:\n                      </Label>\n                      <Input\n                        type=\"password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"Enter Password\"\n                        value={this.state.password}\n                        onChange={this.handle}\n                        required\n                      ></Input>\n                    </FormGroup>\n                    <Button className=\"btn btn-info\" id=\"login-btn\">\n                      Sign Up\n                    </Button>\n                    <FormGroup>\n                      Already have an account? <Link to=\"/Login\">Sign in</Link>\n                    </FormGroup>\n                  </Form>\n                </div>\n              </div>\n            </main>\n          </div>\n        )}\n        {this.state.register && (\n          <Container>\n            <Switch>\n              <Route path=\"/Login\" render={(props) => <Login />} />\n              <Route\n                path=\"/Register\"\n                render={(props) => <Redirect to=\"/Login\"></Redirect>}\n              />\n            </Switch>\n          </Container>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Register;\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js",["173","174","175","176","177","178","179","180","181"],"/home/chetas/projects/se_project/eduapp/src/components/HomePage/LandingPage.js",["182","183","184","185","186","187","188","189"],"import axios from 'axios';\nimport React, {Component} from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Col, Collapse, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport landing_cover from \"../../landing_cover.png\";\n\nclass LandingPage extends Component {\n\n  constructor() {\n    super()\n  }\n\n  render() {\n    return(\n      <div>\n        <main role=\"main\" class=\"container\">\n          <div className=\"row\" id=\"landing-content\">\n            <div className=\"col-12 col-md-5\">\n              <h1 id=\"title\">OpenSchool</h1>\n              <section id=\"about\">\n                <p>Do you need some one-on-one help with schoolwork? Or are you curious about something they don't teach in school?</p>\n                <p>Are you a passionate teacher or academic professional who loves to help young students learn beyond the classroom?</p>\n                <p>Join OpenSchool - the voluntary mentoring platform and participate in one-on-one sessions about anything that sparks your curiosity!</p>\n              </section>\n              <Link className=\"btn btn-info btn-lg\" id=\"join-btn\" to=\"/Register\">Join Now!</Link>\n            </div>\n            <div className=\"col-12 col-md-7\">\n              <img src={landing_cover} id=\"cover\" alt=\"graphic\" width=\"100%\"/>\n            </div>\n          </div>\n        </main>\n      </div>\n    )\n  }\n\n}\nexport default LandingPage;\n","/home/chetas/projects/se_project/eduapp/src/components/Sessions/MeetingLinkShare.js",["190","191"],"/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js",["192","193","194"],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js",["195","196","197","198"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Row,\n  Col,\n} from \"reactstrap\";\nimport { send_request } from \"../../redux/Session/sessionAction\";\nimport \"./Styles.css\";\n\nclass ReqSession extends Component {\n  constructor() {\n    super();\n    this.state = {\n      modal: false,\n      subject_id: \"\",\n      topic: \"\",\n      time_slot: \"\",\n      date_slot: \"\",\n      lang: \"\",\n      subjects: [],\n      languages: [],\n    };\n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n\n  handle = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handle1 = (e) => {\n    this.setState({\n      [e.target.name]: e.target[e.target.selectedIndex].value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state);\n\n    var body = {\n      sender_id: this.props.user_id,\n      subject_id: this.state.subject_id,\n      topic: this.state.topic,\n      time_slot:\n        String(this.state.time_slot_start) +\n        \" - \" +\n        String(this.state.time_slot_end),\n      req_date: this.state.date_slot,\n      language_id: this.state.language_id,\n      approved: 0,\n      mentor_specific: -1,\n    };\n    this.props.send_request(body);\n\n    this.setState({\n      modal: false,\n      subject_id: \"\",\n      topic: \"\",\n      time_slot: \"\",\n      req_date: \"\",\n      language_id: \"\",\n      subjects: [],\n      languages: [],\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.modal != this.state.modal && this.state.modal) {\n      this.setState({\n        languages: this.props.all_languages,\n        subjects: this.props.all_subjects,\n      });\n    }\n  }\n\n  render() {\n    var all_subjects = this.state.subjects.map((subject) => (\n      <option\n        key={subject.subject_id}\n        value={subject.subject_id}\n        id={subject.subject_id}\n      >\n        {subject.subject_name}\n      </option>\n    ));\n\n    var all_languages = this.state.languages.map((language) => (\n      <option\n        key={language.language_id}\n        value={language.language_id}\n        id={language.language_id}\n      >\n        {language.language_name}\n      </option>\n    ));\n\n    return (\n      <React.Fragment>\n        <main role=\"main\">\n          <div className=\"row d-flex justify-content-center\">\n            <div className=\"col-12 col-sm-6 text-center\" id=\"req-session\">\n              <section id=\"prompt\">\n                <p>What topic do you want to discuss?</p>\n                <p>\n                  We have many mentors in the community willing to discuss\n                  topics both in and out of your school curriculum.\n                </p>\n              </section>\n              <Button className=\"btn btn-info\" onClick={this.toggle}>\n                Request a Session\n              </Button>\n            </div>\n          </div>\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader>Session Request</ModalHeader>\n            <ModalBody>\n              <Form id=\"request-form\">\n                <FormGroup row>\n                  <Label for=\"subject_id\" sm={10}>\n                    Subject\n                  </Label>\n                  <Col sm={12}>\n                    <Input\n                      type=\"select\"\n                      name=\"subject_id\"\n                      id=\"subject\"\n                      onChange={this.handle1}\n                    >\n                      <option value=\"\" disabled selected>\n                        Select a broad subject category (Ex. Maths)\n                      </option>\n                      {all_subjects}\n                    </Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"topic\" sm={10}>\n                    Topic\n                  </Label>\n                  <Col sm={12}>\n                    <Input\n                      type=\"text\"\n                      name=\"topic\"\n                      id=\"topic\"\n                      placeholder=\"Enter a more specific description (Ex. Prime numbers)\"\n                      value={this.state.topic}\n                      onChange={this.handle}\n                    ></Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"date_slot\" sm={10}>\n                    What date do you prefer?\n                  </Label>\n                  <Col sm={12}>\n                    <Input\n                      type=\"date\"\n                      name=\"date_slot\"\n                      id=\"date_slot\"\n                      value={this.state.date_slot}\n                      onChange={this.handle}\n                    ></Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"time_slot_start\" sm={5}>\n                    From :\n                  </Label>\n                  <Col sm={12}>\n                    <Input\n                      type=\"time\"\n                      name=\"time_slot_start\"\n                      id=\"time_slot_start\"\n                      value={this.state.time_slot_start}\n                      onChange={this.handle}\n                      placeholder=\"Format: hh:mm\"\n                    ></Input>\n                  </Col>\n                  <Label for=\"time_slot_end\" sm={5}>\n                    To :\n                  </Label>\n                  <Col sm={12}>\n                    <Input\n                      type=\"time\"\n                      name=\"time_slot_end\"\n                      id=\"time_slot_end\"\n                      value={this.state.time_slot_end}\n                      onChange={this.handle}\n                      placeholder=\"Format: hh:mm\"\n                    ></Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup row>\n                  <Label for=\"lang\" sm={10}>\n                    What language are you comfortable with?\n                  </Label>\n                  <Col sm={12}>\n                    <Input\n                      type=\"select\"\n                      name=\"language_id\"\n                      id=\"lang\"\n                      onChange={this.handle1}\n                    >\n                      <option value=\"\" disabled selected>\n                        Select the language\n                      </option>\n                      {all_languages}\n                    </Input>\n                  </Col>\n                </FormGroup>\n                <Button\n                  className=\"row-btns\"\n                  color=\"success\"\n                  onClick={this.handleSubmit}\n                >\n                  Send\n                </Button>\n                <Button\n                  className=\"row-btns\"\n                  color=\"danger\"\n                  onClick={this.toggle}\n                >\n                  Cancel\n                </Button>\n              </Form>\n            </ModalBody>\n          </Modal>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user_id: state.users.user_id,\n    all_subjects: state.users.all_subjects,\n    all_languages: state.users.all_languages,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    send_request: (body) => dispatch(send_request(body)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReqSession);\n","/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Admin/AdminHome.js",["199","200","201"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Collapse, Container, Table } from \"reactstrap\";\nimport { fetchAllUsers, verifyTeacher } from \"../../redux/Admin/adminActions\";\n\nclass AdminHome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      teacher_toggle: true,\n      student_toggle: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllusers();\n  }\n\n  // refresh = () => {\n  //     this.props.fetchAllUsers();\n  // }\n\n  toggle_mentor = () => {\n    this.setState({\n      teacher_toggle: !this.state.teacher_toggle,\n    });\n  };\n\n  toggle_student = () => {\n    this.setState({\n      student_toggle: !this.state.student_toggle,\n    });\n  };\n\n  verify = (id, email_id, first_name, last_name) => {\n    // alert(`verified ${id}`)\n    const data = {\n      user_id: id,\n    };\n    axios\n      .post(\"http://localhost:5000/users/verify\", data)\n      .then((response) => {\n        alert(\"Profile verified\");\n        const value = {\n          user_id: id,\n          verify: 1,\n        };\n        this.props.verifyUser(value);\n        var bod = {\n          type: \"send_verification\",\n          receiver: email_id,\n          first_name: first_name,\n          last_name: last_name,\n        };\n        axios\n          .post(\"http://localhost:5000/users/sendmail\", bod)\n          .then((re) => {\n            console.log(\"Email sent successfully\");\n          })\n          .catch((err) => {\n            console.log(\"Error in sending mail\");\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  suspend = (id, email_id, first_name, last_name) => {\n    const data = {\n      user_id: id,\n    };\n    axios\n      .post(\"http://localhost:5000/users/suspend\", data)\n      .then((response) => {\n        alert(\"Profile suspended\");\n        const value = {\n          user_id: id,\n          verify: 2,\n        };\n        this.props.verifyUser(value);\n        var bod = {\n          type: \"send_suspension\",\n          receiver: email_id,\n          first_name: first_name,\n          last_name: last_name,\n        };\n        axios\n          .post(\"http://localhost:5000/users/sendmail\", bod)\n          .then((re) => {\n            console.log(\"Email sent successfully\");\n          })\n          .catch((err) => {\n            console.log(\"Error in sending mail\");\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    var mentor_table = this.props.teachers.map((teacher) => (\n      <tr key={teacher.user_id}>\n        <td>\n          {teacher.first_name} {teacher.last_name}\n        </td>\n        <td>{teacher.email_id}</td>\n        <td>{teacher.qualification}</td>\n        <td>\n          <a href={teacher.doc_link} target=\"_blank\">\n            View\n          </a>\n        </td>\n        <td>\n          {teacher.verfied == 0 ? (\n            <React.Fragment>\n              <Button\n                color=\"success\"\n                onClick={() =>\n                  this.verify(\n                    teacher.user_id,\n                    teacher.email_id,\n                    teacher.first_name,\n                    teacher.last_name\n                  )\n                }\n              >\n                &#10004;\n              </Button>\n              <Button\n                color=\"danger\"\n                onClick={() =>\n                  this.suspend(\n                    teacher.user_id,\n                    teacher.email_id,\n                    teacher.first_name,\n                    teacher.last_name\n                  )\n                }\n              >\n                &#10006;\n              </Button>\n            </React.Fragment>\n          ) : teacher.verfied == 1 ? (\n            <p style={{ color: \"green\" }}>Verified</p>\n          ) : (\n            <p style={{ color: \"red\" }}>Suspended</p>\n          )}\n        </td>\n      </tr>\n    ));\n\n    var student_table = this.props.students.map((student) => (\n      <tr key={student.user_id}>\n        <td>\n          {student.first_name} {student.last_name}\n        </td>\n        <td>{student.email_id}</td>\n        <td>{student.grade}</td>\n        <td>{student.board}</td>\n      </tr>\n    ));\n\n    return (\n      <div>\n        <Container className=\"font1\">\n          <Col style={{ textAlign: \"center\" }}>\n            <h2>Welcome, Admin!</h2>\n          </Col>\n\n          <Col style={{ textAlign: \"right\" }}>\n            <Button color=\"danger\" onClick={() => this.props.fetchAllusers()}>\n              Refresh Tab\n            </Button>\n          </Col>\n          <Col style={{ textAlign: \"left\" }}>\n            <Button\n              color=\"Info\"\n              href=\"https://docs.google.com/spreadsheets/d/17-1omO8lJTXgLEPLchGxxXJvACAEa4XAmtVAbr3du7M/edit?usp=sharing\"\n              target=\"_blank\"\n            >\n              Check Session Feedback\n            </Button>\n          </Col>\n        </Container>\n        <Button\n          color=\"warning\"\n          onClick={this.toggle_mentor}\n          style={{ marginBottom: \"1rem\" }}\n        >\n          Mentors\n        </Button>\n        <Collapse isOpen={this.state.teacher_toggle}>\n          <Container\n            style={{\n              border: \"1px solid black\",\n              height: \"500px\",\n              overflow: \"auto\",\n            }}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Qualification</th>\n                  <th>Documents</th>\n                  <th>Verify</th>\n                </tr>\n              </thead>\n              <tbody>{mentor_table}</tbody>\n            </Table>\n          </Container>\n        </Collapse>\n        <br></br>\n        <Button\n          color=\"warning\"\n          onClick={this.toggle_student}\n          style={{ marginBottom: \"1rem\" }}\n        >\n          Students\n        </Button>\n        <Collapse isOpen={this.state.student_toggle}>\n          <Container\n            style={{\n              border: \"1px solid black\",\n              height: \"500px\",\n              overflow: \"auto\",\n            }}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Grade</th>\n                  <th>Board</th>\n                </tr>\n              </thead>\n              <tbody>{student_table}</tbody>\n            </Table>\n          </Container>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    teachers: state.admin.teachers,\n    students: state.admin.students,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllusers: () => dispatch(fetchAllUsers()),\n    verifyUser: (value) => dispatch(verifyTeacher(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHome);\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/PendingReqMentor.js",["202"],"import axios from 'axios'\nimport React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { Button, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap'\nimport { fetch_home } from '../../redux/Session/sessionAction';\n\nclass PendingReqMentor extends Component {\n    constructor() {\n        super()\n        this.state = {\n            modal: false,\n            teacher: '',\n        }\n    }\n\n    toggle = () => {\n        if(!this.state.modal) {\n            axios.get(\"http://localhost:5000/users/teacher\", {\n                params : {\n                    id: this.props.user_id\n                }\n            })\n            .then(response => {\n                this.setState({\n                    teacher: response.data[0]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n        this.setState({\n            modal: !this.state.modal,\n            open: 1\n        })\n    }\n\n    confirm_sess = () => {\n        console.log(`Request is ${this.props.request_id}`)\n        var body = {\n            request_id: this.props.request_id,\n            teacher_id: this.props.user_id,\n            student_id: this.props.student_id,\n            completed: 0,\n            review: 0\n        }\n        axios.post(\"http://localhost:5000/session/approve_post\", body)\n        .then(response1 => {\n            alert(`You have successfully confirmed the approval of the session`)\n            var req = response1.data[0]\n            axios.post(\"http://localhost:5000/session/session\", body)\n            .then(response => {\n                this.props.fetchHome(this.props.student_id, this.props.is_teacher)\n                //console.log(response)\n                var bod1 = req\n                bod1.first_name = this.props.first_name\n                bod1.last_name = this.props.last_name \n                bod1.grade = this.props.grade\n                bod1.board = this.props.board\n                bod1.type = \"teacher_session_confirm\"\n                bod1.receiver = this.state.teacher.email_id\n                var bod = {\n                    request_id: this.props.request_id,\n                    mentor_id: this.state.teacher.user_id\n                }\n                axios.post(\"http://localhost:5000/session/set_approval\", bod)\n                .then(respo => {\n                    console.log(\"done\")\n                })\n                .catch(err => {\n                    console.log(err.message)\n                })\n                axios.post(\"http://localhost:5000/users/sendmail\", bod1)\n                .then(re => {\n                    console.log(\"Email sent successfully\")\n                })\n                .catch(err => {\n                    console.log(\"Error in sending mail\")\n                })\n\n                var bod2 = req\n                bod2.type = \"student_session_confirm\"\n                bod2.first_name = this.state.teacher.first_name\n                bod2.last_name = this.state.teacher.last_name\n                bod2.sessions_taken = this.state.teacher.sessions_taken\n                bod2.rating = this.state.teacher.rating_points\n                bod2.qualification = this.state.teacher.qualification\n                bod2.receiver = this.state.teacher.email_id\n                axios.post(\"http://localhost:5000/users/sendmail\", bod2)\n                .then(re => {\n                    console.log(\"Email sent successfully\")\n                })\n                .catch(err => {\n                    console.log(\"Error in sending mail\")\n                })\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Button color=\"warning\" onClick={this.toggle}>{this.props.username}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader className=\"titleModal\">{this.state.teacher.first_name} {this.state.teacher.last_name}</ModalHeader>\n                    <ModalHeader className=\"titleModal\">\n                        <Col sm = \"auto\">\n                            <img\n                                style={{height: \"200px\"}}\n                                src={this.state.teacher.image_link}\n                                alt=\"mentor image\"\n                            ></img>\n                        </Col>\n                    </ModalHeader>\n                    <ModalBody>\n                        <Row>\n                            <Col lg=\"6\">Username:</Col>\n                            <Col lg=\"6\">{this.props.username}</Col>\n                        </Row>\n                        <Row>\n                            <Col lg=\"6\">Qualification:</Col>\n                            <Col lg=\"6\">{this.state.teacher.qualification}</Col>\n                        </Row>\n                        <Row>\n                            <Col lg=\"6\">Sessions Taken:</Col>\n                            <Col lg=\"6\">{this.state.teacher.sessions_taken}</Col>\n                        </Row>\n                        <Row>\n                            <Col lg=\"6\">Rating Points:</Col>\n                            <Col lg=\"6\">{this.state.teacher.rating_points}</Col>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={this.confirm_sess}>\n                            Confirm Approval\n                        </Button>\n                        <Button color=\"danger\" onClick={this.toggle}>\n                            Back\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      student_id: state.users.user_id,\n      first_name: state.users.first_name,\n      last_name: state.users.last_name,\n      email_id: state.users.email_id,\n      grade: state.users.grade,\n      board: state.users.board,\n      is_teacher: state.users.is_teacher\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      fetchHome: (id, is_teacher) => dispatch(fetch_home(id, is_teacher)),\n    };\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PendingReqMentor)","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminActions.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js",["203","204","205"],"/home/chetas/projects/se_project/eduapp/src/components/Prompt.js",[],{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":8,"column":21,"nodeType":"212","messageId":"213","endLine":8,"endColumn":32},{"ruleId":"210","severity":1,"message":"214","line":8,"column":34,"nodeType":"212","messageId":"213","endLine":8,"endColumn":55},{"ruleId":"210","severity":1,"message":"215","line":9,"column":8,"nodeType":"212","messageId":"213","endLine":9,"endColumn":10},{"ruleId":"210","severity":1,"message":"216","line":16,"column":10,"nodeType":"212","messageId":"213","endLine":16,"endColumn":18},{"ruleId":"210","severity":1,"message":"217","line":17,"column":10,"nodeType":"212","messageId":"213","endLine":17,"endColumn":18},{"ruleId":"210","severity":1,"message":"218","line":18,"column":10,"nodeType":"212","messageId":"213","endLine":18,"endColumn":18},{"ruleId":"210","severity":1,"message":"219","line":19,"column":10,"nodeType":"212","messageId":"213","endLine":19,"endColumn":19},{"ruleId":"210","severity":1,"message":"220","line":19,"column":21,"nodeType":"212","messageId":"213","endLine":19,"endColumn":30},{"ruleId":"210","severity":1,"message":"221","line":20,"column":10,"nodeType":"212","messageId":"213","endLine":20,"endColumn":18},{"ruleId":"210","severity":1,"message":"222","line":20,"column":20,"nodeType":"212","messageId":"213","endLine":20,"endColumn":28},{"ruleId":"223","severity":1,"message":"224","line":29,"column":6,"nodeType":"225","endLine":29,"endColumn":22,"suggestions":"226"},{"ruleId":"210","severity":1,"message":"227","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":22},{"ruleId":"228","severity":1,"message":"229","line":12,"column":52,"nodeType":"230","messageId":"231","endLine":12,"endColumn":54},{"ruleId":"228","severity":1,"message":"229","line":37,"column":57,"nodeType":"230","messageId":"231","endLine":37,"endColumn":59},{"ruleId":"210","severity":1,"message":"232","line":10,"column":5,"nodeType":"212","messageId":"213","endLine":10,"endColumn":12},{"ruleId":"233","severity":1,"message":"234","line":98,"column":118,"nodeType":"235","endLine":98,"endColumn":133},{"ruleId":"210","severity":1,"message":"236","line":2,"column":52,"nodeType":"212","messageId":"213","endLine":2,"endColumn":67},{"ruleId":"210","severity":1,"message":"237","line":3,"column":49,"nodeType":"212","messageId":"213","endLine":3,"endColumn":52},{"ruleId":"210","severity":1,"message":"238","line":3,"column":54,"nodeType":"212","messageId":"213","endLine":3,"endColumn":63},{"ruleId":"228","severity":1,"message":"229","line":47,"column":17,"nodeType":"230","messageId":"231","endLine":47,"endColumn":19},{"ruleId":"210","severity":1,"message":"239","line":4,"column":69,"nodeType":"212","messageId":"213","endLine":4,"endColumn":72},{"ruleId":"228","severity":1,"message":"229","line":38,"column":47,"nodeType":"230","messageId":"231","endLine":38,"endColumn":49},{"ruleId":"228","severity":1,"message":"229","line":110,"column":36,"nodeType":"230","messageId":"231","endLine":110,"endColumn":38},{"ruleId":"210","severity":1,"message":"240","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":16},{"ruleId":"241","severity":1,"message":"242","line":64,"column":17,"nodeType":"212","messageId":"243","endLine":64,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":172,"column":40,"nodeType":"230","messageId":"231","endLine":172,"endColumn":42},{"ruleId":"228","severity":1,"message":"229","line":189,"column":44,"nodeType":"230","messageId":"231","endLine":189,"endColumn":46},{"ruleId":"210","severity":1,"message":"244","line":17,"column":3,"nodeType":"212","messageId":"213","endLine":17,"endColumn":14},{"ruleId":"228","severity":1,"message":"245","line":132,"column":47,"nodeType":"230","messageId":"231","endLine":132,"endColumn":49},{"ruleId":"210","severity":1,"message":"246","line":184,"column":7,"nodeType":"212","messageId":"213","endLine":184,"endColumn":17},{"ruleId":"247","severity":1,"message":"248","line":274,"column":21,"nodeType":"235","endLine":277,"endColumn":22},{"ruleId":"210","severity":1,"message":"237","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":6},{"ruleId":"210","severity":1,"message":"249","line":15,"column":20,"nodeType":"212","messageId":"213","endLine":15,"endColumn":26},{"ruleId":"228","severity":1,"message":"245","line":130,"column":28,"nodeType":"230","messageId":"231","endLine":130,"endColumn":30},{"ruleId":"210","severity":1,"message":"250","line":8,"column":3,"nodeType":"212","messageId":"213","endLine":8,"endColumn":12},{"ruleId":"210","severity":1,"message":"251","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":8},{"ruleId":"210","severity":1,"message":"252","line":10,"column":3,"nodeType":"212","messageId":"213","endLine":10,"endColumn":8},{"ruleId":"228","severity":1,"message":"245","line":78,"column":27,"nodeType":"230","messageId":"231","endLine":78,"endColumn":29},{"ruleId":"253","severity":1,"message":"254","line":120,"column":25,"nodeType":"235","endLine":120,"endColumn":66},{"ruleId":"253","severity":1,"message":"254","line":146,"column":23,"nodeType":"235","endLine":146,"endColumn":64},{"ruleId":"247","severity":1,"message":"248","line":155,"column":15,"nodeType":"235","endLine":155,"endColumn":64},{"ruleId":"247","severity":1,"message":"248","line":200,"column":15,"nodeType":"235","endLine":200,"endColumn":70},{"ruleId":"247","severity":1,"message":"248","line":299,"column":15,"nodeType":"235","endLine":299,"endColumn":64},{"ruleId":"210","severity":1,"message":"255","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"256","line":3,"column":10,"nodeType":"212","messageId":"213","endLine":3,"endColumn":17},{"ruleId":"210","severity":1,"message":"240","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":16},{"ruleId":"210","severity":1,"message":"237","line":4,"column":18,"nodeType":"212","messageId":"213","endLine":4,"endColumn":21},{"ruleId":"210","severity":1,"message":"257","line":4,"column":23,"nodeType":"212","messageId":"213","endLine":4,"endColumn":31},{"ruleId":"210","severity":1,"message":"238","line":4,"column":33,"nodeType":"212","messageId":"213","endLine":4,"endColumn":42},{"ruleId":"210","severity":1,"message":"258","line":4,"column":44,"nodeType":"212","messageId":"213","endLine":4,"endColumn":49},{"ruleId":"259","severity":1,"message":"260","line":10,"column":3,"nodeType":"261","messageId":"262","endLine":12,"endColumn":4},{"ruleId":"210","severity":1,"message":"240","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":16},{"ruleId":"210","severity":1,"message":"239","line":4,"column":48,"nodeType":"212","messageId":"213","endLine":4,"endColumn":51},{"ruleId":"210","severity":1,"message":"240","line":4,"column":10,"nodeType":"212","messageId":"213","endLine":4,"endColumn":16},{"ruleId":"228","severity":1,"message":"245","line":37,"column":27,"nodeType":"230","messageId":"231","endLine":37,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":61,"column":15,"nodeType":"235","endLine":61,"endColumn":65},{"ruleId":"210","severity":1,"message":"255","line":1,"column":8,"nodeType":"212","messageId":"213","endLine":1,"endColumn":13},{"ruleId":"210","severity":1,"message":"263","line":9,"column":3,"nodeType":"212","messageId":"213","endLine":9,"endColumn":14},{"ruleId":"210","severity":1,"message":"239","line":14,"column":3,"nodeType":"212","messageId":"213","endLine":14,"endColumn":6},{"ruleId":"228","severity":1,"message":"245","line":84,"column":25,"nodeType":"230","messageId":"231","endLine":84,"endColumn":27},{"ruleId":"253","severity":1,"message":"254","line":112,"column":11,"nodeType":"235","endLine":112,"endColumn":54},{"ruleId":"228","severity":1,"message":"229","line":117,"column":28,"nodeType":"230","messageId":"231","endLine":117,"endColumn":30},{"ruleId":"228","severity":1,"message":"229","line":146,"column":31,"nodeType":"230","messageId":"231","endLine":146,"endColumn":33},{"ruleId":"264","severity":1,"message":"265","line":117,"column":29,"nodeType":"235","endLine":121,"endColumn":30},{"ruleId":"210","severity":1,"message":"263","line":4,"column":49,"nodeType":"212","messageId":"213","endLine":4,"endColumn":60},{"ruleId":"210","severity":1,"message":"239","line":4,"column":93,"nodeType":"212","messageId":"213","endLine":4,"endColumn":96},{"ruleId":"228","severity":1,"message":"245","line":70,"column":28,"nodeType":"230","messageId":"231","endLine":70,"endColumn":30},"no-native-reassign",["266"],"no-negated-in-lhs",["267"],"no-unused-vars","'getInterest' is defined but never used.","Identifier","unusedVar","'set_all_lang_and_subs' is defined but never used.","'Tp' is defined but never used.","'LoggedIn' is assigned a value but never used.","'Username' is assigned a value but never used.","'Password' is assigned a value but never used.","'all_langs' is assigned a value but never used.","'set_langs' is assigned a value but never used.","'all_subs' is assigned a value but never used.","'set_subs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["268"],"'sessionReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavLink' is defined but never used.","react/jsx-pascal-case","Imported JSX component Request_view must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'SET_MEETING_URL' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","no-redeclare","'body' is already defined.","redeclared","'getlanguage' is defined but never used.","Expected '!==' and instead saw '!='.","'image_link' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Router' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'axios' is defined but never used.","'connect' is defined but never used.","'Collapse' is defined but never used.","'Table' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ModalFooter' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},"Update the dependencies array to be: [props, props.loggedIn]",{"range":"271","text":"272"},[856,872],"[props, props.loggedIn]"]