[{"/home/chetas/projects/se_project/eduapp/src/index.js":"1","/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js":"2","/home/chetas/projects/se_project/eduapp/src/App.js":"3","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js":"4","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js":"5","/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js":"6","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js":"7","/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js":"8","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js":"9","/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js":"10","/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js":"11","/home/chetas/projects/se_project/eduapp/src/redux/store.js":"12","/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js":"13","/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js":"14","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js":"15","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js":"16","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js":"17","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js":"18","/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js":"19","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js":"20","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js":"21"},{"size":673,"mtime":1612365787657,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1612017628334,"results":"24","hashOfConfig":"23"},{"size":1408,"mtime":1613286597299,"results":"25","hashOfConfig":"23"},{"size":4928,"mtime":1613027596811,"results":"26","hashOfConfig":"23"},{"size":9831,"mtime":1613301146775,"results":"27","hashOfConfig":"23"},{"size":2534,"mtime":1613294154644,"results":"28","hashOfConfig":"23"},{"size":888,"mtime":1612369906889,"results":"29","hashOfConfig":"23"},{"size":17287,"mtime":1613293781758,"results":"30","hashOfConfig":"23"},{"size":9044,"mtime":1613031972292,"results":"31","hashOfConfig":"23"},{"size":7747,"mtime":1613288544615,"results":"32","hashOfConfig":"23"},{"size":555,"mtime":1613286648161,"results":"33","hashOfConfig":"23"},{"size":461,"mtime":1613203263558,"results":"34","hashOfConfig":"23"},{"size":3208,"mtime":1613293744398,"results":"35","hashOfConfig":"23"},{"size":4723,"mtime":1613301038080,"results":"36","hashOfConfig":"23"},{"size":6035,"mtime":1613276407760,"results":"37","hashOfConfig":"23"},{"size":901,"mtime":1613203245898,"results":"38","hashOfConfig":"23"},{"size":229,"mtime":1613203056943,"results":"39","hashOfConfig":"23"},{"size":2993,"mtime":1613283671770,"results":"40","hashOfConfig":"23"},{"size":3366,"mtime":1613296556708,"results":"41","hashOfConfig":"23"},{"size":3159,"mtime":1613297544013,"results":"42","hashOfConfig":"23"},{"size":6819,"mtime":1613298555926,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"vzf3x9",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/chetas/projects/se_project/eduapp/src/index.js",[],["93","94"],"/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js",[],"/home/chetas/projects/se_project/eduapp/src/App.js",["95","96","97","98","99","100","101","102","103","104"],"import React from 'react'\n//import {Provider} from 'react-redux'\nimport './App.css';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport {connect} from 'react-redux'\nimport { checkUser, getInterest, set_all_lang_and_subs } from './redux/Users/userActions';\n//import store from './redux/store';\n\nfunction App(props) {\n\n  axios.defaults.withCredentials = true;\n\n  const [LoggedIn, setLogin] = useState(false);\n  const [Username, setUser] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [all_langs, set_langs] = useState([]);\n  const [all_subs, set_subs] = useState([]);\n\n\n  useEffect(() => {\n    props.checkUser()\n    setLogin(props.loggedIn)\n    setUser(props.username)\n    setPassword(props.password)\n    \n  }, [props.loggedIn])\n\n  return (\n      <div className=\"App\">\n        <Navigation/>\n      </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.users.loggedIn,\n    username: state.users.username,\n    password: state.users.password,\n    user_id: state.users.user_id,\n    is_teacher: state.users.is_teacher,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkUser: () => dispatch(checkUser()),\n    // set_all_langs_and_subs: (value) => dispatch(set_all_lang_and_subs(value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js",["105"],"import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom'\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand, \n    NavbarToggler,\n    Nav,\n    NavItem,\n    Container\n} from 'reactstrap';\nimport './Styles.css'\nimport Home from '../HomePage/Home';\nimport Login from '../Users/Login';\nimport Register from '../Users/Register';\nimport Logout from '../Users/Logout';\nimport Profile from '../Users/Profile';\nimport {connect} from 'react-redux';\nimport Request_view from '../Sessions/Request_view';\n// import Request_session from '../Sessions/Request_session';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render(){\n        return(\n            <Router>\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\" fixed=\"top\">\n                    <Container>\n                        <NavbarBrand>EduApp</NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar> \n                                <NavItem>\n                                    <Link className=\"linkclass\" to=\"/\">Home</Link>\n                                </NavItem>\n                                {!this.props.LoggedIn &&\n                                <React.Fragment>\n                                    <NavItem>\n                                        <Link className=\"linkclass\" to=\"/Login\">Login</Link>\n                                    </NavItem> \n                                    <NavItem>\n                                        <Link className=\"linkclass\" to=\"/Register\">Register</Link>\n                                    </NavItem>\n                                </React.Fragment>\n                                }\n                                {\n                                    this.props.LoggedIn &&\n                                    <React.Fragment>\n                                        <NavItem>\n                                            <Link className=\"linkclass\" to=\"/Profile\">Profile</Link>\n                                        </NavItem>\n                                        {/* {\n                                            !this.props.is_teacher &&\n                                            <NavItem>\n                                                <Link className=\"linkclass\" to=\"/Request_Session\">Req_Sess</Link>\n                                            </NavItem>\n                                        } */}\n                                        {\n                                            this.props.is_teacher &&\n                                            <NavItem>\n                                                <Link className=\"linkclass\" to=\"/View_Requests\">Requests</Link>\n                                            </NavItem>\n                                        }\n                                        <NavItem>\n                                            <Link className=\"linkclass\" to=\"/Logout\">Logout</Link>\n                                        </NavItem>\n                                    </React.Fragment>\n                                }       \n                            </Nav> \n                        </Collapse>\n                    </Container>\n                </Navbar>\n                <Switch>  \n                    <Route path=\"/Login\" render={(props) => (!this.props.LoggedIn ? (<Login/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Register\" render={(props) => (!this.props.LoggedIn ? (<Register/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Logout\" render={(props) => (this.props.LoggedIn ? (<Logout/>) : (<Redirect to=\"/Login\"></Redirect>))}/>\n                    <Route path=\"/Profile\" render={(props) => (this.props.LoggedIn ? (<Profile/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/View_Requests\" render={(props) => (this.props.LoggedIn ? (this.props.is_teacher ? (<Request_view/>): (<Redirect to=\"/\"></Redirect>)): (<Redirect to=\"/Login\"></Redirect>))}/>\n                    {/* <Route path=\"/Request_Session\" render={(props) => (this.props.LoggedIn ? (!this.props.is_teacher ? (<Request_session/>): (<Redirect to=\"/View_Requests\"></Redirect>)): (<Redirect to=\"/Login\"></Redirect>))}/> */}\n                    <Route path=\"/\" exact component={Home}/>                           \n                </Switch> \n            </Router>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        LoggedIn: state.users.loggedIn,\n        is_teacher: state.users.is_teacher\n    }\n}\n\nexport default connect(mapStateToProps)(Navigation)\n\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js",["106"],"/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js",["107","108"],"import React, { Component } from \"react\";\nimport { Button, Col, Container, Form, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport {connect} from \"react-redux\"\nimport axios from \"axios\";\nimport { checkUser, getLanguage, getlanguage, getSubject, removeLanguage, removeSubject } from \"../../redux/Users/userActions\";\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            edit_profile: false,\n            first_name: props.first_name,\n            last_name: props.last_name,\n            email_id: props.email_id,\n            grade: props.grade,\n            board: props.board,\n            qualification: props.qualification,\n            add_language: false,\n            add_subject: false,\n            languages: [],\n            subjects: [],\n            selected_subject: '',\n            selected_subject_id: '',\n            selected_language: '',\n            selected_language_id: '',\n        }\n    }\n\n    toggle_profile = () => {\n        this.setState({\n            edit_profile: !this.state.edit_profile\n        })\n    }\n\n    toggle_language = () => {\n        this.setState({\n            add_language: !this.state.add_language\n        })\n    }\n\n    toggle_subject = () => {\n        this.setState({\n            add_subject: !this.state.add_subject\n        })\n    }\n\n\n    complete_edit = () => {\n        this.toggle_profile()\n        var body = {\n            user_id: this.props.user_id,\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email_id: this.state.email_id,\n            grade: this.state.grade,\n            board: this.state.board,\n            qualification: this.state.qualification\n        }\n        if(this.props.is_teacher) {\n            axios.post(\"http://localhost:5000/users/editteacher\", body)\n            .then(response => {\n                this.props.checkUser()\n                alert('Profile updated')\n            })\n            .catch(error => {\n                console.log(error.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/editstudent\", body)\n            .then(response => {\n                this.props.checkUser()\n                alert('Profile updated')\n            })\n            .catch(error => {\n                console.log(error.message)\n            })\n        }\n    }\n\n    componentDidMount() {\n        this.setState({\n            languages: this.props.all_languages,\n            subjects: this.props.all_subjects\n        })\n    }\n\n    handle = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleboard = e => {\n        this.setState({\n            type_selected: true,\n            board: e.target[e.target.selectedIndex].value\n        })\n    }\n\n    addSubject = e => {\n        if (this.props.subjects.some(sub => sub.subject_name === this.state.selected_subject)) {\n            alert(`${this.state.selected_subject} already exists in your favorites`)\n        }\n        else if(this.state.selected_subject_id != \"\") {\n            this.props.getSubject(this.props.user_id, this.props.is_teacher, {id: parseInt(this.state.selected_subject_id), sub: this.state.selected_subject})\n            this.setState({\n                selected_subject_id: \"\", \n                selected_subject: \"\"\n            })    \n            this.toggle_subject()\n        }\n        else {\n            alert(\"Please enter a subject\")\n        }\n    }\n\n    addLanguage = e => {\n        if (this.props.languages.some(lang => lang.language_name === this.state.selected_language)) {\n            alert(`${this.state.selected_language} already exists in your favorites`)\n        }\n        else if(this.state.selected_language_id) {\n            this.props.getLanguage(this.props.user_id, {id: parseInt(this.state.selected_language_id), lang: this.state.selected_language})\n            this.setState({\n                selected_language_id: \"\", \n                selected_language: \"\"\n            })\n            this.toggle_language()\n        }\n        else {\n            alert(\"Please enter a language\")\n        }\n    }\n\n    deleteSubject = (id, sub) => {\n        this.props.removeSubject(this.props.user_id, this.props.is_teacher, id)\n        alert(`${sub} subject removed successfully`)\n    }\n\n    deleteLanguage = (id, lang) => {\n        this.props.removeLanguage(this.props.user_id, id)\n        alert(`${lang} language removed successfully`)\n    }\n\n    render() {\n        const {username, first_name, last_name, email_id, session_taken,image_link, grade, board, qualification, rating_points, is_teacher} = this.props\n\n        var subjects = this.props.subjects.map((subject, index) => (\n            <React.Fragment key={subject.subject_id}>\n                <Row>\n                    <Col sm={1}></Col>\n                    <Col sm={8}>\n                    <div>{index + 1} {subject.subject_name}</div>\n                    </Col>\n                    <Col sm={2}>\n                        <Button color=\"danger\" onClick={() => this.deleteSubject(subject.subject_id, subject.subject_name)}>&times;</Button>\n                    </Col>\n                    <Col sm={1}>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        ))\n\n        var languages = this.props.languages.map((language, index) => (\n            // <div key={language.language_id}>{index + 1} {language.language_name}</div>\n            <React.Fragment key={language.language_id}>\n                <Row>\n                    <Col sm={1}></Col>\n                    <Col sm={8}>\n                    <div>{index + 1} {language.language_name}</div>\n                    </Col>\n                    <Col sm={2}>\n                        <Button color=\"danger\" onClick={() => this.deleteLanguage(language.language_id, language.language_name)}>&times;</Button>\n                    </Col>\n                    <Col sm={1}>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        ))\n\n\n        var all_subjects = this.state.subjects.map((subject) => (\n            <option key={subject.subject_id} value={subject.subject_name} id={subject.subject_id}>{subject.subject_name}</option>\n        ))\n\n        var all_languages = this.state.languages.map((language) => (\n            <option key={language.language_id} value={language.language_name} id={language.language_id}>{language.language_name}</option>\n        ))\n        \n        \n\n        return(\n            <Container className=\"toplookout\">\n                <Row>\n                    <Col>\n                        <h3>Personal Details</h3>\n                        {!this.state.edit_profile &&\n                        <React.Fragment>\n                            <p>Username: {username}</p>\n                            <p>Name: {first_name} {last_name}</p>\n                            <p>Email: {email_id}</p>\n                            <p>Image Link: {image_link}</p>\n                            <p>Sessions taken: {session_taken}</p>\n                            {is_teacher &&\n                                <React.Fragment>\n                                    <p>Qualification: {qualification}</p>\n                                    <p>Rating Points: {rating_points}</p>\n                                </React.Fragment>\n                            }\n                            {!is_teacher &&\n                                <React.Fragment>\n                                    <p>Grade: {grade}</p>\n                                    <p>Board: {board}</p>\n                                </React.Fragment>\n                            }\n                            <Button onClick={this.toggle_profile}>Edit Profile</Button>\n                        </React.Fragment>    \n                        }\n                        {this.state.edit_profile &&\n                            <React.Fragment>\n                                <Form>\n                                    <FormGroup row>\n                                        <Label for=\"first_name\" sm={2}>First Name:</Label>\n                                        <Col sm={10}>\n                                            <Input type=\"text\" name=\"first_name\" id=\"first_name\" placeholder=\"Enter your name\" value={this.state.first_name} onChange={this.handle}></Input>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"last_name\" sm={2}>Last Name:</Label>\n                                        <Col sm={10}>\n                                            <Input type=\"text\" name=\"last_name\" id=\"last_name\" placeholder=\"Enter your last name\" value={this.state.last_name} onChange={this.handle}></Input>\n                                        </Col>\n                                    </FormGroup>\n                                    <FormGroup row>\n                                        <Label for=\"email\" sm={2}>Email Id:</Label>\n                                        <Col sm={10}>\n                                            <Input type=\"text\" name=\"email_id\" id=\"email_id\" placeholder=\"Enter your email id\" value={this.state.email_id} onChange={this.handle}></Input>\n                                        </Col>\n                                    </FormGroup>\n                                    {\n                                        this.props.is_teacher &&\n                                        <FormGroup row>\n                                            <Label for=\"qualification\" sm={2}>Qualification:</Label>\n                                            <Col sm={10}>\n                                                <Input type=\"text\" name=\"qualification\" id=\"qualification\" placeholder=\"Enter your Qualification\" value={this.state.qualification} onChange={this.handle}></Input>\n                                            </Col>\n                                        </FormGroup>\n                                    }\n                                    {\n                                        !this.props.is_teacher &&\n                                        <React.Fragment>\n                                            <FormGroup row>\n                                                <Label for=\"grade\" sm={2}>Grade:</Label>\n                                                <Col sm={10}>\n                                                    <Input type=\"number\" name=\"grade\" id=\"grade\" placeholder=\"Enter your Grade\" value={this.state.grade} onChange={this.handle}></Input>\n                                                </Col>\n                                            </FormGroup>\n                                            <FormGroup row>\n                                                <Label for=\"board\" sm={2}>Board:</Label>\n                                                <Col sm={10}>\n                                                    <Input type=\"select\" name=\"board\" id=\"board\" placeholder=\"Enter your board\" value={this.state.board} onChange={this.handleboard}>\n                                                        <option value=\"\" disabled selected>Select type</option>\n                                                        <option value=\"SSC\">SSC</option>\n                                                        <option value=\"CBSE\">CBSE</option>\n                                                        <option value=\"ICSE\">ICSE</option>\n                                                        <option value=\"other\">other..</option>\n                                                    </Input>\n                                                </Col>\n                                            </FormGroup>\n                                        </React.Fragment>\n                                    }     \n                                </Form>\n                                <Row>\n                                    <Col>\n                                        <Button onClick={this.toggle_profile}>Back</Button>\n                                    </Col>\n                                    <Col>\n                                        <Button color=\"success\" onClick={this.complete_edit}>Submit</Button>\n                                    </Col>\n                                </Row>\n                                \n                            </React.Fragment>\n                        }\n                    </Col>\n                    <Col>\n                        <h3>Interests</h3>\n                        <React.Fragment>\n                            <Row>\n                                {this.props.is_teacher &&\n                                    <Col>\n                                        <div>\n                                            <h4>Languages</h4>\n                                            {languages}\n                                        </div>\n                                        {\n                                            this.state.add_language &&\n                                            <React.Fragment>\n                                                <Row>\n                                                    <Col sm={10}>\n                                                        <Input type=\"select\" onChange={e => this.setState({selected_language_id: e.target[e.target.selectedIndex].id, selected_language: e.target[e.target.selectedIndex].value})}>\n                                                            <option value=\"\" disabled selected>Select subject</option>\n                                                            {all_languages}\n                                                        </Input>\n                                                    </Col>\n                                                    <Col sm={2}>\n                                                        <Button color=\"success\" onClick={this.addLanguage}>&#43;</Button>\n                                                    </Col>\n                                                </Row>\n                                            </React.Fragment>\n                                        }\n                                        <button onClick={this.toggle_language}>Add Language</button>\n                                    </Col>\n                                }\n                                <Col>\n                                    <div>\n                                        <h4>Subjects</h4>\n                                        {subjects}\n                                    </div>\n                                    {\n                                        this.state.add_subject &&\n                                        <React.Fragment>\n                                            <Row>\n\n                                                <Col sm={10}>\n                                                    <Input type=\"select\" onChange={e => this.setState({selected_subject_id: e.target[e.target.selectedIndex].id, selected_subject: e.target[e.target.selectedIndex].value})}>\n                                                        <option value=\"\" disabled selected>Select subject</option>\n                                                        {all_subjects}\n                                                    </Input>\n                                                </Col>\n                                                <Col sm={2}>\n                                                    <Button color=\"success\" onClick={this.addSubject}>&#43;</Button>\n                                                </Col>\n                                            </Row>\n                                        </React.Fragment>\n                                    }\n                                    <button onClick={this.toggle_subject}>Add Subject</button>\n                                </Col>\n                            </Row>\n                        </React.Fragment>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.users.user_id,\n        username: state.users.username,\n        first_name: state.users.first_name,\n        last_name: state.users.last_name,\n        email_id: state.users.email_id,\n        session_taken: state.users.session_taken,\n        image_link: state.users.image_link,\n        grade: state.users.grade,\n        board: state.users.board,\n        qualification: state.users.qualification,\n        rating_points: state.users.rating_points,\n        is_teacher: state.users.is_teacher,\n        languages: state.users.languages,\n        subjects: state.users.subjects,\n        all_subjects: state.users.all_subjects,\n        all_languages: state.users.all_languages       \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      checkUser: () => dispatch(checkUser()),\n      getSubject: (id, type, sub) => dispatch(getSubject(id, type, sub)),\n      getLanguage: (id, lang) => dispatch(getLanguage(id, lang)),\n      removeSubject: (id, type, sub) => dispatch(removeSubject(id, type, sub)),\n      removeLanguage: (id, lang) => dispatch(removeLanguage(id, lang))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js",["109","110"],"import React, {Component} from 'react';\nimport axios from 'axios'\nimport { Button, Form, FormGroup, Label, Input, Col, Container, Row } from 'reactstrap';\nimport './Styles.css'\nimport { BrowserRouter as Router, Link, Redirect, Switch, Route } from 'react-router-dom';\nimport Login from './Login';\n\naxios.defaults.withCredentials = true;\n\nclass Register extends Component {\n    constructor() {\n        super()\n        this.state = {\n            id: -1,\n            username: '',\n            password: '',\n            first_name: '',\n            last_name: '',\n            email_id: '',\n            image_link: '',\n            qualification: '',\n            grade: 1,\n            board: '',\n            is_teacher: false,\n            type_selected: false,\n            register: false\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        var body = this.state\n        axios.post(\"http://localhost:5000/users/register\", body)\n        .then(response => {\n            if(response.data.affectedRows === 1) {\n                this.setState({\n                    register: true,\n                    id: response.data.insertId\n                })\n                if(this.state.is_teacher) {\n                    axios.post(\"http://localhost:5000/users/teacher\", this.state)\n                    .then(res=>{\n                        console.log(\"success\")\n                    })\n                    .catch(err=> {\n                        console.log(\"fail\")\n                    })\n                }\n                else {\n                    axios.post(\"http://localhost:5000/users/student\", this.state)\n                    .then(res=>{\n                        console.log(\"success\")\n                    })\n                    .catch(err=> {\n                        console.log(\"fail\")\n                    })\n                }\n                alert(`${this.state.username} has been registered`)\n                console.log(response.data)\n            }\n            else {\n                alert(\"User already exists\");\n            }\n        })\n        .catch(error => {\n            console.log(error)\n            console.log(body)\n        })\n        if(this.state.register) {\n            console.log(this.state)\n        }\n        \n    }\n\n    handle = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handletype = e => {\n        this.setState({\n            type_selected: true,\n            is_teacher: (e.target[e.target.selectedIndex].value === \"teacher\") ? true : false,\n        })\n    }\n\n    handleboard = e => {\n        this.setState({\n            type_selected: true,\n            board: e.target[e.target.selectedIndex].value\n        })\n    }\n\n    componentDidUpdate(PrevProps, PrevState) {\n        if(PrevState.register != this.state.register) {\n            console.log(this.state.register)\n        }\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n        \n            {!this.state.register &&\n                <div className=\"toplookout\">\n                    <p>Registration Form</p>\n                    <Container>\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup row>\n                            <Label for=\"username\" sm={2}>Username:</Label>\n                            <Col sm={10}>\n                                <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter Username\" value={this.state.username} onChange={this.handle}></Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label for=\"first_name\" sm={2}>First Name:</Label>\n                            <Col sm={10}>\n                                <Input type=\"text\" name=\"first_name\" id=\"first_name\" placeholder=\"Enter your name\" value={this.state.first_name} onChange={this.handle}></Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label for=\"last_name\" sm={2}>Last Name:</Label>\n                            <Col sm={10}>\n                                <Input type=\"text\" name=\"last_name\" id=\"last_name\" placeholder=\"Enter your last name\" value={this.state.last_name} onChange={this.handle}></Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label for=\"email\" sm={2}>Email Id:</Label>\n                            <Col sm={10}>\n                                <Input type=\"text\" name=\"email_id\" id=\"email_id\" placeholder=\"Enter your email id\" value={this.state.email_id} onChange={this.handle}></Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup row>\n                            <Label for=\"is_teacher\" sm={2}>Type:</Label>\n                            <Col sm={10}>\n                                <Input type=\"select\" name=\"is_teacher\" id=\"is_teacher\" onChange={this.handletype}>\n                                    <option value=\"\" disabled selected>Select type</option>\n                                    <option value=\"teacher\">Teacher</option>\n                                    <option value=\"student\">Student</option>\n                                </Input>\n                            </Col>\n                        </FormGroup>\n                        {\n                            this.state.type_selected && this.state.is_teacher &&\n                            <React.Fragment>\n                                <FormGroup row>\n                                    <Label for=\"qualification\" sm={2}>Qualification:</Label>\n                                    <Col sm={10}>\n                                        <Input type=\"text\" name=\"qualification\" id=\"qualification\" placeholder=\"Enter your Qualification\" value={this.state.qualification} onChange={this.handle}></Input>\n                                    </Col>\n                                </FormGroup>\n                            </React.Fragment>\n                        }\n                        {\n                            this.state.type_selected && !this.state.is_teacher &&\n                            <Row>\n                                <Col>\n                                    <FormGroup row>\n                                        <Label for=\"grade\" sm={2}>Grade:</Label>\n                                        <Col sm={10}>\n                                            <Input type=\"number\" name=\"grade\" id=\"grade\" placeholder=\"Enter your Grade\" value={this.state.grade} onChange={this.handle}></Input>\n                                        </Col>\n                                    </FormGroup>\n                                </Col>\n                                <Col>\n                                    <FormGroup row>\n                                        <Label for=\"board\" sm={2}>Board:</Label>\n                                        <Col sm={10}>\n                                            <Input type=\"select\" name=\"board\" id=\"board\" placeholder=\"Enter your board\" value={this.state.board} onChange={this.handleboard}>\n                                                <option value=\"\" disabled selected>Select type</option>\n                                                <option value=\"SSC\">SSC</option>\n                                                <option value=\"CBSE\">CBSE</option>\n                                                <option value=\"ICSE\">ICSE</option>\n                                                <option value=\"other\">other..</option>\n                                            </Input>\n                                        </Col>\n                                    </FormGroup>\n                                </Col>\n                            </Row>\n                        }\n                        <FormGroup row>\n                            <Label for=\"password\" sm={2}>Password:</Label>\n                            <Col sm={10}>\n                                <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Password\" value={this.state.password} onChange={this.handle}></Input>\n                            </Col>\n                        </FormGroup>\n                        <FormGroup>\n                            Already have an account? <Link to=\"/Login\">Sign in</Link>\n                        </FormGroup>\n                        <Button>Register</Button>\n                    </Form>\n                    </Container>\n                </div>\n            }\n            {\n                this.state.register &&\n                <Container>\n                        <Switch> \n                            <Route path=\"/Login\" render={(props) => (<Login/>)}/>   \n                            <Route path=\"/Register\" render={(props) => (<Redirect to=\"/Login\"></Redirect>)}/>\n                        </Switch>\n                </Container>\n            }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Register;","/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js",["111"],"import { ADD_LANGUAGE, ADD_SUBJECT, DELETE_LANGUAGE, DELETE_SUBJECT, ERROR, GET_LANGUAGE, GET_STUDENT, GET_SUBJECT, GET_TEACHER, SET_ALL_LANG, SET_ALL_SUB ,LOGIN, LOGOUT, SET_LOGIN } from \"./userTypes\"\nimport axios from 'axios'\n\nexport const checkUser = (dispatch) => {\n    return (dispatch) => {\n        axios.get(\"http://localhost:5000/users/login\")\n        .then((response) => {\n            if(response.data.loggedIn === true) {\n                dispatch(login(response.data.user[0]))\n                //console.log(response.data.user[0].user_type)\n                \n                if(response.data.user[0].user_type == 0) {\n                    axios.get(\"http://localhost:5000/users/student\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getstudent(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/student_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                        //console.log(resp.data)\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                else {\n                    axios.get(\"http://localhost:5000/users/teacher\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getteacher(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/teacher_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/languages\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getlanguage(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n            }\n            else {\n                dispatch(logout)\n            }\n        })\n        .catch(error => {\n            dispatch(err(error))\n        })\n        axios.get(\"http://localhost:5000/users/all_subjects\")\n        .then((response) => {\n            // set_subs(response.data)\n            dispatch(set_all_subs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n        axios.get(\"http://localhost:5000/users/all_languages\")\n        .then((response) => {\n            dispatch(set_all_langs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n    }\n}\n\nexport const getSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub.id\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/add_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/add_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const getLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang.id\n        }\n        axios.post(\"http://localhost:5000/users/add_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(addLanguage({language_id: lang.id, language_name: lang.lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\n\nexport const removeSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/del_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/del_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const removeLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang\n        }\n        axios.post(\"http://localhost:5000/users/del_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(deleteLanguage({language_id: lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\nexport const set_all_langs = (value) => {\n    return {\n        type: SET_ALL_LANG,\n        payload:value\n    }\n}\n\nexport const set_all_subs = (value) => {\n    return {\n        type: SET_ALL_SUB,\n        payload:value\n    }\n}\n\n\nexport const login = (value) => {\n    return {\n        type: LOGIN,\n        payload: value\n    }\n}\n\nexport const getstudent = (value) => {\n    return {\n        type: GET_STUDENT,\n        payload: value\n    }\n}\n\nexport const getteacher = (value) => {\n    return {\n        type: GET_TEACHER,\n        payload: value\n    }\n}\n\nexport const getsubject = (value) => {\n    return {\n        type: GET_SUBJECT,\n        payload: value\n    }\n}\n\nexport const getlanguage = (value) => {\n    return {\n        type: GET_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: LOGOUT,\n    }\n}\n\nexport const err = (error) => {\n    return {\n        type: ERROR,\n        payload: error.message\n    }\n}\n\nexport const setLogin = () => {\n    return {\n        type: SET_LOGIN\n    }\n}\n\nexport const addSubject = (value) => {\n    return {\n        type: ADD_SUBJECT,\n        payload: value\n    }\n}\n\nexport const addLanguage = (value) => {\n    return {\n        type: ADD_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const deleteSubject = (value) => {\n    return {\n        type: DELETE_SUBJECT,\n        payload: value\n    }\n}\n\nexport const deleteLanguage = (value) => {\n    return {\n        type: DELETE_LANGUAGE,\n        payload: value\n    }\n}","/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/store.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js",["112","113","114","115"],"import axios from 'axios';\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport { send_request } from '../../redux/Session/sessionAction';\n\nclass ReqSession extends Component {\n    constructor() {\n        super() \n        this.state = {\n            modal: false,\n            subject_id: '',\n            topic: '',\n            time_slot: '',\n            date_slot: '',\n            lang: '',\n            subjects: [],\n            languages: []\n        }\n    }\n    toggle = () => {\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    handle = e => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handle1 = e => {\n        this.setState({\n            [e.target.name]: e.target[e.target.selectedIndex].value\n        })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        console.log(this.state)\n\n        var body = {\n            sender_id: this.props.user_id,\n            subject_id: this.state.subject_id,\n            topic: this.state.topic,\n            time_slot: this.state.time_slot,\n            req_date: this.state.date_slot,\n            language_id: this.state.language_id,\n            approved: 0,\n            mentor_specific: -1\n        }\n        this.props.send_request(body)\n\n        this.setState({\n            modal: false,\n            subject_id: '',\n            topic: '',\n            time_slot: '',\n            req_date: '',\n            language_id: '',\n            subjects: [],\n            languages: []\n        })\n    }\n    \n    componentDidUpdate(prevProps, prevState) {\n        if(prevState.modal != this.state.modal && this.state.modal) {\n            this.setState({\n                languages: this.props.all_languages,\n                subjects: this.props.all_subjects\n            })\n        }\n    }\n\n    render() {\n\n        var all_subjects = this.state.subjects.map((subject) => (\n            <option key={subject.subject_id} value={subject.subject_id} id={subject.subject_id}>{subject.subject_name}</option>\n        ))\n\n        var all_languages = this.state.languages.map((language) => (\n            <option key={language.language_id} value={language.language_id} id={language.language_id}>{language.language_name}</option>\n        ))\n\n        return(\n            <React.Fragment>\n\n                <div>\n                    <Button color=\"danger\" onClick={this.toggle}>Request a Session</Button>\n                </div>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                    <ModalHeader>Session Request</ModalHeader>\n                    <ModalBody>\n                        <Form>\n                            <FormGroup row>\n                                <Label for=\"subject_id\" sm={2}>Subject</Label>\n                                <Col sm={10}>\n                                    <Input type=\"select\" name=\"subject_id\" id=\"subject\" onChange={this.handle1}>\n                                        <option value=\"\" disabled selected>Select the subject</option>\n                                        {\n                                            all_subjects\n                                        }\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"topic\" sm={2}>Topic</Label>\n                                <Col sm={10}>\n                                    <Input type=\"text\" name=\"topic\" id=\"topic\" placeholder=\"Enter the topic\" value={this.state.topic} onChange={this.handle}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"time_slot\" sm={2}>Time Slot</Label>\n                                <Col sm={10}>\n                                    <Input type=\"text\" name=\"time_slot\" id=\"time_slot\" value={this.state.time_slot} onChange={this.handle} placeholder=\"Format: hh:mm to hh:mm\"></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"date_slot\" sm={2}>Date</Label>\n                                <Col sm={10}>\n                                    <Input type=\"date\" name=\"date_slot\" id=\"date_slot\" value={this.state.date_slot} onChange={this.handle}></Input>\n                                </Col>\n                            </FormGroup>\n                            <FormGroup row>\n                                <Label for=\"lang\" sm={2}>Language</Label>\n                                <Col sm={10}>\n                                    <Input type=\"select\" name=\"language_id\" id=\"lang\" onChange={this.handle1}>\n                                        <option value=\"\" disabled selected>Select the language</option>\n                                        {\n                                            all_languages\n                                        }\n                                    </Input>\n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.handleSubmit}>Request</Button>\n                            <Button color=\"danger\" onClick={this.toggle}>Back</Button>\n                        </Form>\n                    </ModalBody>\n\n\n\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.users.user_id,\n        all_subjects: state.users.all_subjects,\n        all_languages: state.users.all_languages, \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        send_request: (body) => dispatch(send_request(body))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReqSession);","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js",[],"/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js",["116","117"],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js",["118","119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":8,"column":21,"nodeType":"127","messageId":"128","endLine":8,"endColumn":32},{"ruleId":"125","severity":1,"message":"129","line":8,"column":34,"nodeType":"127","messageId":"128","endLine":8,"endColumn":55},{"ruleId":"125","severity":1,"message":"130","line":15,"column":10,"nodeType":"127","messageId":"128","endLine":15,"endColumn":18},{"ruleId":"125","severity":1,"message":"131","line":16,"column":10,"nodeType":"127","messageId":"128","endLine":16,"endColumn":18},{"ruleId":"125","severity":1,"message":"132","line":17,"column":10,"nodeType":"127","messageId":"128","endLine":17,"endColumn":18},{"ruleId":"125","severity":1,"message":"133","line":18,"column":10,"nodeType":"127","messageId":"128","endLine":18,"endColumn":19},{"ruleId":"125","severity":1,"message":"134","line":18,"column":21,"nodeType":"127","messageId":"128","endLine":18,"endColumn":30},{"ruleId":"125","severity":1,"message":"135","line":19,"column":10,"nodeType":"127","messageId":"128","endLine":19,"endColumn":18},{"ruleId":"125","severity":1,"message":"136","line":19,"column":20,"nodeType":"127","messageId":"128","endLine":19,"endColumn":28},{"ruleId":"137","severity":1,"message":"138","line":28,"column":6,"nodeType":"139","endLine":28,"endColumn":22,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":90,"column":118,"nodeType":"143","endLine":90,"endColumn":133},{"ruleId":"144","severity":1,"message":"145","line":50,"column":30,"nodeType":"146","messageId":"147","endLine":50,"endColumn":32},{"ruleId":"125","severity":1,"message":"148","line":5,"column":34,"nodeType":"127","messageId":"128","endLine":5,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":105,"column":48,"nodeType":"146","messageId":"147","endLine":105,"endColumn":50},{"ruleId":"125","severity":1,"message":"149","line":5,"column":27,"nodeType":"127","messageId":"128","endLine":5,"endColumn":33},{"ruleId":"144","severity":1,"message":"145","line":96,"column":31,"nodeType":"146","messageId":"147","endLine":96,"endColumn":33},{"ruleId":"144","severity":1,"message":"150","line":12,"column":52,"nodeType":"146","messageId":"147","endLine":12,"endColumn":54},{"ruleId":"125","severity":1,"message":"151","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"152","line":4,"column":49,"nodeType":"127","messageId":"128","endLine":4,"endColumn":60},{"ruleId":"125","severity":1,"message":"153","line":4,"column":93,"nodeType":"127","messageId":"128","endLine":4,"endColumn":96},{"ruleId":"144","severity":1,"message":"145","line":68,"column":28,"nodeType":"146","messageId":"147","endLine":68,"endColumn":30},{"ruleId":"125","severity":1,"message":"154","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":33,"column":30,"nodeType":"146","messageId":"147","endLine":33,"endColumn":32},{"ruleId":"125","severity":1,"message":"152","line":4,"column":49,"nodeType":"127","messageId":"128","endLine":4,"endColumn":60},{"ruleId":"125","severity":1,"message":"153","line":4,"column":93,"nodeType":"127","messageId":"128","endLine":4,"endColumn":96},{"ruleId":"144","severity":1,"message":"145","line":68,"column":28,"nodeType":"146","messageId":"147","endLine":68,"endColumn":30},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'getInterest' is defined but never used.","Identifier","unusedVar","'set_all_lang_and_subs' is defined but never used.","'LoggedIn' is assigned a value but never used.","'Username' is assigned a value but never used.","'Password' is assigned a value but never used.","'all_langs' is assigned a value but never used.","'set_langs' is assigned a value but never used.","'all_subs' is assigned a value but never used.","'set_subs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["157"],"react/jsx-pascal-case","Imported JSX component Request_view must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'getlanguage' is defined but never used.","'Router' is defined but never used.","Expected '===' and instead saw '=='.","'axios' is defined but never used.","'ModalFooter' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},"Update the dependencies array to be: [props, props.loggedIn]",{"range":"160","text":"161"},[822,838],"[props, props.loggedIn]"]