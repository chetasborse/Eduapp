[{"/home/chetas/projects/se_project/eduapp/src/index.js":"1","/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js":"2","/home/chetas/projects/se_project/eduapp/src/redux/store.js":"3","/home/chetas/projects/se_project/eduapp/src/App.js":"4","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminReducer.js":"5","/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js":"6","/home/chetas/projects/se_project/eduapp/src/components/Tp.js":"7","/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js":"8","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js":"9","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js":"10","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminTypes.js":"11","/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js":"12","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js":"13","/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js":"14","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js":"15","/home/chetas/projects/se_project/eduapp/src/components/Admin/ForgotPassword.js":"16","/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js":"17","/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js":"18","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js":"19","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js":"20","/home/chetas/projects/se_project/eduapp/src/components/HomePage/LandingPage.js":"21","/home/chetas/projects/se_project/eduapp/src/components/Sessions/MeetingLinkShare.js":"22","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js":"23","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js":"24","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js":"25","/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js":"26","/home/chetas/projects/se_project/eduapp/src/components/Admin/AdminHome.js":"27","/home/chetas/projects/se_project/eduapp/src/components/HomePage/PendingReqMentor.js":"28","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminActions.js":"29","/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js":"30","/home/chetas/projects/se_project/eduapp/src/components/Prompt.js":"31"},{"size":670,"mtime":1618717814602,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1612017628334,"results":"34","hashOfConfig":"33"},{"size":534,"mtime":1617633796746,"results":"35","hashOfConfig":"33"},{"size":1464,"mtime":1614872838262,"results":"36","hashOfConfig":"33"},{"size":912,"mtime":1617900890240,"results":"37","hashOfConfig":"33"},{"size":3451,"mtime":1617786162790,"results":"38","hashOfConfig":"33"},{"size":1461,"mtime":1614870245242,"results":"39","hashOfConfig":"33"},{"size":7960,"mtime":1617631377467,"results":"40","hashOfConfig":"33"},{"size":5566,"mtime":1618789741398,"results":"41","hashOfConfig":"33"},{"size":1393,"mtime":1619139257575,"results":"42","hashOfConfig":"33"},{"size":128,"mtime":1617900890240,"results":"43","hashOfConfig":"33"},{"size":592,"mtime":1617631371367,"results":"44","hashOfConfig":"33"},{"size":335,"mtime":1618751819322,"results":"45","hashOfConfig":"33"},{"size":3381,"mtime":1619368873564,"results":"46","hashOfConfig":"33"},{"size":1244,"mtime":1619532184387,"results":"47","hashOfConfig":"33"},{"size":7648,"mtime":1618802416586,"results":"48","hashOfConfig":"33"},{"size":9012,"mtime":1619401403658,"results":"49","hashOfConfig":"33"},{"size":19791,"mtime":1618753129734,"results":"50","hashOfConfig":"33"},{"size":13772,"mtime":1619538769318,"results":"51","hashOfConfig":"33"},{"size":18001,"mtime":1619399618729,"results":"52","hashOfConfig":"33"},{"size":1408,"mtime":1618666354163,"results":"53","hashOfConfig":"33"},{"size":4101,"mtime":1619408708926,"results":"54","hashOfConfig":"33"},{"size":3529,"mtime":1618812837124,"results":"55","hashOfConfig":"33"},{"size":4112,"mtime":1619143382964,"results":"56","hashOfConfig":"33"},{"size":8663,"mtime":1619531856968,"results":"57","hashOfConfig":"33"},{"size":5233,"mtime":1619404533568,"results":"58","hashOfConfig":"33"},{"size":7362,"mtime":1619367223521,"results":"59","hashOfConfig":"33"},{"size":6451,"mtime":1618789741394,"results":"60","hashOfConfig":"33"},{"size":988,"mtime":1617900890236,"results":"61","hashOfConfig":"33"},{"size":9639,"mtime":1619531911993,"results":"62","hashOfConfig":"33"},{"size":1263,"mtime":1619408568849,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"vzf3x9",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"66"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/home/chetas/projects/se_project/eduapp/src/index.js",[],["142","143"],"/home/chetas/projects/se_project/eduapp/src/reportWebVitals.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/store.js",[],"/home/chetas/projects/se_project/eduapp/src/App.js",["144","145","146","147","148","149","150","151","152","153","154"],"import React from 'react'\n//import {Provider} from 'react-redux'\nimport './App.css';\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport {connect} from 'react-redux'\nimport { checkUser, getInterest, set_all_lang_and_subs } from './redux/Users/userActions';\nimport Tp from './components/Tp';\n//import store from './redux/store';\n\nfunction App(props) {\n\n  axios.defaults.withCredentials = true;\n\n  const [LoggedIn, setLogin] = useState(false);\n  const [Username, setUser] = useState(\"\");\n  const [Password, setPassword] = useState(\"\");\n  const [all_langs, set_langs] = useState([]);\n  const [all_subs, set_subs] = useState([]);\n\n\n  useEffect(() => {\n    props.checkUser()\n    setLogin(props.loggedIn)\n    setUser(props.username)\n    setPassword(props.password)\n    \n  }, [props.loggedIn])\n\n  return (\n      <div className=\"App\">\n        <Navigation/>\n        {/* <Tp/> */}\n      </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedIn: state.users.loggedIn,\n    username: state.users.username,\n    password: state.users.password,\n    user_id: state.users.user_id,\n    is_teacher: state.users.is_teacher,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    checkUser: () => dispatch(checkUser()),\n    // set_all_langs_and_subs: (value) => dispatch(set_all_lang_and_subs(value))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminReducer.js",["155"],"import sessionReducer from \"../Session/sessionReducer\"\nimport { SET_TEACHERS, SET_STUDENTS, SET_VERIFIED } from \"./adminTypes\"\n\nconst admin_initialState = {\n    teachers: [],\n    students:[]\n}\n\nconst adminReducer = (state = admin_initialState, action) => {\n    switch(action.type) {\n        case SET_TEACHERS: return {\n            ...state,\n            teachers: action.payload\n        }\n        case SET_STUDENTS: return {\n            ...state,\n            students: action.payload\n        } \n        case SET_VERIFIED:  {\n            const index = state.teachers.findIndex(teacher => teacher.user_id === action.payload.user_id)\n            const newArray = [...state.teachers]\n            newArray[index].verfied = action.payload.verify\n            return {\n                ...state,\n                teachers: newArray\n            }\n        }\n        default: return state\n    }\n}\n\nexport default adminReducer;","/home/chetas/projects/se_project/eduapp/src/redux/Users/userReducer.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Tp.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userActions.js",["156","157"],"import { ADD_LANGUAGE, ADD_SUBJECT, DELETE_LANGUAGE, DELETE_SUBJECT, ERROR, GET_LANGUAGE, GET_STUDENT, GET_SUBJECT, GET_TEACHER, SET_ALL_LANG, SET_ALL_SUB ,LOGIN, LOGOUT, SET_LOGIN, GET_ADMIN } from \"./userTypes\"\nimport axios from 'axios'\n\nexport const checkUser = (dispatch) => {\n    return (dispatch) => {\n        axios.get(\"http://localhost:5000/users/login\")\n        .then((response) => {\n            if(response.data.loggedIn === true) {\n                dispatch(login(response.data.user[0]))\n                //console.log(response.data.user[0].user_type)\n                \n                if(response.data.user[0].user_type == 0) {\n                    axios.get(\"http://localhost:5000/users/student\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getstudent(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/student_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                        //console.log(resp.data)\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                else if(response.data.user[0].user_type == 2) {\n                    dispatch(getadmin());\n                }\n                else {\n                    axios.get(\"http://localhost:5000/users/teacher\", {\n                        params: {\n                            id: response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getteacher(resp.data[0]))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/teacher_subjects\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getsubject(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                    axios.get(\"http://localhost:5000/users/languages\", {\n                        params: {\n                            id:response.data.user[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        dispatch(getlanguage(resp.data))\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n            }\n            else {\n                dispatch(logout)\n            }\n        })\n        .catch(error => {\n            dispatch(err(error))\n        })\n        axios.get(\"http://localhost:5000/users/all_subjects\")\n        .then((response) => {\n            // set_subs(response.data)\n            dispatch(set_all_subs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n        axios.get(\"http://localhost:5000/users/all_languages\")\n        .then((response) => {\n            dispatch(set_all_langs(response.data))\n        })\n        .catch((err) => {\n            console.log(err.message)\n        })\n    }\n}\n\nexport const getSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub.id\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/add_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/add_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(addSubject({subject_id: sub.id, subject_name: sub.sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const getLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang.id\n        }\n        axios.post(\"http://localhost:5000/users/add_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(addLanguage({language_id: lang.id, language_name: lang.lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\n\nexport const removeSubject = (user_id, user_type, sub, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            subject_id: sub\n        }\n        \n        if(user_type) {\n            axios.post(\"http://localhost:5000/users/del_teacher_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err.message)\n            })\n        }\n        else {\n            axios.post(\"http://localhost:5000/users/del_student_subject\", body)\n            .then(res => {\n                console.log(res)\n                dispatch(deleteSubject({subject_id: sub}))\n            })\n            .catch((err)=> {\n                console.log(err)\n            })\n        }\n    }\n}\n\nexport const removeLanguage = (user_id, lang, dispatch) => {\n    return (dispatch) => {\n        var body = {\n            user_id: user_id,\n            language_id: lang\n        }\n        axios.post(\"http://localhost:5000/users/del_language\", body)\n        .then(res => {\n            console.log(res)\n            dispatch(deleteLanguage({language_id: lang}))\n        })\n        .catch((err)=> {\n            console.log(err)\n        })\n    }\n}\n\nexport const set_all_langs = (value) => {\n    return {\n        type: SET_ALL_LANG,\n        payload:value\n    }\n}\n\nexport const set_all_subs = (value) => {\n    return {\n        type: SET_ALL_SUB,\n        payload:value\n    }\n}\n\n\nexport const login = (value) => {\n    return {\n        type: LOGIN,\n        payload: value\n    }\n}\n\nexport const getstudent = (value) => {\n    return {\n        type: GET_STUDENT,\n        payload: value\n    }\n}\n\nexport const getteacher = (value) => {\n    return {\n        type: GET_TEACHER,\n        payload: value\n    }\n}\n\nexport const getadmin = () => {\n    return {\n        type: GET_ADMIN\n    }\n}\n\nexport const getsubject = (value) => {\n    return {\n        type: GET_SUBJECT,\n        payload: value\n    }\n}\n\nexport const getlanguage = (value) => {\n    return {\n        type: GET_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: LOGOUT,\n    }\n}\n\nexport const err = (error) => {\n    return {\n        type: ERROR,\n        payload: error.message\n    }\n}\n\nexport const setLogin = () => {\n    return {\n        type: SET_LOGIN\n    }\n}\n\nexport const addSubject = (value) => {\n    return {\n        type: ADD_SUBJECT,\n        payload: value\n    }\n}\n\nexport const addLanguage = (value) => {\n    return {\n        type: ADD_LANGUAGE,\n        payload: value\n    }\n}\n\nexport const deleteSubject = (value) => {\n    return {\n        type: DELETE_SUBJECT,\n        payload: value\n    }\n}\n\nexport const deleteLanguage = (value) => {\n    return {\n        type: DELETE_LANGUAGE,\n        payload: value\n    }\n}","/home/chetas/projects/se_project/eduapp/src/components/Navigation/Navigation.js",["158","159"],"import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Link, Redirect} from 'react-router-dom'\nimport {\n    Collapse,\n    Navbar,\n    NavbarBrand,\n    NavbarToggler,\n    Nav,\n    NavItem,\n    NavLink,\n    Container\n} from 'reactstrap';\nimport './Styles.css'\nimport {connect} from 'react-redux';\nimport Home from '../HomePage/Home';\nimport Login from '../Users/Login';\nimport Register from '../Users/Register';\nimport Logout from '../Users/Logout';\nimport Profile from '../Users/Profile';\nimport Request_view from '../Sessions/Request_view';\nimport ForgotPassword from '../Admin/ForgotPassword';\n// import Request_session from '../Sessions/Request_session';\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render(){\n        return(\n            <Router>\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\" fixed=\"top\">\n                    <Container>\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\n                          <img id=\"nav-logo\" src='../../logo4.png' height=\"40\" alt='OpenSchool' />\n                          OpenSchool\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Link className=\"nav-link\" to=\"/\">Home</Link>\n                                </NavItem>\n                                {!this.props.LoggedIn &&\n                                <React.Fragment>\n                                    <NavItem>\n                                        <Link className=\"nav-link\" to=\"/Login\">Login</Link>\n                                    </NavItem>\n                                    <NavItem>\n                                        <Link className=\"nav-link\" to=\"/Register\">Register</Link>\n                                    </NavItem>\n                                </React.Fragment>\n                                }\n                                {\n                                    this.props.LoggedIn &&\n                                    <React.Fragment>\n                                        {   !this.props.is_admin &&\n                                            <NavItem>\n                                                <Link className=\"nav-link\" to=\"/Profile\"><i className=\"bi bi-person-circle\"></i> { this.props.username }</Link>\n                                            </NavItem>\n                                        }\n                                        {/* {\n                                            !this.props.is_teacher &&\n                                            <NavItem>\n                                                <Link className=\"nav-link\" to=\"/Request_Session\">Req_Sess</Link>\n                                            </NavItem>\n                                        } */}\n                                        {/*\n                                            this.props.is_teacher &&\n                                            <NavItem>\n                                                <Link className=\"nav-link\" to=\"/View_Requests\">Requests</Link>\n                                            </NavItem>\n                                        */}\n                                        <NavItem>\n                                            <Link className=\"nav-link\" to=\"/Logout\">Logout</Link>\n                                        </NavItem>\n                                    </React.Fragment>\n                                }\n                            </Nav>\n                        </Collapse>\n                    </Container>\n                </Navbar>\n                <Switch>\n                    <Route path=\"/Login\" render={(props) => (!this.props.LoggedIn ? (<Login/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Register\" render={(props) => (!this.props.LoggedIn ? (<Register/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Logout\" render={(props) => (this.props.LoggedIn ? (<Logout/>) : (<Redirect to=\"/Login\"></Redirect>))}/>\n                    <Route path=\"/ForgotPassword\" render={(props) => (!this.props.LoggedIn ? (<ForgotPassword/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/Profile\" render={(props) => (this.props.LoggedIn && !this.props.is_admin ? (<Profile/>) : (<Redirect to=\"/\"></Redirect>))}/>\n                    <Route path=\"/View_Requests\" render={(props) => (this.props.LoggedIn ? (this.props.is_teacher ? (<Request_view/>): (<Redirect to=\"/\"></Redirect>)): (<Redirect to=\"/Login\"></Redirect>))}/>\n                    {/* <Route path=\"/Request_Session\" render={(props) => (this.props.LoggedIn ? (!this.props.is_teacher ? (<Request_session/>): (<Redirect to=\"/View_Requests\"></Redirect>)): (<Redirect to=\"/Login\"></Redirect>))}/> */}\n                    <Route path=\"/\" exact component={Home}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        LoggedIn: state.users.loggedIn,\n        is_teacher: state.users.is_teacher,\n        is_admin: state.users.is_admin,\n        username: state.users.username\n    }\n}\n\nexport default connect(mapStateToProps)(Navigation)\n","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionReducer.js",["160"],"import { LOGOUT } from \"../Users/userTypes\"\nimport { ADD_PENDING_SESSION, DEL_PENDING_SESSION, SET_MEETING_URL, SET_PAST_SESSIONS, SET_PENDING_REQUESTS, SET_UPCOMING_SESSIONS } from \"./sessionTypes\"\n\nconst sessions_initial_State = {\n    upcoming_sessions: [],\n    pending_requests: [],\n    past_sessions: [],\n}\n\nconst sessionReducer = (state = sessions_initial_State, action) => {\n    switch(action.type) {\n        case SET_UPCOMING_SESSIONS: return {\n            ...state,\n            upcoming_sessions: action.payload\n        }\n        case SET_PENDING_REQUESTS: {\n            return {\n                ...state,\n                pending_requests: action.payload\n            }\n        }\n        case SET_PAST_SESSIONS: return {\n            ...state,\n            past_sessions: action.payload\n        }\n        case ADD_PENDING_SESSION: return {\n            ...state,\n            pending_requests: [...state.pending_requests, action.payload]\n        }\n        case DEL_PENDING_SESSION: return {\n            ...state,\n            pending_requests: state.pending_requests.filter(req => req.mentor_id !== action.payload.mentor_id || req.request_id !== action.payload.request_id)\n        }\n        case LOGOUT: return {\n            upcoming_sessions: [],\n            pending_requests: [],\n            past_sessions: [],\n        }\n        default: return state\n    }\n}\n\nexport default sessionReducer","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Users/userTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionTypes.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Users/Login.js",["161","162","163"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport { Button, Form, FormGroup, Label, Input, Col, Container } from 'reactstrap';\nimport './Styles.css'\nimport { Link } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport { login } from '../../redux/Users/userActions';\nimport cover from \"../../login_cover.jpg\";\n\naxios.defaults.withCredentials = true;\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            password: '',\n        }\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        var body = {\n            \"username\": this.state.username,\n            \"password\": this.state.password\n        }\n        axios.post(\"http://localhost:5000/users/login\", body)\n        .then(response => {\n            if(typeof response.data.message !== 'undefined') {\n                alert(response.data.message)\n            }\n            else {\n                this.props.login(response.data[0])\n                console.log(response.data[0])\n            }\n        })\n        .catch(error => {\n            console.log(error)\n            alert(\"Cannot reach the server at the moment\")\n        })\n\n    }\n\n    forgotPass = ()  => {\n        var otp = Math.floor(Math.random() * 1000000)\n        var prom = prompt(\"A mail has been sent with an OTP. Enter the OTP here to continue\");\n        if(prom == otp) {\n            console.log(\"OTP matches\")\n        }\n    }\n\n    render() {\n        return(\n\n          <div className=\"toplookout\">\n            <main role=\"main\" class=\"container\">\n              <div className=\"row\" id=\"login-content\">\n\n                <div className=\"col-12 col-md-8\">\n                  <img src={cover} id=\"cover\" alt=\"graphic\" width=\"100%\"/>\n                </div>\n\n                <div className=\"content-section col-12 col-md-4\">\n                  <br/><h3 className=\"text-center\">Login</h3>\n                  <Form id=\"login-form\" onSubmit={this.handleSubmit}>\n                      <FormGroup row>\n                          <Label for=\"username\" sm={2}>Username</Label>\n                          <Input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Enter Username\" value={this.state.username} onChange={(e) => this.setState({username: e.target.value})}></Input>\n                      </FormGroup>\n                      <FormGroup row>\n                          <Label for=\"password\" sm={2}>Password</Label>\n                          <Input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Enter Passsword\" value={this.state.password} onChange={(e) => this.setState({password: e.target.value})}></Input>\n                      </FormGroup>\n                      <Button className=\"btn btn-info\" id=\"login-btn\">Login</Button>\n                      <FormGroup>\n                          <Link className=\"link\" to=\"/ForgotPassword\">Forgot Password?</Link>\n                      </FormGroup>\n                      <FormGroup>\n                          Don't have an account? <Link to=\"/Register\">Sign up</Link>\n                      </FormGroup>\n\n                  </Form>\n                </div>\n              </div>\n            </main>\n        </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (data) => dispatch(login(data))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Login);\n","/home/chetas/projects/se_project/eduapp/src/components/Users/Logout.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Admin/ForgotPassword.js",["164","165","166"],"import axios from 'axios'\nimport React, {Component} from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { Button, Col, Collapse, Container, FormGroup, Input, Label, Row } from 'reactstrap'\n\nclass ForgotPassword extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            sendotp: false,\n            username: '',\n            otp: '',\n            email: '',\n            generatedOTP: '',\n            enable_password: false,\n            new_password: '',\n            user_type: '',\n            pass_changed: false\n        }\n    }\n\n    sendOTP = () => {\n        this.setState({\n            generatedOTP: Math.floor(Math.random() * 1000000)\n        })\n        axios.get(\"http://localhost:5000/users/user\", {\n            params: {\n                username: this.state.username\n            }\n        })\n        .then(response => {\n            if(typeof response.data.message !== 'undefined') {\n                alert(response.data.message)\n            }\n\n            else {\n                if(response.data[0].user_type == 0) {\n                    axios.get(\"http://localhost:5000/users/student\", {\n                        params: {\n                            id: response.data[0].user_id\n                        }\n                    })\n                    .then((resp) => {\n                        this.setState({\n                            email: resp.data[0].email_id,\n                            user_type: 0\n                        })\n                        var body = {\n                            type: \"otp\",\n                            receiver: resp.data[0].email_id,\n                            first_name: resp.data[0].first_name,\n                            last_name: resp.data[0].last_name,\n                            otp: this.state.generatedOTP\n                        }\n                        console.log(body)\n                        axios.post(\"http://localhost:5000/users/sendmail\", body)\n                        .then(re => {\n                            console.log(\"Email sent successfully\")\n                        })\n                        .catch(err => {\n                            console.log(\"Error in sending mail\")\n                        })\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                else {\n                    axios.get(\"http://localhost:5000/users/teacher\", {\n                        params: {\n                            id: response.data[0].user_id,\n                            user_type: 1\n                        }\n                    })\n                    .then((resp) => {\n                        this.setState({\n                            email: resp.data[0].email_id\n                        })\n                        var body = {\n                            type: \"otp\",\n                            receiver: resp.data[0].email_id,\n                            first_name: resp.data[0].first_name,\n                            last_name: resp.data[0].last_name,\n                            otp: this.state.generatedOTP\n                        }\n                        axios.post(\"http://localhost:5000/users/sendmail\", body)\n                        .then(re => {\n                            console.log(\"Email sent successfully\")\n                        })\n                        .catch(err => {\n                            console.log(\"Error in sending mail\")\n                        })\n                    })\n                    .catch((err)=> {\n                        console.log(err)\n                    })\n                }\n                this.setState({\n                    sendotp: true,\n                })\n            }\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n    }\n\n    checkOTP = () => {\n        if(this.state.generatedOTP == this.state.otp) {\n            this.setState({\n                enable_password: true\n            })\n        }\n        else {\n            alert(\"No match\")\n        }\n    }\n\n    changePassword = () => {\n        var body = {\n            username: this.state.username,\n            password: this.state.new_password,\n            user_type: this.state.user_type\n        }\n        axios.post(\"http://localhost:5000/users/resetPassword\", body)\n        .then(response => {\n            alert(\"Password has been changed\")\n            this.setState({\n                sendotp: false,\n                username: '',\n                otp: '',\n                email: '',\n                generatedOTP: '',\n                enable_password: false,\n                new_password: '',\n                user_type: '',\n                pass_changed: true\n            })\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n    }\n\n    render() {\n        return(\n\n            <Container className=\"toplookout\">\n                <h2>Forgot Password?</h2>\n                {   !this.state.sendotp &&\n                    <React.Fragment>\n                        <FormGroup row>\n                            <Label for=\"username\" sm={2}>Username:</Label>\n                            <Col sm={10}>\n                                <Input placeholder=\"Enter your username\" id=\"username\" value={this.state.username} onChange={(e) => this.setState({username: e.target.value})}></Input>      \n                            </Col>\n                        </FormGroup>    \n                        <Button onClick={this.sendOTP} style={{marginBottom: \"20px\"}}>Send OTP</Button>\n                    </React.Fragment>\n                }\n                    \n                <Collapse isOpen={this.state.sendotp}>\n                    {   !this.state.enable_password &&\n                        <React.Fragment>\n                            <p>An OTP has been mailed to <b>{this.state.email}</b></p><p> Please check your email</p>\n                            <FormGroup row>\n                                <Label for=\"otp\" sm={2}>OTP:</Label>\n                                <Col sm={10}>\n                                    <Input placeholder=\"Enter OTP here\" id=\"otp\" value={this.state.otp} onChange={(e) => this.setState({otp: e.target.value})}></Input>      \n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.checkOTP}>Submit</Button>\n                        </React.Fragment>\n                    }\n                    {\n                        this.state.enable_password &&\n                        <React.Fragment>\n                            <p>Enter your new Password</p>\n                            <FormGroup row>\n                                <Label for=\"password\" sm={2}>New Password:</Label>\n                                <Col sm={10}>\n                                    <Input type=\"password\" placeholder=\"Enter new Password\" id=\"password\" value={this.state.new_password} onChange={(e) => this.setState({new_password: e.target.value})}></Input>      \n                                </Col>\n                            </FormGroup>\n                            <Button color=\"success\" onClick={this.changePassword}>Change Password</Button>\n                        </React.Fragment>\n                    }\n                </Collapse>\n                {\n                    this.state.pass_changed &&\n                    <Switch>  \n                        <Route path=\"/ForgotPassword\" render={(props) => (<Redirect to=\"/Login\"></Redirect>)}/>\n                    </Switch>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default ForgotPassword","/home/chetas/projects/se_project/eduapp/src/components/Sessions/Request_view.js",["167","168","169","170"],"import axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport React, {Component} from 'react';\nimport Prompt from \"../Prompt\";\n\nclass Request_view extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            requests: [],\n            verfied: props.verfied,\n            count: 0\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.verfied === 1) {\n            axios.get(\"http://localhost:5000/session/request\", {\n                params: {\n                    user_id: this.props.user_id,\n                }\n            })\n            .then(response => {\n                var now = new Date()\n                var reqs = response.data.filter(pen => new Date(pen.req_date) >= now)\n                this.setState({\n                    requests: reqs,\n                    count: reqs.filter((obj) => obj.count === 0).length\n                })\n                console.log(response)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n    }\n\n    approveRequest = (req) => {\n        \n        if(req.mentor_specific === -1) {\n            var body = {\n                request_id: req.request_id,\n                mentor_id: this.props.user_id,\n            }\n            axios.post(\"http://localhost:5000/session/approve_req\", body)\n            .then(response => {\n                if(response.data === \"done\")\n                    alert(\"The student has already confirmed some other mentor.\")\n                else\n                    alert(\"Request approved. Check pending tab on home page for confirmation from student.\")\n                this.setState(state => {\n                    const requests = state.requests.filter(req1 => req1.request_id !== req.request_id);\n                    return {\n                        requests,\n                        count: state.count - 1\n                    };\n                })\n            })\n            .catch(err => {\n                console.log(err)\n                alert(\"Unable to connect to server\")\n            })\n        }\n        else {\n            var body = {\n                request_id: req.request_id,\n                teacher_id: this.props.user_id,\n                student_id: req.user_id,\n                completed: 0,\n                review: 0\n            }\n            axios.post(\"http://localhost:5000/session/approve_post_spec\", body)\n            .then(response => {\n                alert(`You have successfully approved the session`)\n                axios.post(\"http://localhost:5000/session/session\", body)\n                .then(response => {\n                    console.log(response)\n                    var bod1 = req\n                    bod1.type = \"teacher_session_confirm\"\n                    bod1.receiver = this.props.email_id\n                    axios.post(\"http://localhost:5000/users/sendmail\", bod1)\n                    .then(re => {\n                        console.log(\"Email sent successfully\")\n                    })\n                    .catch(err => {\n                        console.log(\"Error in sending mail\")\n                    })\n\n                    var bod2 = req\n                    bod2.type = \"student_session_confirm\"\n                    bod2.first_name = this.props.first_name\n                    bod2.last_name = this.props.last_name\n                    bod2.sessions_taken = this.props.sessions_taken\n                    bod2.rating = this.props.rating\n                    bod2.qualification = this.props.qualification\n                    bod2.receiver = req.email_id\n                    axios.post(\"http://localhost:5000/users/sendmail\", bod2)\n                    .then(re => {\n                        console.log(\"Email sent successfully\")\n                    })\n                    .catch(err => {\n                        console.log(\"Error in sending mail\")\n                    })\n                })\n                .catch(err => {\n                    console.log(err.message)\n                })\n                this.setState(state => {\n                    const requests = state.requests.filter(req1 => req1.request_id !== req.request_id);\n                    return {\n                        requests,\n                        count: state.count - 1\n                    };\n                })\n            })\n            .catch(err => {\n                console.log(err.message)\n                alert(\"Unable to contact the server\")\n            })\n\n        }\n    }\n\n    render() {\n\n\n        const reqs = this.state.requests.map((req) => (\n            <React.Fragment key={req.request_id}>\n                {\n                    req.count === 0 &&\n                    <Container\n                      style={{\n                        background: \"#f8f0fd\",\n                        overflow: \"auto\",\n                      }}\n                    >\n                    {   req.mentor_specific !== -1 &&\n                        <h5 color=\"warning\"><i>Specifically sent to you</i></h5>\n                    }\n                    <Row>\n                      <Container className=\"center\">\n                        <div className=\"spaceout-tabs-contents\">\n                          <h4><b>{this.props.all_subjects[req.subject_id - 1].subject_name}</b> - {req.topic}</h4><br/>\n                          <Row>\n                            <Col sm={4}>\n                              <h5>📅 {String(req.req_date).slice(0, 10)}</h5>\n                            </Col>\n                            <Col sm={4}>\n                              <h5>⏲️ {req.time_slot}</h5>\n                            </Col>\n                            <Col sm={4}>\n                              <h5>🔡 {this.props.all_languages[req.language_id - 1].language_name}</h5>\n                              {/* Language: {req.subject_id} */}\n                            </Col>\n                          </Row><br/>\n                          <span>\n                            <h5>From student:&nbsp;\n                              <span> {req.first_name} {req.last_name} </span> | <span> Grade - {req.grade} </span> | <span> School Board - {req.board} </span>\n                            </h5>\n                          </span>\n                          <Prompt color=\"success\" buttext=\"Accept\" captext=\"Are you sure you want to accept?\" func={this.approveRequest} param={req}></Prompt>\n                        </div>\n                      </Container>\n                    </Row>\n\n                </Container>\n                }\n\n            </React.Fragment>\n        ))\n\n        return(\n            <div className=\"toplookout\">\n                {   this.state.verfied == 1 ?\n                    <React.Fragment>\n                        <Container style={{border: \"1px solid #cecece\"}}>\n                            {\n                                this.state.count === 0 ? \n                                <Container>\n                                    <main role=\"main\" className=\"text-center\">\n                                        <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                                        <h4>No requests.</h4>\n                                        <h5>Refresh the page to get new sessions</h5>\n                                    </main>\n                                </Container> : \n                                <Container>{reqs}</Container>\n                            }\n                        </Container>\n                    </React.Fragment> :\n                    (\n                        this.state.verfied == 0 ?\n                        <React.Fragment>\n                          <main role=\"main\" className=\"text-center\">\n                            <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                            <h2>Your account is pending for verification.</h2>\n                            <p>You will be able to log in once the administrator verifies your profile.<br/>\n                            If you think it has already been verified, try refreshing the page.</p>\n                          </main>\n                        </React.Fragment>:\n                        <React.Fragment>\n                            <h3>Sorry {this.props.first_name} {this.props.last_name}, your account has been <span style={{color: \"red\"}}>suspended</span></h3>\n                        </React.Fragment>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user_id: state.users.user_id,\n        all_subjects: state.users.all_subjects,\n        all_languages: state.users.all_languages,\n        email_id: state.users.email_id,\n        first_name: state.users.first_name,\n        last_name: state.users.last_name,\n        sessions_taken: state.users.session_taken,\n        qualification: state.users.qualification,\n        rating: state.users.rating_points,\n        verfied: state.users.verfied\n    }\n}\n\nexport default connect(mapStateToProps)(Request_view)\n","/home/chetas/projects/se_project/eduapp/src/components/Users/Profile.js",["171","172","173","174"],"import React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  Container,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport {\n  checkUser,\n  getLanguage,\n  getlanguage,\n  getSubject,\n  removeLanguage,\n  removeSubject,\n} from \"../../redux/Users/userActions\";\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      edit_profile: false,\n      first_name: props.first_name,\n      last_name: props.last_name,\n      email_id: props.email_id,\n      grade: props.grade,\n      board: props.board,\n      qualification: props.qualification,\n      add_language: false,\n      add_subject: false,\n      languages: [],\n      subjects: [],\n      selected_subject: \"\",\n      selected_subject_id: \"\",\n      selected_language: \"\",\n      selected_language_id: \"\",\n      profile_photo: null,\n    };\n  }\n\n  toggle_profile = () => {\n    this.setState({\n      edit_profile: !this.state.edit_profile,\n    });\n  };\n\n  toggle_language = () => {\n    this.setState({\n      add_language: !this.state.add_language,\n    });\n  };\n\n  toggle_subject = () => {\n    this.setState({\n      add_subject: !this.state.add_subject,\n    });\n  };\n\n  complete_edit = () => {\n    this.toggle_profile();\n    const data = new FormData();\n    data.append(\"file\", this.state.profile_photo);\n    data.append(\"user_id\", this.props.user_id);\n    data.append(\"first_name\", this.state.first_name);\n    data.append(\"last_name\", this.state.last_name);\n    data.append(\"email_id\", this.state.email_id);\n    data.append(\"grade\", this.state.grade);\n    data.append(\"board\", this.state.board);\n    data.append(\"qualification\", this.state.qualification);\n    data.append(\"oldurl\", this.props.image_link);\n    if (this.props.is_teacher) {\n      axios\n        .post(\"http://localhost:5000/users/editteacher\", data)\n        .then((response) => {\n          this.props.checkUser();\n          alert(\"Profile updated\");\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    } else {\n      axios\n        .post(\"http://localhost:5000/users/editstudent\", data)\n        .then((response) => {\n          this.props.checkUser();\n          alert(\"Profile updated\");\n        })\n        .catch((error) => {\n          console.log(error.message);\n        });\n    }\n  };\n\n  componentDidMount() {\n    this.setState({\n      languages: this.props.all_languages,\n      subjects: this.props.all_subjects,\n    });\n  }\n\n  handle = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleboard = (e) => {\n    this.setState({\n      type_selected: true,\n      board: e.target[e.target.selectedIndex].value,\n    });\n  };\n\n  handle_file = (e) => {\n    this.setState({\n      profile_photo: e.target.files[0],\n    });\n  };\n\n  addSubject = (e) => {\n    if (\n      this.props.subjects.some(\n        (sub) => sub.subject_name === this.state.selected_subject\n      )\n    ) {\n      alert(`${this.state.selected_subject} already exists in your favorites`);\n    } else if (this.state.selected_subject_id != \"\") {\n      this.props.getSubject(this.props.user_id, this.props.is_teacher, {\n        id: parseInt(this.state.selected_subject_id),\n        sub: this.state.selected_subject,\n      });\n      this.setState({\n        selected_subject_id: \"\",\n        selected_subject: \"\",\n      });\n      this.toggle_subject();\n    } else {\n      alert(\"Please select a subject\");\n    }\n  };\n\n  addLanguage = (e) => {\n    if (\n      this.props.languages.some(\n        (lang) => lang.language_name === this.state.selected_language\n      )\n    ) {\n      alert(`${this.state.selected_language} already exists in your favorites`);\n    } else if (this.state.selected_language_id) {\n      this.props.getLanguage(this.props.user_id, {\n        id: parseInt(this.state.selected_language_id),\n        lang: this.state.selected_language,\n      });\n      this.setState({\n        selected_language_id: \"\",\n        selected_language: \"\",\n      });\n      this.toggle_language();\n    } else {\n      alert(\"Please select a language\");\n    }\n  };\n\n  deleteSubject = (id, sub) => {\n    this.props.removeSubject(this.props.user_id, this.props.is_teacher, id);\n  };\n\n  deleteLanguage = (id, lang) => {\n    this.props.removeLanguage(this.props.user_id, id);\n  };\n\n  render() {\n    const {\n      username,\n      first_name,\n      last_name,\n      email_id,\n      session_taken,\n      image_link,\n      grade,\n      board,\n      qualification,\n      rating_points,\n      is_teacher,\n    } = this.props;\n\n    var subjects = this.props.subjects ? (\n      this.props.subjects.map((subject, index) => (\n        <React.Fragment key={subject.subject_id}>\n          <Row>\n            <Col sm={1}></Col>\n            <Col sm={8}>\n              <div id=\"pref-list-item\">{subject.subject_name}</div>\n            </Col>\n            <Col sm={2}>\n              <i\n                className=\"bi bi-x-square-fill\"\n                onClick={() =>\n                  this.deleteSubject(subject.subject_id, subject.subject_name)\n                }\n              ></i>\n            </Col>\n            <Col sm={1}></Col>\n          </Row>\n        </React.Fragment>\n      ))\n    ) : (\n      <React.Fragment></React.Fragment>\n    );\n\n    var languages =\n      this.props.languages !== undefined ? (\n        this.props.languages.map((language, index) => (\n          // <div key={language.language_id}>{index + 1} {language.language_name}</div>\n          <React.Fragment key={language.language_id}>\n            <Row>\n              <Col sm={1}></Col>\n              <Col sm={8}>\n                <div id=\"pref-list-item\">{language.language_name}</div>\n              </Col>\n              <Col sm={2}>\n                <i\n                  className=\"bi bi-x-square-fill\"\n                  onClick={() =>\n                    this.deleteLanguage(\n                      language.language_id,\n                      language.language_name\n                    )\n                  }\n                ></i>\n              </Col>\n              <Col sm={1}></Col>\n            </Row>\n          </React.Fragment>\n        ))\n      ) : (\n        <React.Fragment></React.Fragment>\n      );\n\n    var all_subjects = this.state.subjects.map((subject) => (\n      <option\n        key={subject.subject_id}\n        value={subject.subject_name}\n        id={subject.subject_id}\n      >\n        {subject.subject_name}\n      </option>\n    ));\n\n    var all_languages = this.state.languages.map((language) => (\n      <option\n        key={language.language_id}\n        value={language.language_name}\n        id={language.language_id}\n      >\n        {language.language_name}\n      </option>\n    ));\n\n    return (\n      <Container className=\"toplookout\">\n        <div className=\"profile-wrapper\">\n          <Row className=\"justify-content-center\">\n            <Col sm={9}>\n              <div className=\"profile-section\">\n                <Row>\n                  <Col>\n                    {/* <p>Image Link: {image_link}</p> */}\n                    <img\n                      src={this.props.image_link}\n                      className=\"profilepic\"\n                    ></img>\n                  </Col>\n                  <Col>\n                    {!this.state.edit_profile && (\n                      <React.Fragment>\n                        <p>\n                          Username: <b>{username}</b>\n                        </p>\n                        <p>\n                          Name:{\" \"}\n                          <b>\n                            {first_name} {last_name}\n                          </b>\n                        </p>\n                        <p>\n                          Email: <b>{email_id}</b>\n                        </p>\n                        {is_teacher && (\n                          <React.Fragment>\n                            <p>\n                              Qualification: <b>{qualification}</b>\n                            </p>\n                            <p>\n                              Average Rating Points:{\" \"}\n                              <b>\n                                {(rating_points / session_taken).toFixed(2)}\n                              </b>\n                            </p>\n                          </React.Fragment>\n                        )}\n                        {!is_teacher && (\n                          <React.Fragment>\n                            <p>\n                              Grade: <b>{grade}</b>\n                            </p>\n                            <p>\n                              Board: <b>{board}</b>\n                            </p>\n                          </React.Fragment>\n                        )}\n                        <p>\n                          Sessions done: <b>{session_taken}</b>\n                        </p>\n                        <Button\n                          className=\"btn btn-info\"\n                          onClick={this.toggle_profile}\n                        >\n                          <i className=\"bi bi-pencil-fill\"></i> Edit Profile\n                        </Button>\n                      </React.Fragment>\n                    )}\n                    {this.state.edit_profile && (\n                      <React.Fragment>\n                        <Form>\n                          <FormGroup row>\n                            <Label for=\"first_name\">First Name:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"text\"\n                                name=\"first_name\"\n                                id=\"first_name\"\n                                placeholder=\"Enter your name\"\n                                value={this.state.first_name}\n                                onChange={this.handle}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          <FormGroup row>\n                            <Label for=\"last_name\">Last Name:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"text\"\n                                name=\"last_name\"\n                                id=\"last_name\"\n                                placeholder=\"Enter your last name\"\n                                value={this.state.last_name}\n                                onChange={this.handle}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          <FormGroup row>\n                            <Label for=\"email\">Email Id:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"text\"\n                                name=\"email_id\"\n                                id=\"email_id\"\n                                placeholder=\"Enter your email id\"\n                                value={this.state.email_id}\n                                onChange={this.handle}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          <FormGroup row>\n                            <Label for=\"file\">Profile Photo:</Label>\n                            <Col sm={12}>\n                              <Input\n                                type=\"file\"\n                                name=\"file\"\n                                id=\"file\"\n                                placeholder=\"Upload a profile photo\"\n                                onChange={this.handle_file}\n                              ></Input>\n                            </Col>\n                          </FormGroup>\n                          {this.props.is_teacher && (\n                            <FormGroup row>\n                              <Label for=\"qualification\">Qualification:</Label>\n                              <Col sm={12}>\n                                <Input\n                                  type=\"text\"\n                                  name=\"qualification\"\n                                  id=\"qualification\"\n                                  placeholder=\"Enter your Qualification\"\n                                  value={this.state.qualification}\n                                  onChange={this.handle}\n                                ></Input>\n                              </Col>\n                            </FormGroup>\n                          )}\n                          {!this.props.is_teacher && (\n                            <React.Fragment>\n                              <FormGroup row>\n                                <Label for=\"grade\">Grade:</Label>\n                                <Col sm={12}>\n                                  <Input\n                                    type=\"number\"\n                                    name=\"grade\"\n                                    id=\"grade\"\n                                    placeholder=\"Enter your Grade\"\n                                    value={this.state.grade}\n                                    onChange={this.handle}\n                                  ></Input>\n                                </Col>\n                              </FormGroup>\n                              <FormGroup row>\n                                <Label for=\"board\">Board:</Label>\n                                <Col sm={12}>\n                                  <Input\n                                    type=\"select\"\n                                    name=\"board\"\n                                    id=\"board\"\n                                    placeholder=\"Enter your board\"\n                                    value={this.state.board}\n                                    onChange={this.handleboard}\n                                  >\n                                    <option value=\"\" disabled selected>\n                                      Select type\n                                    </option>\n                                    <option value=\"SSC\">SSC</option>\n                                    <option value=\"CBSE\">CBSE</option>\n                                    <option value=\"ICSE\">ICSE</option>\n                                    <option value=\"other\">other..</option>\n                                  </Input>\n                                </Col>\n                              </FormGroup>\n                            </React.Fragment>\n                          )}\n                        </Form>\n                        <Button\n                          className=\"row-btns\"\n                          color=\"success\"\n                          onClick={this.complete_edit}\n                        >\n                          Save\n                        </Button>\n                        <Button\n                          className=\"row-btns\"\n                          onClick={this.toggle_profile}\n                        >\n                          Cancel\n                        </Button>\n                      </React.Fragment>\n                    )}\n                  </Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n          <br />\n          <br />\n          <Row className=\"justify-content-center\">\n            <Col sm={6}>\n              <div className=\"profile-section\">\n                <h5>What subjects are you interested in?</h5>\n                <br />\n                {subjects}\n                {this.state.add_subject && (\n                  <React.Fragment>\n                    <Row>\n                      <Col sm={10}>\n                        <Input\n                          type=\"select\"\n                          onChange={(e) =>\n                            this.setState({\n                              selected_subject_id:\n                                e.target[e.target.selectedIndex].id,\n                              selected_subject:\n                                e.target[e.target.selectedIndex].value,\n                            })\n                          }\n                        >\n                          <option value=\"\" disabled selected>\n                            Select subject\n                          </option>\n                          {all_subjects}\n                        </Input>\n                      </Col>\n                      <Col sm={2}>\n                        <i\n                          class=\"bi bi-check-square-fill\"\n                          onClick={this.addSubject}\n                        ></i>\n                      </Col>\n                    </Row>\n                  </React.Fragment>\n                )}\n                <br />\n                <button className=\"btn btn-info\" onClick={this.toggle_subject}>\n                  Add Subject\n                </button>\n              </div>\n            </Col>\n            {this.props.is_teacher && (\n              <Col sm={6}>\n                <div className=\"profile-section\">\n                  <h5>What languages are you comfortable with?</h5>\n                  <br />\n                  {languages}\n                  {this.state.add_language && (\n                    <React.Fragment>\n                      <Row>\n                        <Col sm={10}>\n                          <Input\n                            type=\"select\"\n                            onChange={(e) =>\n                              this.setState({\n                                selected_language_id:\n                                  e.target[e.target.selectedIndex].id,\n                                selected_language:\n                                  e.target[e.target.selectedIndex].value,\n                              })\n                            }\n                          >\n                            <option value=\"\" disabled selected>\n                              Select language\n                            </option>\n                            {all_languages}\n                          </Input>\n                        </Col>\n                        <Col sm={2}>\n                          <i\n                            class=\"bi bi-check-square-fill\"\n                            onClick={this.addLanguage}\n                          ></i>\n                        </Col>\n                      </Row>\n                    </React.Fragment>\n                  )}\n                  <br />\n                  <button\n                    className=\"btn btn-info\"\n                    onClick={this.toggle_language}\n                  >\n                    Add Language\n                  </button>\n                </div>\n              </Col>\n            )}\n          </Row>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user_id: state.users.user_id,\n    username: state.users.username,\n    first_name: state.users.first_name,\n    last_name: state.users.last_name,\n    email_id: state.users.email_id,\n    session_taken: state.users.session_taken,\n    image_link: state.users.image_link,\n    grade: state.users.grade,\n    board: state.users.board,\n    qualification: state.users.qualification,\n    rating_points: state.users.rating_points,\n    is_teacher: state.users.is_teacher,\n    languages: state.users.languages,\n    subjects: state.users.subjects,\n    all_subjects: state.users.all_subjects,\n    all_languages: state.users.all_languages,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    checkUser: () => dispatch(checkUser()),\n    getSubject: (id, type, sub) => dispatch(getSubject(id, type, sub)),\n    getLanguage: (id, lang) => dispatch(getLanguage(id, lang)),\n    removeSubject: (id, type, sub) => dispatch(removeSubject(id, type, sub)),\n    removeLanguage: (id, lang) => dispatch(removeLanguage(id, lang)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n","/home/chetas/projects/se_project/eduapp/src/components/Users/Register.js",["175","176","177","178"],"/home/chetas/projects/se_project/eduapp/src/components/HomePage/Home.js",["179","180","181","182","183","184","185","186","187"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  ButtonGroup,\n  Col,\n  Container,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n} from \"reactstrap\";\nimport { del_pend, fetch_home } from \"../../redux/Session/sessionAction\";\nimport LandingPage from \"./LandingPage\";\nimport AdminHome from \"../Admin/AdminHome\";\nimport MeetingLinkShare from \"../Sessions/MeetingLinkShare\";\nimport ReqSession from \"../Sessions/ReqSession\";\nimport SessionCompleted from \"../Sessions/SessionCompleted\";\nimport Recommendations from \"./Recommendations\";\nimport \"./Styles.css\";\nimport PendingReqMentor from \"./PendingReqMentor\";\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_upcom: true,\n      show_pend: false,\n      show_past: false,\n    };\n  }\n\n  showupcoming = () => {\n    this.setState({\n      show_upcom: true,\n      show_pend: false,\n      show_past: false,\n    });\n  };\n\n  showpending = () => {\n    this.setState({\n      show_upcom: false,\n      show_pend: true,\n      show_past: false,\n    });\n  };\n\n  showpast = () => {\n    this.setState({\n      show_upcom: false,\n      show_pend: false,\n      show_past: true,\n    });\n  };\n\n  refresh = () => {\n    this.props.fetchHome(this.props.user_id, this.props.is_teacher);\n  };\n\n  delete_pending = (request_id, mentor_id) => {\n    var body = {\n      request_id,\n      mentor_id\n    }\n    axios.post(\"http://localhost:5000/session/delete_pending\", body)\n    .then(res => {\n        this.props.del_pending(body)\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.user_id != this.props.user_id && !this.props.is_admin) {\n      if (this.props.LoggedIn) {\n        this.props.fetchHome(this.props.user_id, this.props.is_teacher);\n      }\n    }\n  }\n\n  render() {\n    const upcoming = this.props.upcoming_sessions.map((up) =>(\n      <React.Fragment key={up.session_id}>\n        <Container className=\"spaceout-tabs-contents\">\n          <Row>\n            <Col>\n              <h4><b>{this.props.all_subjects[up.subject_id - 1].subject_name}</b> - {up.topic}</h4>\n              <Row>\n                <Col sm={4}>\n                  <h5>📅 {String(up.req_date).slice(0, 10)}</h5>\n                </Col>\n                <Col sm={4}>\n                  <h5>⏲️ {up.time_slot}</h5>\n                </Col>\n                <Col sm={2}>\n                  <h5>🔡 {this.props.all_languages[up.language_id - 1].language_name}</h5>\n                  {/* Language: {req.subject_id} */}\n                </Col>\n              </Row><br/>\n              {!this.props.is_teacher ? (\n                <React.Fragment>\n                  <h5><b>Mentor:</b> {up.first_name} {up.last_name}, {up.qualification}</h5>\n                </React.Fragment>\n              ) :\n                <React.Fragment>\n                <h5><b>Student:</b> {up.first_name} {up.last_name}, {up.qualification}</h5>\n                <h5><b>Grade:</b> {up.grade}, {up.board}</h5>\n              </React.Fragment>\n              }\n              {!this.props.is_teacher && (\n                <Row>\n                  <Col className=\"padded\">\n                    <h5>\n                      🔗{\" \"}\n                      {up.meeting_url ? (\n                        <a href={up.meeting_url} target=\"_blank\">\n                          {up.meeting_url}\n                        </a>\n                      ) : (\n                        `The mentor hasn't sent meeting url yet. Try refreshing`\n                      )}\n                    </h5>\n                  </Col>\n                </Row>\n              )}\n              {this.props.is_teacher &&\n              (!up.meeting_url ? (\n                <MeetingLinkShare\n                  session_id={up.session_id}\n                  student_mail={up.email_id}\n                  student_first={up.first_name}\n                  student_last={up.last_name}\n                  topic={up.topic}\n                  date={up.req_date}\n                  time={up.time_slot}\n                />\n              ) : (\n                <Row>\n                  <Col>\n                    <h5>\n                      Meeting Url:{\" \"}\n                      <a href={up.meeting_url} target=\"_blank\">\n                        {up.meeting_url}\n                      </a>\n                    </h5>\n                  </Col>\n                </Row>\n              ))}\n            </Col>\n            <Col sm={3}>\n              <img src={up.image_link} className=\"profilepic2\"></img>\n            </Col>\n          </Row>\n          <Row style={{textAlign: \"center\"}}>\n            <Col>\n              {!this.props.is_teacher && (\n                <SessionCompleted\n                  session_id={up.session_id}\n                  teacher_id={up.teacher_id}\n                  refresh={this.refresh}\n                  topic={up.topic}\n                  first_name={up.first_name}\n                  last_name={up.last_name}\n                  email={up.email_id}\n                />\n              )}\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    ))\n\n    const pending_teachers = this.props.is_teacher ? this.props.pending_requests.map((req) => (\n      <React.Fragment key={req.request_id}>\n        <div className=\"spaceout-tabs-contents\">\n          <Button color=\"none\" style={{float: \"right\"}} onClick={() => this.delete_pending(req.request_id, this.props.user_id)}><i class=\"bi bi-trash\"></i><br/><br/></Button>\n          <Row>\n            <Col sm={9}>\n              <h4><b>{this.props.all_subjects[parseInt(req.subject_id) - 1].subject_name}</b> - {req.topic}</h4><br/>\n              <Row>\n                <Col sm={4}>\n                  <h5>📅 {String(req.req_date).slice(0, 10)}</h5>\n                </Col>\n                <Col sm={4}>\n                  <h5>⏲️ {req.time_slot}</h5>\n                </Col>\n                <Col sm={4}>\n                  <h5>\n                    🔡 {this.props.all_languages[parseInt(req.language_id) - 1].language_name}\n                  </h5>\n                </Col>\n              </Row><br/>\n              <h5><b>Student:</b> {req.user.first_name} {req.user.last_name}, {req.user.qualification}</h5>\n              <h5><b>Grade:</b> {req.user.grade}, {req.user.board}</h5>\n            </Col>\n            <Col sm={3}>\n              <img src={req.user.image_link} className=\"profilepic2\"></img> \n            </Col>\n          </Row>\n          <Row className=\"center\">\n             <Col>\n              <h6><b>Status: </b>\n              {\n                  req.final === 0 && req.approved === 0 &&\n                  <span style={{color: \"green\"}}>Student hasn't confirmed any mentor yet</span>\n                }\n                {\n                  req.final === 0 && req.approved === 1 &&\n                  <span style={{color: \"red\"}}>Student has chosen another mentor</span>\n                }\n                </h6>\n            </Col>\n          </Row>\n        </div>\n      </React.Fragment>\n    )):null\n\n    const pending = !this.props.is_teacher ? this.props.pending_requests.map((req) => (\n      <React.Fragment key={req.request_id}>\n        <div className=\"spaceout-tabs-contents\">\n          <h4><b>{this.props.all_subjects[parseInt(req.subject_id) - 1].subject_name}</b> - {req.topic}</h4><br/>\n          <Row>\n            <Col sm={4}>\n              <h5>📅 {String(req.req_date).slice(0, 10)}</h5>\n            </Col>\n            <Col sm={4}>\n              <h5>⏲️ {req.time_slot}</h5>\n            </Col>\n            <Col sm={4}>\n              <h5>\n                🔡 {this.props.all_languages[parseInt(req.language_id) - 1].language_name}\n              </h5>\n            </Col>\n          </Row><br/>\n          { req !== undefined &&\n            req.entry.length === 0 && req.mentor_specific === -1?\n            <span>\n              <h5>Your request has not yet been accepted by any mentor.</h5>\n            </span> :\n            (req.mentor_specific === -1 ?\n            <React.Fragment>\n                <h5>Accepted! View profile and select mentor.</h5>\n                {\n                  req.entry.map((entr, index) => (\n                    <span key={entr.mentor_id}>\n                      <PendingReqMentor index={index} user_id={entr.mentor_id} username={entr.username} request_id={req.request_id}/>\n                    </span>\n                  ))\n                }\n            </React.Fragment> : <Row><h5>This request is mentor specific</h5></Row>)\n          }\n        </div>\n      </React.Fragment>\n    )): null;\n\n    const past = this.props.past_sessions.map((up) => (\n      <React.Fragment key={up.session_id}>\n        <Container className=\"spaceout-tabs-contents\">\n          <Row>\n            <Col>\n              <h4><b>{this.props.all_subjects[up.subject_id - 1].subject_name}</b> - {up.topic}</h4>\n              <Row>\n                <Col sm={4}>\n                  <h5>📅 {String(up.req_date).slice(0, 10)}</h5>\n                </Col>\n                <Col sm={3}>\n                  <h5>⏲️ {up.time_slot}</h5>\n                </Col>\n                <Col sm={2}>\n                  <h5>🔡 {this.props.all_languages[up.language_id - 1].language_name}</h5>\n                </Col>\n              </Row><br/>\n              {!this.props.is_teacher ? (\n                <React.Fragment>\n                  <h5><b>Mentor:</b> {up.first_name} {up.last_name}, {up.qualification}</h5>\n                </React.Fragment>\n              ) :\n                <React.Fragment>\n                <h5><b>Student:</b> {up.first_name} {up.last_name}, {up.qualification}</h5>\n                <h5><b>Grade:</b> {up.grade}, {up.board}</h5>\n              </React.Fragment>\n              }\n              <Row>\n                <Col className=\"padded\">\n                  <h4>\n                    {\n                      this.props.is_teacher ?\n                      <b>🎖️Your Rating: {up.review}/5</b>:\n                      <b>🎖️You Rated: {up.review}/5</b>\n                    }\n                  </h4>\n                </Col>\n              </Row>\n            </Col>\n            <Col sm={3}>\n              <img src={up.image_link} className=\"profilepic2\"></img>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    ));\n\n    return (\n      <div className=\"toplookout\">\n        {!this.props.LoggedIn && (\n          <React.Fragment>\n            <LandingPage />\n          </React.Fragment>\n        )}\n        {this.props.is_admin && (\n          <React.Fragment>\n            <AdminHome />\n          </React.Fragment>\n        )}\n        {this.props.LoggedIn && !this.props.is_admin && (\n          <React.Fragment>\n            <Container>\n              <Col style={{ textAlign: \"left\" }}>\n                {this.props.LoggedIn && !this.props.is_teacher && (\n                  <ReqSession />\n                )}\n                {this.props.LoggedIn && this.props.is_teacher && (\n                  <React.Fragment>\n                    { this.props.verfied === 1 ?\n                      <main role=\"main\">\n                      <div className=\"row d-flex justify-content-center\">\n                        <div className=\"col-12 col-sm-6 text-center\" id=\"req-session\">\n                          <section id=\"prompt\">\n                            <h3>Help curious students get the best out of their education!</h3><br/>\n                            <p>\n                              Check if there are any requests for sessions in the subjects of your expertise, and accept if you would like to conduct the session.\n                            </p>\n                          </section>\n                          <Link className=\"btn btn-info\" to=\"/View_Requests\">\n                            View New Requests\n                          </Link><hr/>\n                        </div>\n                      </div>\n                    </main>:(\n                      this.props.verfied === 0 ?\n                        <main role=\"main\" className=\"text-center\">\n                          <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                          <h2>Your account is pending for verification.</h2>\n                          <p>You will be able to participate once the administrator verifies your profile.<br/>\n                          If you think it has already been verified, try refreshing the page.</p>\n                        </main> :\n                        <main role=\"main\" className=\"text-center\">\n                          <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                          <h3>Sorry {this.props.first_name} {this.props.last_name}, your account has been <span style={{color: \"red\"}}>suspended</span></h3>\n                        </main>\n                    )\n                    }\n                  </React.Fragment>\n                )}\n              </Col>\n            </Container>\n            <br></br><br/>\n            {this.props.LoggedIn && (\n              <React.Fragment>\n                { ((this.props.is_teacher && this.props.verfied === 1) || (!this.props.is_teacher)) &&\n                  <React.Fragment>\n                    <ButtonGroup>\n                      {this.state.show_upcom ? <Button color=\"success\" onClick={this.showupcoming}>\n                        Upcoming Sessions\n                      </Button> :\n                      <Button color=\"warning\" onClick={this.showupcoming}>\n                        Upcoming Sessions\n                      </Button>\n                      }\n                      {this.state.show_pend ? <Button color=\"success\" onClick={this.showpending}>\n                        Pending Requests\n                      </Button> :\n                      <Button color=\"warning\" onClick={this.showpending}>\n                        Pending Requests\n                      </Button>\n                      }\n                      {this.state.show_past ? <Button color=\"success\" onClick={this.showpast}>\n                        Past Sessions\n                      </Button>:\n                      <Button color=\"warning\" onClick={this.showpast}>\n                        Past Sessions\n                      </Button>\n                      }\n                      </ButtonGroup>\n                      <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                      <Button color=\"danger\" onClick={this.refresh}>\n                        Refresh Tab\n                      </Button>\n                      <Container\n                        style={{\n                          border: \"1px solid #cecece\",\n                          background: \"#f8f0fd\",\n                          height: \"500px\",\n                          overflow: \"auto\",\n                        }}\n                      >\n                      <Row>\n                        {this.state.show_upcom &&\n                          (this.props.upcoming_sessions.length === 0 ? (\n                            <Container style={{ textAlign: \"center\" }}>\n                              <main role=\"main\" className=\"text-center\">\n                                <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                                <h4>No upcoming Sessions.</h4>\n                                <h5>Refresh the page to get new sessions</h5>\n                              </main>\n                            </Container>\n                          ) : (\n                            <Container>{upcoming}</Container>\n                          ))}\n                        {this.state.show_pend &&\n                          (this.props.pending_requests.length === 0 ? (\n                            <Container style={{ textAlign: \"center\" }}>\n                              <main role=\"main\" className=\"text-center\">\n                                <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                                <h4>No Pending Requests.</h4>\n                                <h5>Refresh the page to get new requests</h5>\n                              </main>\n                            </Container>\n                          ) : (this.props.is_teacher ?\n                            <Container>{pending_teachers}</Container>:\n                            <Container>{pending}</Container>\n                          ))}\n                        {this.state.show_past &&\n                          (this.props.past_sessions.length === 0 ? (\n                            <Container style={{ textAlign: \"center\" }}>\n                              <main role=\"main\" className=\"text-center\">\n                                <i class=\"bi bi-exclamation-triangle\"></i><br/><br/>\n                                <h4>No past Sessions.</h4>\n                              </main>\n                            </Container>\n                          ) : (\n                            <Container>{past}</Container>\n                          ))}\n                      </Row>\n                    </Container>\n                  </React.Fragment>\n                }\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        )}\n        {this.props.LoggedIn &&\n          !this.props.is_teacher &&\n          !this.props.is_admin && <Recommendations />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    LoggedIn: state.users.loggedIn,\n    is_teacher: state.users.is_teacher,\n    upcoming_sessions: state.session.upcoming_sessions,\n    pending_requests: state.session.pending_requests,\n    past_sessions: state.session.past_sessions,\n    user_id: state.users.user_id,\n    all_subjects: state.users.all_subjects,\n    all_languages: state.users.all_languages,\n    is_admin: state.users.is_admin,\n    verfied: state.users.verfied\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchHome: (id, is_teacher) => dispatch(fetch_home(id, is_teacher)),\n    del_pending: (value) => dispatch(del_pend(value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/LandingPage.js",["188","189","190","191","192","193","194","195"],"import axios from 'axios';\nimport React, {Component} from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Col, Collapse, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport landing_cover from \"../../landing_cover.png\";\n\nclass LandingPage extends Component {\n\n  constructor() {\n    super()\n  }\n\n  render() {\n    return(\n      <div>\n        <main role=\"main\" class=\"container\">\n          <div className=\"row\" id=\"landing-content\">\n            <div className=\"col-12 col-md-5\">\n              <h1 id=\"title\">OpenSchool</h1>\n              <section id=\"about\">\n                <p>Do you need some one-on-one help with schoolwork? Or are you curious about something they don't teach in school?</p>\n                <p>Are you a passionate teacher or academic professional who loves to help young students learn beyond the classroom?</p>\n                <p>Join OpenSchool - the voluntary mentoring platform and participate in one-on-one sessions about anything that sparks your curiosity!</p>\n              </section>\n              <Link className=\"btn btn-info btn-lg\" id=\"join-btn\" to=\"/Register\">Join Now!</Link>\n            </div>\n            <div className=\"col-12 col-md-7\">\n              <img src={landing_cover} id=\"cover\" alt=\"graphic\" width=\"100%\"/>\n            </div>\n          </div>\n        </main>\n      </div>\n    )\n  }\n\n}\nexport default LandingPage;\n","/home/chetas/projects/se_project/eduapp/src/components/Sessions/MeetingLinkShare.js",["196","197","198"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, FormGroup, Input, Label, Row } from \"reactstrap\";\nimport { fetch_home } from \"../../redux/Session/sessionAction\";\nimport Prompt from \"../Prompt\";\n\nclass MeetingLinkShare extends Component {\n  constructor() {\n    super();\n    this.state = {\n      meetingUrL: \"\",\n      urlsent: false,\n    };\n  }\n\n  changeurl = (e) => {\n    this.setState({\n      meetingUrL: e.target.value,\n    });\n  };\n\n  share = () => {\n    console.log(this.state);\n    var body = {\n      meeting_url: this.state.meetingUrL,\n      session_id: this.props.session_id,\n    };\n    var url;\n    try {\n      url = new URL(this.state.meetingUrL)\n      console.log(url.protocol)\n      if(url.protocol == \"https:\") {\n\n        axios\n          .post(\"http://localhost:5000/session/send_meeting_url\", body)\n          .then((res) => {\n            // this.setState({\n            //     urlsent: true\n            // })\n            var bod = {\n              type: \"student_send_url\",\n              receiver: this.props.student_mail,\n              first_name: this.props.student_first,\n              last_name: this.props.student_last,\n              topic: this.props.topic,\n              date: this.props.date,\n              time: this.props.time,\n              meeting_url: this.state.meetingUrL,\n            };\n            axios\n              .post(\"http://localhost:5000/users/sendmail\", bod)\n              .then((re) => {\n                console.log(\"Email sent\");\n              })\n              .catch((er) => {\n                console.log(\"mail not sent\");\n              });\n            bod.type = \"teacher_send_url\";\n            bod.first_name = this.props.first_name;\n            bod.last_name = this.props.last_name;\n            bod.receiver = this.props.email;\n            axios\n              .post(\"http://localhost:5000/users/sendmail\", bod)\n              .then((re) => {\n                console.log(\"Email sent\");\n              })\n              .catch((er) => {\n                console.log(\"mail not sent\");\n              });\n            this.props.fetchHome(this.props.user_id, this.props.is_teacher);\n          })\n          .catch((err) => {\n            console.log(err.message);\n          });\n      }\n      else {\n        alert(\"Please enter a valid meeting link\")\n      }\n    }\n    catch {\n      alert(\"Please enter a valid meeting link lol\")\n    }\n\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.urlsent && (\n          <FormGroup row>\n            {\" \"}\n            <Col sm={3}>\n              <h5>\n                <Label for=\"meeting\">\n                  Meeting URL:\n                </Label>\n              </h5>\n            </Col>\n            <Col sm={7}>\n              <Input\n                type=\"text\"\n                name=\"meeting\"\n                id=\"meeting\"\n                placeholder=\"Share meeting url here\"\n                onChange={this.changeurl}\n                value={this.state.meetingUrL}\n              ></Input>\n            </Col>\n            <Col sm={2}>\n              <Prompt color=\"success\" buttext=\"Share\" captext=\"Are you sure this is the final link?\" func={this.share} param={null}></Prompt>\n            </Col>\n          </FormGroup>\n        )}\n        {/* {\n                    this.state.urlsent &&\n                    <Row>\n                        <Col>\n                            Meeting Url: <a href={this.state.meetingUrL} target=\"_blank\">{this.state.meetingUrL}</a>\n                        </Col>\n                    </Row>\n                } */}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    first_name: state.users.first_name,\n    last_name: state.users.last_name,\n    email: state.users.email_id,\n    user_id: state.users.user_id,\n    is_teacher: state.users.is_teacher,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchHome: (id, is_teacher) => dispatch(fetch_home(id, is_teacher)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MeetingLinkShare);\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/Recommendations.js",["199","200","201"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Container, Row } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\nimport ReqIndiSession from \"../Sessions/ReqIndiSession\";\n\nclass Recommendations extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recomms: [],\n    };\n  }\n\n  componentDidMount() {\n    // if(this.props.loggedIn)\n    if (!this.props.is_admin && this.props.loggedIn) {\n      axios\n        .get(\"http://localhost:5000/users/recommendations\", {\n          params: {\n            student_id: this.props.user_id,\n          },\n        })\n        .then((response) => {\n          this.setState({\n            recomms: response.data,\n          });\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.user_id != this.props.user_id && !this.props.is_admin) {\n      axios\n        .get(\"http://localhost:5000/users/recommendations\", {\n          params: {\n            student_id: this.props.user_id,\n          },\n        })\n        .then((response) => {\n          this.setState({\n            recomms: response.data,\n          });\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    }\n  }\n\n  render() {\n    const recommens = this.state.recomms.map((rec) => (\n      <React.Fragment key={rec.user_id}>\n        <Container className=\"text-left\" style={{ background: \"#f8f0fd\", padding: 30 }}>\n          <Row>\n            <Col sm={3}>\n              <img src={rec.image_link} className=\"profilepic2\"></img>\n            </Col>\n            <Col>\n              <h4><b>{rec.first_name} {rec.last_name}</b></h4>\n              <h5>{rec.qualification}</h5><br/>\n              <Row>\n                <Col sm={4}>\n                  <h5>📖 Sessions Taken: {rec.sessions_taken}</h5>\n                </Col>\n                <Col sm={4}>\n                  <h5>\n                    🎖️ Average Rating :{\" \"}\n                    {(rec.rating_points / rec.sessions_taken).toFixed(2)}\n                  </h5>\n                </Col>\n              </Row><br/>\n              {/* <Button color=\"success\" onClick={}>Request session from {rec.first_name}</Button> */}\n              <ReqIndiSession {...rec} /><br/>\n            </Col>\n          </Row>\n          <hr/>\n        </Container>\n      </React.Fragment>\n    ));\n\n    return (\n      <Container>\n        {\n          <React.Fragment>\n           <br/><br/><hr/><br/><br/>\n           <h2 className=\"dashboard font1\">Recommendations</h2><br/>\n            {this.state.recomms.length === 0 ? (\n              <div className=\"text-left\">\n                <h5>Add your favorite subjects to your profile so we can recommend mentors!</h5>\n                <Link className=\"btn btn-warning btn-lg\" to=\"/Profile\">\n                  Add Now!\n                </Link>\n              </div>\n            ) : (\n              <Container style={{\n                border: \"1px solid #cecece\",\n                background: \"#f8f0fd\",\n                height: \"500px\",\n                overflow: \"auto\",\n              }}>{recommens}</Container>\n            )}\n          </React.Fragment>\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user_id: state.users.user_id,\n    // loggedin: state.users.loggedIn,\n    loggedIn: 1,\n    is_admin: state.admin.is_admin,\n  };\n};\n\nexport default connect(mapStateToProps)(Recommendations);\n","/home/chetas/projects/se_project/eduapp/src/redux/Session/sessionAction.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqSession.js",["202","203","204","205","206","207","208","209","210","211"],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/SessionCompleted.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Admin/AdminHome.js",["212","213","214"],"import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Col, Collapse, Container, Table } from \"reactstrap\";\nimport { fetchAllUsers, verifyTeacher } from \"../../redux/Admin/adminActions\";\n\nclass AdminHome extends Component {\n  constructor() {\n    super();\n    this.state = {\n      teacher_toggle: true,\n      student_toggle: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllusers();\n  }\n\n  // refresh = () => {\n  //     this.props.fetchAllUsers();\n  // }\n\n  toggle_mentor = () => {\n    this.setState({\n      teacher_toggle: !this.state.teacher_toggle,\n    });\n  };\n\n  toggle_student = () => {\n    this.setState({\n      student_toggle: !this.state.student_toggle,\n    });\n  };\n\n  verify = (id, email_id, first_name, last_name) => {\n    // alert(`verified ${id}`)\n    const data = {\n      user_id: id,\n    };\n    axios\n      .post(\"http://localhost:5000/users/verify\", data)\n      .then((response) => {\n        alert(\"Profile verified\");\n        const value = {\n          user_id: id,\n          verify: 1,\n        };\n        this.props.verifyUser(value);\n        var bod = {\n          type: \"send_verification\",\n          receiver: email_id,\n          first_name: first_name,\n          last_name: last_name,\n        };\n        axios\n          .post(\"http://localhost:5000/users/sendmail\", bod)\n          .then((re) => {\n            console.log(\"Email sent successfully\");\n          })\n          .catch((err) => {\n            console.log(\"Error in sending mail\");\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  suspend = (id, email_id, first_name, last_name) => {\n    const data = {\n      user_id: id,\n    };\n    axios\n      .post(\"http://localhost:5000/users/suspend\", data)\n      .then((response) => {\n        alert(\"Profile suspended\");\n        const value = {\n          user_id: id,\n          verify: 2,\n        };\n        this.props.verifyUser(value);\n        var bod = {\n          type: \"send_suspension\",\n          receiver: email_id,\n          first_name: first_name,\n          last_name: last_name,\n        };\n        axios\n          .post(\"http://localhost:5000/users/sendmail\", bod)\n          .then((re) => {\n            console.log(\"Email sent successfully\");\n          })\n          .catch((err) => {\n            console.log(\"Error in sending mail\");\n          });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  changeVerfied = (id) => {\n    //console.log(\"teacher obj is \", teacher);\n    //teacher.verfied = 2;\n    const data = {\n      user_id: id,\n    };\n    axios\n      .post(\"http://localhost:5000/users/changeVerfied\", data)\n      .then((response) => {\n        alert(\"Profile status reverted\");\n        const value = {\n          user_id: id,\n          verify: 0,\n        };\n        this.props.verifyUser(value);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  render() {\n    var mentor_table = this.props.teachers.map((teacher) => (\n      <tr key={teacher.user_id}>\n        <td>\n          {teacher.first_name} {teacher.last_name}\n        </td>\n        <td>{teacher.email_id}</td>\n        <td>{teacher.qualification}</td>\n        <td>\n          <a href={teacher.doc_link} target=\"_blank\">\n            View\n          </a>\n        </td>\n        <td>\n          {teacher.verfied == 0 ? (\n            <React.Fragment>\n              <i className=\"bi bi-check-square-fill\"\n                onClick={() =>\n                  this.verify(\n                    teacher.user_id,\n                    teacher.email_id,\n                    teacher.first_name,\n                    teacher.last_name\n                  )\n                }\n              >\n              </i>\n              &nbsp;\n              <i className=\"bi bi-x-square-fill\"\n                onClick={() =>\n                  this.suspend(\n                    teacher.user_id,\n                    teacher.email_id,\n                    teacher.first_name,\n                    teacher.last_name\n                  )\n                }\n              >\n              </i>\n            </React.Fragment>\n          ) : teacher.verfied == 1 ? (\n            <p style={{ color: \"green\" }}>Verified</p>\n          ) : (\n            <p style={{ color: \"red\" }}>Suspended</p>\n          )}\n        </td>\n        <td><Button onClick = {() => this.changeVerfied(teacher.user_id)}>Change</Button></td>\n      </tr>\n    ));\n\n    var student_table = this.props.students.map((student) => (\n      <tr key={student.user_id}>\n        <td>\n          {student.first_name} {student.last_name}\n        </td>\n        <td>{student.email_id}</td>\n        <td>{student.grade}</td>\n        <td>{student.board}</td>\n      </tr>\n    ));\n\n    return (\n      <div>\n        <Container className=\"font1\">\n          <Col style={{ textAlign: \"center\" }}>\n            <br/><h2>Welcome, Admin!</h2><br/>\n          </Col>\n          <Col>\n            <Button\n              className=\"btn btn-info btn-lg\"\n              href=\"https://docs.google.com/spreadsheets/d/17-1omO8lJTXgLEPLchGxxXJvACAEa4XAmtVAbr3du7M/edit?usp=sharing\"\n              target=\"_blank\"\n            >\n              Check Session Feedback Responses\n            </Button><br/><br/><hr/><br/>\n          </Col>\n        </Container>\n        <Button\n          color=\"warning\"\n        >\n          Mentors waiting for verification\n        </Button>\n        &nbsp;&nbsp;\n        <Button color=\"danger\" onClick={() => this.props.fetchAllusers()}>\n          Refresh Tab\n        </Button>\n        <Collapse isOpen={this.state.teacher_toggle}>\n          <Container\n            style={{\n              border: \"1px solid black\",\n              height: \"500px\",\n              overflow: \"auto\",\n            }}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Qualification</th>\n                  <th>Documents</th>\n                  <th>Verify</th>\n                </tr>\n              </thead>\n              <tbody>{mentor_table}</tbody>\n            </Table>\n          </Container>\n        </Collapse>\n        <br></br>\n        <Button\n          color=\"warning\"\n          onClick={this.toggle_student}\n          style={{ marginBottom: \"1rem\", display:\"none\" }}\n        >\n          Students\n        </Button>\n        <Collapse isOpen={this.state.student_toggle}>\n          <Container\n            style={{\n              border: \"1px solid black\",\n              height: \"500px\",\n              overflow: \"auto\",\n            }}\n          >\n            <Table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Grade</th>\n                  <th>Board</th>\n                </tr>\n              </thead>\n              <tbody>{student_table}</tbody>\n            </Table>\n          </Container>\n        </Collapse>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    teachers: state.admin.teachers,\n    students: state.admin.students,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchAllusers: () => dispatch(fetchAllUsers()),\n    verifyUser: (value) => dispatch(verifyTeacher(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminHome);\n","/home/chetas/projects/se_project/eduapp/src/components/HomePage/PendingReqMentor.js",["215"],"import axios from 'axios'\nimport React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { Button, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap'\nimport { fetch_home } from '../../redux/Session/sessionAction';\n\nclass PendingReqMentor extends Component {\n    constructor() {\n        super()\n        this.state = {\n            modal: false,\n            teacher: '',\n        }\n    }\n\n    toggle = () => {\n        if(!this.state.modal) {\n            axios.get(\"http://localhost:5000/users/teacher\", {\n                params : {\n                    id: this.props.user_id\n                }\n            })\n            .then(response => {\n                this.setState({\n                    teacher: response.data[0]\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n        this.setState({\n            modal: !this.state.modal,\n            open: 1\n        })\n    }\n\n    confirm_sess = () => {\n        console.log(`Request is ${this.props.request_id}`)\n        var body = {\n            request_id: this.props.request_id,\n            teacher_id: this.props.user_id,\n            student_id: this.props.student_id,\n            completed: 0,\n            review: 0\n        }\n        axios.post(\"http://localhost:5000/session/approve_post\", body)\n        .then(response1 => {\n            alert(`You have successfully confirmed the approval of the session`)\n            var req = response1.data[0]\n            axios.post(\"http://localhost:5000/session/session\", body)\n            .then(response => {\n                this.props.fetchHome(this.props.student_id, this.props.is_teacher)\n                //console.log(response)\n                var bod1 = req\n                bod1.first_name = this.props.first_name\n                bod1.last_name = this.props.last_name \n                bod1.grade = this.props.grade\n                bod1.board = this.props.board\n                bod1.type = \"teacher_session_confirm\"\n                bod1.receiver = this.state.teacher.email_id\n                var bod = {\n                    request_id: this.props.request_id,\n                    mentor_id: this.state.teacher.user_id\n                }\n                axios.post(\"http://localhost:5000/session/set_approval\", bod)\n                .then(respo => {\n                    console.log(\"done\")\n                })\n                .catch(err => {\n                    console.log(err.message)\n                })\n                axios.post(\"http://localhost:5000/users/sendmail\", bod1)\n                .then(re => {\n                    console.log(\"Email sent successfully\")\n                })\n                .catch(err => {\n                    console.log(\"Error in sending mail\")\n                })\n\n                var bod2 = req\n                bod2.type = \"student_session_confirm\"\n                bod2.first_name = this.state.teacher.first_name\n                bod2.last_name = this.state.teacher.last_name\n                bod2.sessions_taken = this.state.teacher.sessions_taken\n                bod2.rating = this.state.teacher.rating_points\n                bod2.qualification = this.state.teacher.qualification\n                bod2.receiver = this.state.teacher.email_id\n                axios.post(\"http://localhost:5000/users/sendmail\", bod2)\n                .then(re => {\n                    console.log(\"Email sent successfully\")\n                })\n                .catch(err => {\n                    console.log(\"Error in sending mail\")\n                })\n            })\n            .catch(err => {\n                console.log(err.message)\n            })\n        })\n        .catch(err => {\n            console.log(err.message)\n        })\n        this.setState({\n            modal: !this.state.modal\n        })\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Button color=\"warning\" onClick={this.toggle}>{this.props.username}</Button>\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\n                <ModalHeader className=\"titleModal\">{this.state.teacher.first_name} {this.state.teacher.last_name}</ModalHeader>\n                    <ModalHeader className=\"titleModal\">\n                        <Col sm = \"auto\">\n                            <img\n                                style={{height: \"200px\"}}\n                                src={this.state.teacher.image_link}\n                                alt=\"mentor image\"\n                            ></img>\n                        </Col>\n                    </ModalHeader>\n                    <ModalBody>\n                        <Row>\n                            <Col lg=\"6\">Username:</Col>\n                            <Col lg=\"6\">{this.props.username}</Col>\n                        </Row>\n                        <Row>\n                            <Col lg=\"6\">Qualification:</Col>\n                            <Col lg=\"6\">{this.state.teacher.qualification}</Col>\n                        </Row>\n                        <Row>\n                            <Col lg=\"6\">Sessions Taken:</Col>\n                            <Col lg=\"6\">{this.state.teacher.sessions_taken}</Col>\n                        </Row>\n                        <Row>\n                            <Col lg=\"6\">Rating Points:</Col>\n                            <Col lg=\"6\">{this.state.teacher.rating_points}</Col>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"success\" onClick={this.confirm_sess}>\n                            Confirm Approval\n                        </Button>\n                        <Button color=\"danger\" onClick={this.toggle}>\n                            Back\n                        </Button>\n                    </ModalFooter>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      student_id: state.users.user_id,\n      first_name: state.users.first_name,\n      last_name: state.users.last_name,\n      email_id: state.users.email_id,\n      grade: state.users.grade,\n      board: state.users.board,\n      is_teacher: state.users.is_teacher\n    };\n  };\n\n  const mapDispatchToProps = (dispatch) => {\n    return {\n      fetchHome: (id, is_teacher) => dispatch(fetch_home(id, is_teacher)),\n    };\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PendingReqMentor)","/home/chetas/projects/se_project/eduapp/src/redux/Admin/adminActions.js",[],"/home/chetas/projects/se_project/eduapp/src/components/Sessions/ReqIndiSession.js",["216","217","218","219","220","221","222","223","224"],"/home/chetas/projects/se_project/eduapp/src/components/Prompt.js",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":8,"column":21,"nodeType":"231","messageId":"232","endLine":8,"endColumn":32},{"ruleId":"229","severity":1,"message":"233","line":8,"column":34,"nodeType":"231","messageId":"232","endLine":8,"endColumn":55},{"ruleId":"229","severity":1,"message":"234","line":9,"column":8,"nodeType":"231","messageId":"232","endLine":9,"endColumn":10},{"ruleId":"229","severity":1,"message":"235","line":16,"column":10,"nodeType":"231","messageId":"232","endLine":16,"endColumn":18},{"ruleId":"229","severity":1,"message":"236","line":17,"column":10,"nodeType":"231","messageId":"232","endLine":17,"endColumn":18},{"ruleId":"229","severity":1,"message":"237","line":18,"column":10,"nodeType":"231","messageId":"232","endLine":18,"endColumn":18},{"ruleId":"229","severity":1,"message":"238","line":19,"column":10,"nodeType":"231","messageId":"232","endLine":19,"endColumn":19},{"ruleId":"229","severity":1,"message":"239","line":19,"column":21,"nodeType":"231","messageId":"232","endLine":19,"endColumn":30},{"ruleId":"229","severity":1,"message":"240","line":20,"column":10,"nodeType":"231","messageId":"232","endLine":20,"endColumn":18},{"ruleId":"229","severity":1,"message":"241","line":20,"column":20,"nodeType":"231","messageId":"232","endLine":20,"endColumn":28},{"ruleId":"242","severity":1,"message":"243","line":29,"column":6,"nodeType":"244","endLine":29,"endColumn":22,"suggestions":"245"},{"ruleId":"229","severity":1,"message":"246","line":1,"column":8,"nodeType":"231","messageId":"232","endLine":1,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":12,"column":52,"nodeType":"249","messageId":"250","endLine":12,"endColumn":54},{"ruleId":"247","severity":1,"message":"248","line":37,"column":57,"nodeType":"249","messageId":"250","endLine":37,"endColumn":59},{"ruleId":"229","severity":1,"message":"251","line":10,"column":5,"nodeType":"231","messageId":"232","endLine":10,"endColumn":12},{"ruleId":"252","severity":1,"message":"253","line":98,"column":118,"nodeType":"254","endLine":98,"endColumn":133},{"ruleId":"229","severity":1,"message":"255","line":2,"column":52,"nodeType":"231","messageId":"232","endLine":2,"endColumn":67},{"ruleId":"229","severity":1,"message":"256","line":3,"column":49,"nodeType":"231","messageId":"232","endLine":3,"endColumn":52},{"ruleId":"229","severity":1,"message":"257","line":3,"column":54,"nodeType":"231","messageId":"232","endLine":3,"endColumn":63},{"ruleId":"247","severity":1,"message":"248","line":47,"column":17,"nodeType":"249","messageId":"250","endLine":47,"endColumn":19},{"ruleId":"229","severity":1,"message":"258","line":4,"column":69,"nodeType":"231","messageId":"232","endLine":4,"endColumn":72},{"ruleId":"247","severity":1,"message":"248","line":38,"column":47,"nodeType":"249","messageId":"250","endLine":38,"endColumn":49},{"ruleId":"247","severity":1,"message":"248","line":110,"column":36,"nodeType":"249","messageId":"250","endLine":110,"endColumn":38},{"ruleId":"229","severity":1,"message":"259","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":16},{"ruleId":"260","severity":1,"message":"261","line":67,"column":17,"nodeType":"231","messageId":"262","endLine":67,"endColumn":21},{"ruleId":"247","severity":1,"message":"248","line":176,"column":40,"nodeType":"249","messageId":"250","endLine":176,"endColumn":42},{"ruleId":"247","severity":1,"message":"248","line":193,"column":44,"nodeType":"249","messageId":"250","endLine":193,"endColumn":46},{"ruleId":"229","severity":1,"message":"263","line":17,"column":3,"nodeType":"231","messageId":"232","endLine":17,"endColumn":14},{"ruleId":"247","severity":1,"message":"264","line":132,"column":47,"nodeType":"249","messageId":"250","endLine":132,"endColumn":49},{"ruleId":"229","severity":1,"message":"265","line":184,"column":7,"nodeType":"231","messageId":"232","endLine":184,"endColumn":17},{"ruleId":"266","severity":1,"message":"267","line":274,"column":21,"nodeType":"254","endLine":277,"endColumn":22},{"ruleId":"229","severity":1,"message":"268","line":15,"column":20,"nodeType":"231","messageId":"232","endLine":15,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":52,"column":27,"nodeType":"249","messageId":"250","endLine":52,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":58,"column":121,"nodeType":"249","messageId":"250","endLine":58,"endColumn":123},{"ruleId":"247","severity":1,"message":"264","line":173,"column":28,"nodeType":"249","messageId":"250","endLine":173,"endColumn":30},{"ruleId":"229","severity":1,"message":"269","line":8,"column":3,"nodeType":"231","messageId":"232","endLine":8,"endColumn":12},{"ruleId":"229","severity":1,"message":"270","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":8},{"ruleId":"229","severity":1,"message":"271","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":8},{"ruleId":"247","severity":1,"message":"264","line":78,"column":27,"nodeType":"249","messageId":"250","endLine":78,"endColumn":29},{"ruleId":"272","severity":1,"message":"273","line":120,"column":25,"nodeType":"254","endLine":120,"endColumn":66},{"ruleId":"272","severity":1,"message":"273","line":146,"column":23,"nodeType":"254","endLine":146,"endColumn":64},{"ruleId":"266","severity":1,"message":"267","line":155,"column":15,"nodeType":"254","endLine":155,"endColumn":64},{"ruleId":"266","severity":1,"message":"267","line":201,"column":15,"nodeType":"254","endLine":201,"endColumn":70},{"ruleId":"266","severity":1,"message":"267","line":300,"column":15,"nodeType":"254","endLine":300,"endColumn":64},{"ruleId":"229","severity":1,"message":"274","line":1,"column":8,"nodeType":"231","messageId":"232","endLine":1,"endColumn":13},{"ruleId":"229","severity":1,"message":"275","line":3,"column":10,"nodeType":"231","messageId":"232","endLine":3,"endColumn":17},{"ruleId":"229","severity":1,"message":"259","line":4,"column":10,"nodeType":"231","messageId":"232","endLine":4,"endColumn":16},{"ruleId":"229","severity":1,"message":"256","line":4,"column":18,"nodeType":"231","messageId":"232","endLine":4,"endColumn":21},{"ruleId":"229","severity":1,"message":"276","line":4,"column":23,"nodeType":"231","messageId":"232","endLine":4,"endColumn":31},{"ruleId":"229","severity":1,"message":"257","line":4,"column":33,"nodeType":"231","messageId":"232","endLine":4,"endColumn":42},{"ruleId":"229","severity":1,"message":"277","line":4,"column":44,"nodeType":"231","messageId":"232","endLine":4,"endColumn":49},{"ruleId":"278","severity":1,"message":"279","line":10,"column":3,"nodeType":"280","messageId":"281","endLine":12,"endColumn":4},{"ruleId":"229","severity":1,"message":"259","line":4,"column":10,"nodeType":"231","messageId":"232","endLine":4,"endColumn":16},{"ruleId":"229","severity":1,"message":"258","line":4,"column":48,"nodeType":"231","messageId":"232","endLine":4,"endColumn":51},{"ruleId":"247","severity":1,"message":"248","line":33,"column":23,"nodeType":"249","messageId":"250","endLine":33,"endColumn":25},{"ruleId":"229","severity":1,"message":"259","line":4,"column":10,"nodeType":"231","messageId":"232","endLine":4,"endColumn":16},{"ruleId":"247","severity":1,"message":"264","line":37,"column":27,"nodeType":"249","messageId":"250","endLine":37,"endColumn":29},{"ruleId":"266","severity":1,"message":"267","line":61,"column":15,"nodeType":"254","endLine":61,"endColumn":65},{"ruleId":"229","severity":1,"message":"274","line":1,"column":8,"nodeType":"231","messageId":"232","endLine":1,"endColumn":13},{"ruleId":"229","severity":1,"message":"282","line":9,"column":3,"nodeType":"231","messageId":"232","endLine":9,"endColumn":14},{"ruleId":"229","severity":1,"message":"258","line":14,"column":3,"nodeType":"231","messageId":"232","endLine":14,"endColumn":6},{"ruleId":"247","severity":1,"message":"248","line":62,"column":30,"nodeType":"249","messageId":"250","endLine":62,"endColumn":32},{"ruleId":"247","severity":1,"message":"248","line":62,"column":56,"nodeType":"249","messageId":"250","endLine":62,"endColumn":58},{"ruleId":"247","severity":1,"message":"248","line":62,"column":86,"nodeType":"249","messageId":"250","endLine":62,"endColumn":88},{"ruleId":"247","severity":1,"message":"248","line":62,"column":120,"nodeType":"249","messageId":"250","endLine":62,"endColumn":122},{"ruleId":"247","severity":1,"message":"248","line":62,"column":156,"nodeType":"249","messageId":"250","endLine":62,"endColumn":158},{"ruleId":"247","severity":1,"message":"248","line":62,"column":188,"nodeType":"249","messageId":"250","endLine":62,"endColumn":190},{"ruleId":"247","severity":1,"message":"264","line":109,"column":25,"nodeType":"249","messageId":"250","endLine":109,"endColumn":27},{"ruleId":"272","severity":1,"message":"273","line":133,"column":11,"nodeType":"254","endLine":133,"endColumn":54},{"ruleId":"247","severity":1,"message":"248","line":138,"column":28,"nodeType":"249","messageId":"250","endLine":138,"endColumn":30},{"ruleId":"247","severity":1,"message":"248","line":164,"column":31,"nodeType":"249","messageId":"250","endLine":164,"endColumn":33},{"ruleId":"283","severity":1,"message":"284","line":117,"column":29,"nodeType":"254","endLine":121,"endColumn":30},{"ruleId":"229","severity":1,"message":"282","line":4,"column":49,"nodeType":"231","messageId":"232","endLine":4,"endColumn":60},{"ruleId":"229","severity":1,"message":"258","line":4,"column":93,"nodeType":"231","messageId":"232","endLine":4,"endColumn":96},{"ruleId":"247","severity":1,"message":"248","line":49,"column":34,"nodeType":"249","messageId":"250","endLine":49,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":49,"column":60,"nodeType":"249","messageId":"250","endLine":49,"endColumn":62},{"ruleId":"247","severity":1,"message":"248","line":49,"column":90,"nodeType":"249","messageId":"250","endLine":49,"endColumn":92},{"ruleId":"247","severity":1,"message":"248","line":49,"column":124,"nodeType":"249","messageId":"250","endLine":49,"endColumn":126},{"ruleId":"247","severity":1,"message":"248","line":49,"column":160,"nodeType":"249","messageId":"250","endLine":49,"endColumn":162},{"ruleId":"247","severity":1,"message":"248","line":49,"column":192,"nodeType":"249","messageId":"250","endLine":49,"endColumn":194},{"ruleId":"247","severity":1,"message":"264","line":95,"column":28,"nodeType":"249","messageId":"250","endLine":95,"endColumn":30},"no-native-reassign",["285"],"no-negated-in-lhs",["286"],"no-unused-vars","'getInterest' is defined but never used.","Identifier","unusedVar","'set_all_lang_and_subs' is defined but never used.","'Tp' is defined but never used.","'LoggedIn' is assigned a value but never used.","'Username' is assigned a value but never used.","'Password' is assigned a value but never used.","'all_langs' is assigned a value but never used.","'set_langs' is assigned a value but never used.","'all_subs' is assigned a value but never used.","'set_subs' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["287"],"'sessionReducer' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'NavLink' is defined but never used.","react/jsx-pascal-case","Imported JSX component Request_view must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'SET_MEETING_URL' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Button' is defined but never used.","no-redeclare","'body' is already defined.","redeclared","'getlanguage' is defined but never used.","Expected '!==' and instead saw '!='.","'image_link' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Router' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'axios' is defined but never used.","'connect' is defined but never used.","'Collapse' is defined but never used.","'Table' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ModalFooter' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},"Update the dependencies array to be: [props, props.loggedIn]",{"range":"290","text":"291"},[856,872],"[props, props.loggedIn]"]